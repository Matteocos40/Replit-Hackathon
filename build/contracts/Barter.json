{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_itemValue",
          "type": "uint256"
        }
      ],
      "name": "collateralizedPurchase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "emergencyExit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "exchangeNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "handleDefault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanTracker",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOwed",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "sellerCollateralNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "totalValueBorrowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "valueBorrowedOneNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "1": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "2": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721Receiver.sol",
    "3": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "4": "contracts/Barter.sol"
  },
  "ast": {
    "absolutePath": "contracts/Barter.sol",
    "exportedSymbols": {
      "Barter": [
        509
      ],
      "IERC165": [
        733
      ],
      "IERC20": [
        587
      ],
      "IERC721": [
        703
      ],
      "IERC721Receiver": [
        721
      ]
    },
    "id": 510,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 704,
        "src": "57:58:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 588,
        "src": "116:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 722,
        "src": "173:66:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 721,
              "src": "355:15:4"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "355:15:4"
          }
        ],
        "canonicalName": "Barter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 509,
        "linearizedBaseContracts": [
          509,
          721
        ],
        "name": "Barter",
        "nameLocation": "345:6:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Barter.userBorrow",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "amountOwed",
                "nameLocation": "538:10:4",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "530:18:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "530:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "566:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "558:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "558:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "589:6:4",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "581:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "613:9:4",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "605:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "605:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "userBorrow",
            "nameLocation": "509:10:4",
            "nodeType": "StructDefinition",
            "scope": 509,
            "src": "502:127:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "totalborrowedETH",
            "nameLocation": "727:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "699:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "707:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "699:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 17,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "718:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "946ccfc0",
            "id": 28,
            "mutability": "mutable",
            "name": "loanTracker",
            "nameLocation": "937:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "851:97:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow)))"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "859:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "851:70:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow)))"
              },
              "valueType": {
                "id": 26,
                "keyType": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "878:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "870:50:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                  "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow))"
                },
                "valueType": {
                  "id": 25,
                  "keyType": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "889:30:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                    "typeString": "mapping(uint256 => struct Barter.userBorrow)"
                  },
                  "valueType": {
                    "id": 24,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23,
                      "name": "userBorrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15,
                      "src": "908:10:4"
                    },
                    "referencedDeclaration": 15,
                    "src": "908:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_userBorrow_$15_storage_ptr",
                      "typeString": "struct Barter.userBorrow"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "ad5c4648",
            "id": 31,
            "mutability": "constant",
            "name": "WETH",
            "nameLocation": "1015:4:4",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "991:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "991:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1022:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1079:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "1071:13:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1071:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "1105:35:4",
              "statements": [
                {
                  "expression": {
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1115:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 37,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1123:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1123:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1115:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:18:4"
                }
              ]
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:2:4"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1105:0:4"
            },
            "scope": 509,
            "src": "1091:49:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "1167:80:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1185:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1185:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 47,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1199:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1185:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d7573742068617665206f776e657220726f6c65",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1206:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8500f3083778089e2df10724173cd0ca2dddb741595cc08db3f10559aa9024f5",
                          "typeString": "literal_string \"must have owner role\""
                        },
                        "value": "must have owner role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8500f3083778089e2df10724173cd0ca2dddb741595cc08db3f10559aa9024f5",
                          "typeString": "literal_string \"must have owner role\""
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1177:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:52:4"
                },
                {
                  "id": 52,
                  "nodeType": "PlaceholderStatement",
                  "src": "1239:1:4"
                }
              ]
            },
            "id": 54,
            "name": "onlyOwner",
            "nameLocation": "1155:9:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:4"
            },
            "src": "1146:101:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "1546:257:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1770:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 71,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1778:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1787:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 67,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "1742:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "1734:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$703_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1734:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$703",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 646,
                      "src": "1734:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1734:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1734:62:4"
                }
              ]
            },
            "documentation": {
              "id": 55,
              "nodeType": "StructuredDocumentation",
              "src": "1253:152:4",
              "text": "@notice function transfers ownership from buyer to seller\n@dev the calling contract/function must approve the transfer to the seller's address"
            },
            "functionSelector": "0b1eedb8",
            "id": 76,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeNFT",
            "nameLocation": "1419:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "1448:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1440:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "1472:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1464:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "1497:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1489:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "1524:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1516:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1430:108:4"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1546:0:4"
            },
            "scope": 509,
            "src": "1410:393:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "2402:1145:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 90,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "2776:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 92,
                            "indexExpression": {
                              "id": 91,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "2788:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2776:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 94,
                          "indexExpression": {
                            "id": 93,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2796:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2776:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 96,
                        "indexExpression": {
                          "id": 95,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "2807:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2776:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2776:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 98,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2827:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2776:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 114,
                  "nodeType": "IfStatement",
                  "src": "2772:154:4",
                  "trueBody": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "2836:90:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 101,
                                        "name": "loanTracker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "2858:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                          "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                        }
                                      },
                                      "id": 103,
                                      "indexExpression": {
                                        "id": 102,
                                        "name": "_buyer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 79,
                                        "src": "2870:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2858:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                      }
                                    },
                                    "id": 105,
                                    "indexExpression": {
                                      "id": 104,
                                      "name": "_contract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 83,
                                      "src": "2878:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2858:30:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                                      "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                    }
                                  },
                                  "id": 107,
                                  "indexExpression": {
                                    "id": 106,
                                    "name": "_tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "2889:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2858:40:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                                    "typeString": "struct Barter.userBorrow storage ref"
                                  }
                                },
                                "id": 108,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountOwed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8,
                                "src": "2858:51:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2913:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2858:56:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 100,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2850:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2850:65:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "2850:65:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 115,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "2940:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 117,
                            "indexExpression": {
                              "id": 116,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "2952:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2940:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 119,
                          "indexExpression": {
                            "id": 118,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2960:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2940:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 121,
                        "indexExpression": {
                          "id": 120,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "2971:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2940:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2940:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2994:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2940:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 138,
                  "nodeType": "IfStatement",
                  "src": "2936:171:4",
                  "trueBody": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "2997:110:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 125,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "3011:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 129,
                                  "indexExpression": {
                                    "id": 126,
                                    "name": "_buyer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79,
                                    "src": "3023:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3011:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 130,
                                "indexExpression": {
                                  "id": 127,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83,
                                  "src": "3031:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3011:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 131,
                              "indexExpression": {
                                "id": 128,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "3042:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3011:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "3011:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 133,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3064:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3064:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3011:85:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "3011:85:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 143,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "3252:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 146,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3268:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Barter_$509",
                              "typeString": "contract Barter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Barter_$509",
                              "typeString": "contract Barter"
                            }
                          ],
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3260:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 144,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3260:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3260:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 148,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "3275:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 140,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "3224:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 139,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "3216:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$703_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3216:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$703",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 646,
                      "src": "3216:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3216:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "3216:68:4"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 151,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "3295:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 155,
                            "indexExpression": {
                              "id": 152,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "3307:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3295:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 156,
                          "indexExpression": {
                            "id": 153,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "3315:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3295:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 157,
                        "indexExpression": {
                          "id": 154,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "3326:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3295:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "3295:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 159,
                      "name": "_itemValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "3350:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3295:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:65:4"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 162,
                        "name": "totalborrowedETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "3370:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 164,
                      "indexExpression": {
                        "id": 163,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "3387:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3370:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 165,
                      "name": "_itemValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "3398:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3370:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "3370:38:4"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 168,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "3418:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 172,
                            "indexExpression": {
                              "id": 169,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "3430:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3418:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 173,
                          "indexExpression": {
                            "id": 170,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "3438:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3418:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 174,
                        "indexExpression": {
                          "id": 171,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "3449:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3418:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "3418:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 176,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "3468:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3418:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "3418:57:4"
                },
                {
                  "expression": {
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 179,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "3485:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 183,
                            "indexExpression": {
                              "id": 180,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "3497:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3485:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 184,
                          "indexExpression": {
                            "id": 181,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "3505:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3485:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 185,
                        "indexExpression": {
                          "id": 182,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "3516:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3485:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3485:46:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 187,
                      "name": "_buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "3534:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3485:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "3485:55:4"
                }
              ]
            },
            "documentation": {
              "id": 77,
              "nodeType": "StructuredDocumentation",
              "src": "1809:279:4",
              "text": "@notice function transfers ownership from buyer to this contract to be held as collateral\n@notice buyer will automaticall receive thier NFT back once they repay the item value\n@dev the calling contract/function must approve the transfer to this contract address"
            },
            "functionSelector": "617a19c0",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralizedPurchase",
            "nameLocation": "2236:22:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "2276:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2268:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "2300:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2292:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "2325:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2317:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "2352:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2344:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_itemValue",
                  "nameLocation": "2378:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2370:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2258:136:4"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2402:0:4"
            },
            "scope": 509,
            "src": "2227:1320:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "3871:1227:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 208,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3966:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3966:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 205,
                                  "name": "WETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "3950:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 204,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "3943:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$587_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3943:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$587",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 526,
                            "src": "3943:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3943:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 211,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3981:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3943:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f756768205745544820746f207265706179",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4002:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_177c1e54ca3e518431235dfa7be3287196bc96d70b49d2cdb5578862ba10c1c0",
                          "typeString": "literal_string \"not enough WETH to repay\""
                        },
                        "value": "not enough WETH to repay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_177c1e54ca3e518431235dfa7be3287196bc96d70b49d2cdb5578862ba10c1c0",
                          "typeString": "literal_string \"not enough WETH to repay\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3922:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3922:116:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3922:116:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 217,
                                  "name": "loanTracker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "4069:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                    "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                  }
                                },
                                "id": 219,
                                "indexExpression": {
                                  "id": 218,
                                  "name": "_buyer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 194,
                                  "src": "4081:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4069:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                }
                              },
                              "id": 221,
                              "indexExpression": {
                                "id": 220,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "4089:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4069:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                                "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                              }
                            },
                            "id": 223,
                            "indexExpression": {
                              "id": 222,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "4100:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4069:40:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                              "typeString": "struct Barter.userBorrow storage ref"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOwed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "4069:51:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 225,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "4124:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4069:62:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420706179206261636b206d6f7265207468616e20796f75206f7765",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4145:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcaf546af5b5471811c5e526c5feaac590764e6627cf45296a5573ada6e868b7",
                          "typeString": "literal_string \"Cannot pay back more than you owe\""
                        },
                        "value": "Cannot pay back more than you owe"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcaf546af5b5471811c5e526c5feaac590764e6627cf45296a5573ada6e868b7",
                          "typeString": "literal_string \"Cannot pay back more than you owe\""
                        }
                      ],
                      "id": 216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4048:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:142:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:142:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4240:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4240:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 236,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "4265:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 239,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 237,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4277:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 238,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4277:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4265:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 241,
                                "indexExpression": {
                                  "id": 240,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "4289:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4265:34:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 243,
                              "indexExpression": {
                                "id": 242,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "4300:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4265:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "4265:51:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 245,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4264:53:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 246,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "4331:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 231,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "4208:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 230,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 587,
                          "src": "4201:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$587_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4201:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$587",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 568,
                      "src": "4201:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:147:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:147:4"
                },
                {
                  "expression": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 249,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "4359:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 253,
                            "indexExpression": {
                              "id": 250,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "4371:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4359:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 254,
                          "indexExpression": {
                            "id": 251,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "4379:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4359:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 255,
                        "indexExpression": {
                          "id": 252,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "4390:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4359:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "4359:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 257,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "4414:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4359:62:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "4359:62:4"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 260,
                        "name": "totalborrowedETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "4504:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 262,
                      "indexExpression": {
                        "id": 261,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "4521:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4504:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 263,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "4532:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4504:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4504:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 266,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "4589:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 268,
                            "indexExpression": {
                              "id": 267,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "4601:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4589:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 270,
                          "indexExpression": {
                            "id": 269,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "4609:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4589:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 272,
                        "indexExpression": {
                          "id": 271,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "4620:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4589:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "4589:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4644:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4589:56:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 335,
                  "nodeType": "IfStatement",
                  "src": "4585:507:4",
                  "trueBody": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "4647:445:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 282,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4722:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Barter_$509",
                                    "typeString": "contract Barter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Barter_$509",
                                    "typeString": "contract Barter"
                                  }
                                ],
                                "id": 281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4714:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 280,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4714:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4714:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 284,
                                      "name": "loanTracker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28,
                                      "src": "4745:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                        "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                      }
                                    },
                                    "id": 286,
                                    "indexExpression": {
                                      "id": 285,
                                      "name": "_buyer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 194,
                                      "src": "4757:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4745:19:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                      "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                    }
                                  },
                                  "id": 288,
                                  "indexExpression": {
                                    "id": 287,
                                    "name": "_contract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 196,
                                    "src": "4765:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4745:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                                    "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                  }
                                },
                                "id": 290,
                                "indexExpression": {
                                  "id": 289,
                                  "name": "_tokenID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 198,
                                  "src": "4776:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4745:40:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                                  "typeString": "struct Barter.userBorrow storage ref"
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10,
                              "src": "4745:46:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 292,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "4809:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 277,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "4669:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 276,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 703,
                                "src": "4661:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$703_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4661:18:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$703",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 646,
                            "src": "4661:35:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4661:170:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "4661:170:4"
                      },
                      {
                        "expression": {
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 295,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "4880:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 299,
                                  "indexExpression": {
                                    "id": 296,
                                    "name": "_buyer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 194,
                                    "src": "4892:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4880:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 300,
                                "indexExpression": {
                                  "id": 297,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "4900:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4880:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 301,
                              "indexExpression": {
                                "id": 298,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "4911:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4880:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 302,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "4880:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4933:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4880:54:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "4880:54:4"
                      },
                      {
                        "expression": {
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 306,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "4948:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 310,
                                  "indexExpression": {
                                    "id": 307,
                                    "name": "_buyer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 194,
                                    "src": "4960:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4948:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 311,
                                "indexExpression": {
                                  "id": 308,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "4968:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4948:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 312,
                              "indexExpression": {
                                "id": 309,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "4979:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4948:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "4948:46:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5005:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4997:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 314,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4997:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4997:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4948:59:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "4948:59:4"
                      },
                      {
                        "expression": {
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 320,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "5021:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 324,
                                  "indexExpression": {
                                    "id": 321,
                                    "name": "_buyer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 194,
                                    "src": "5033:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5021:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 325,
                                "indexExpression": {
                                  "id": 322,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "5041:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5021:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 326,
                              "indexExpression": {
                                "id": 323,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "5052:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5021:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 327,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "5021:47:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5079:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5071:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 328,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5071:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5071:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5021:60:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "5021:60:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "3553:183:4",
              "text": "@notice a user pays back a debt in WETH only and original buyer recieves ERC721\n@dev the calling contract/function must approve the transfer of ERC20 to the contract address"
            },
            "functionSelector": "49002749",
            "id": 337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repay",
            "nameLocation": "3750:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "3773:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "3765:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3765:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "3797:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "3789:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3789:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "3824:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "3816:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3816:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3850:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "3842:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3842:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3755:108:4"
            },
            "returnParameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3871:0:4"
            },
            "scope": 509,
            "src": "3741:1357:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "5314:700:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 350,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5494:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5494:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 352,
                                        "name": "loanTracker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "5529:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                          "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                        }
                                      },
                                      "id": 354,
                                      "indexExpression": {
                                        "id": 353,
                                        "name": "_buyer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 340,
                                        "src": "5541:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5529:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                      }
                                    },
                                    "id": 356,
                                    "indexExpression": {
                                      "id": 355,
                                      "name": "_contract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 342,
                                      "src": "5549:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5529:30:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                                      "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                    }
                                  },
                                  "id": 358,
                                  "indexExpression": {
                                    "id": 357,
                                    "name": "_tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 344,
                                    "src": "5560:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5529:40:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                                    "typeString": "struct Barter.userBorrow storage ref"
                                  }
                                },
                                "id": 359,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14,
                                "src": "5529:50:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "32353932303030",
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5582:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2592000_by_1",
                                  "typeString": "int_const 2592000"
                                },
                                "value": "2592000"
                              },
                              "src": "5529:60:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 362,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5528:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5494:96:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "427579657220686173206d696e756d756d203330206461797320746f207265706179",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5604:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5b4b0411f6b7840c37bbccb54e8abf56715644ebfa713de3a745840d9f3031c",
                          "typeString": "literal_string \"Buyer has minumum 30 days to repay\""
                        },
                        "value": "Buyer has minumum 30 days to repay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5b4b0411f6b7840c37bbccb54e8abf56715644ebfa713de3a745840d9f3031c",
                          "typeString": "literal_string \"Buyer has minumum 30 days to repay\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5473:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5473:177:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "5473:177:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 373,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5717:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Barter_$509",
                              "typeString": "contract Barter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Barter_$509",
                              "typeString": "contract Barter"
                            }
                          ],
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5709:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 371,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5709:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5709:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 375,
                                "name": "loanTracker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "5736:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                  "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                }
                              },
                              "id": 377,
                              "indexExpression": {
                                "id": 376,
                                "name": "_buyer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 340,
                                "src": "5748:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5736:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                              }
                            },
                            "id": 379,
                            "indexExpression": {
                              "id": 378,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 342,
                              "src": "5756:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5736:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                              "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                            }
                          },
                          "id": 381,
                          "indexExpression": {
                            "id": 380,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "5767:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5736:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                            "typeString": "struct Barter.userBorrow storage ref"
                          }
                        },
                        "id": 382,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "5736:47:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 383,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "5797:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 368,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "5668:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 367,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "5660:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$703_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5660:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$703",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 646,
                      "src": "5660:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5660:155:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "5660:155:4"
                },
                {
                  "expression": {
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 386,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "5825:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 390,
                            "indexExpression": {
                              "id": 387,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 340,
                              "src": "5837:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5825:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 391,
                          "indexExpression": {
                            "id": 388,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "5845:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5825:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 392,
                        "indexExpression": {
                          "id": 389,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "5856:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5825:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "5825:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5879:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5825:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "5825:55:4"
                },
                {
                  "expression": {
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 397,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "5953:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 401,
                            "indexExpression": {
                              "id": 398,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 340,
                              "src": "5965:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5953:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 402,
                          "indexExpression": {
                            "id": 399,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "5973:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5953:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 403,
                        "indexExpression": {
                          "id": 400,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "5984:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5953:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "5953:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6006:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5953:54:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "5953:54:4"
                }
              ]
            },
            "documentation": {
              "id": 338,
              "nodeType": "StructuredDocumentation",
              "src": "5104:82:4",
              "text": "@notice upon defualt, the store gets th NFT, and the user no longer owes money."
            },
            "functionSelector": "1e315fd6",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 347,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 346,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54,
                  "src": "5304:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5304:9:4"
              }
            ],
            "name": "handleDefault",
            "nameLocation": "5200:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "5231:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "5223:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5223:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 342,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "5255:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "5247:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5247:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "5282:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "5274:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5274:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5213:83:4"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5314:0:4"
            },
            "scope": 509,
            "src": "5191:823:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              720
            ],
            "body": {
              "id": 427,
              "nodeType": "Block",
              "src": "6166:54:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 423,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "6183:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Barter_$509",
                          "typeString": "contract Barter"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 428,
                      "src": "6183:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "6183:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 422,
                  "id": 426,
                  "nodeType": "Return",
                  "src": "6176:37:4"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "6029:16:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 419,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6140:8:4"
            },
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "6055:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6055:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "6072:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6072:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "6089:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6089:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "6106:12:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6106:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6045:79:4"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "6158:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6158:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6157:8:4"
            },
            "scope": 509,
            "src": "6020:200:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "6574:48:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 436,
                      "name": "totalborrowedETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "6591:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 438,
                    "indexExpression": {
                      "id": 437,
                      "name": "_buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "6608:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6591:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 435,
                  "id": 439,
                  "nodeType": "Return",
                  "src": "6584:31:4"
                }
              ]
            },
            "documentation": {
              "id": 429,
              "nodeType": "StructuredDocumentation",
              "src": "6439:56:4",
              "text": "@notice returns the total eth quantity owed by a user"
            },
            "functionSelector": "f2df757b",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalValueBorrowed",
            "nameLocation": "6509:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "6536:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "6528:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6527:16:4"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "6565:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6565:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6564:9:4"
            },
            "scope": 509,
            "src": "6500:122:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "6841:75:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 453,
                            "name": "loanTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "6858:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                            }
                          },
                          "id": 455,
                          "indexExpression": {
                            "id": 454,
                            "name": "_buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "6870:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6858:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                          }
                        },
                        "id": 457,
                        "indexExpression": {
                          "id": 456,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "6878:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6858:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                          "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "id": 458,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "6889:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6858:40:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                        "typeString": "struct Barter.userBorrow storage ref"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amountOwed",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8,
                    "src": "6858:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 452,
                  "id": 461,
                  "nodeType": "Return",
                  "src": "6851:58:4"
                }
              ]
            },
            "documentation": {
              "id": 442,
              "nodeType": "StructuredDocumentation",
              "src": "6628:66:4",
              "text": "@notice returns value owed on a specific NFT used as collateral"
            },
            "functionSelector": "9fed0300",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "valueBorrowedOneNFT",
            "nameLocation": "6708:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "6745:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "6737:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6737:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "6769:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "6761:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6761:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "6796:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "6788:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6788:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6727:83:4"
            },
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "6832:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6832:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6831:9:4"
            },
            "scope": 509,
            "src": "6699:217:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "7134:71:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 475,
                            "name": "loanTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "7151:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                            }
                          },
                          "id": 477,
                          "indexExpression": {
                            "id": 476,
                            "name": "_buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 466,
                            "src": "7163:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7151:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                          }
                        },
                        "id": 479,
                        "indexExpression": {
                          "id": 478,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "7171:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7151:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$15_storage_$",
                          "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                        }
                      },
                      "id": 481,
                      "indexExpression": {
                        "id": 480,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "7182:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7151:40:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userBorrow_$15_storage",
                        "typeString": "struct Barter.userBorrow storage ref"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12,
                    "src": "7151:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 474,
                  "id": 483,
                  "nodeType": "Return",
                  "src": "7144:54:4"
                }
              ]
            },
            "documentation": {
              "id": 464,
              "nodeType": "StructuredDocumentation",
              "src": "6922:65:4",
              "text": "@notice returns address of seller who has an NFT as collateral"
            },
            "functionSelector": "3a1657b4",
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerCollateralNFT",
            "nameLocation": "7001:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "7038:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "7030:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7030:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "7062:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "7054:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7054:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "7089:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "7081:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7081:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7020:83:4"
            },
            "returnParameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "7125:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7125:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7124:9:4"
            },
            "scope": 509,
            "src": "6992:213:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "7282:83:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 500,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7330:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Barter_$509",
                              "typeString": "contract Barter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Barter_$509",
                              "typeString": "contract Barter"
                            }
                          ],
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7322:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 498,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7322:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7322:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 502,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7337:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7337:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 504,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "7349:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 495,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "7300:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 494,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "7292:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$703_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7292:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$703",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 646,
                      "src": "7292:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7292:66:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "7292:66:4"
                }
              ]
            },
            "functionSelector": "f61556c8",
            "id": 508,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 492,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 491,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54,
                  "src": "7272:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "7272:9:4"
              }
            ],
            "name": "emergencyExit",
            "nameLocation": "7220:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "7242:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "7234:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7234:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "7255:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "7247:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7247:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7233:31:4"
            },
            "returnParameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7282:0:4"
            },
            "scope": 509,
            "src": "7211:154:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 510,
        "src": "336:7031:4",
        "usedErrors": []
      }
    ],
    "src": "32:7336:4"
  },
  "bytecode": "608060405234801561001057600080fd5b50600280546001600160a01b03191633179055610e80806100326000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063617a19c011610071578063617a19c014610182578063946ccfc0146101955780639fed030014610217578063ad5c464814610265578063f2df757b14610280578063f61556c8146102a957600080fd5b80630b1eedb8146100ae578063150b7a02146100c35780631e315fd6146100ff5780633a1657b414610112578063490027491461016f575b600080fd5b6100c16100bc366004610b4a565b6102bc565b005b6100e16100d1366004610bab565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100c161010d366004610c87565b610324565b610157610120366004610c87565b6001600160a01b03928316600090815260016020908152604080832094861683529381528382209282529190915220600201541690565b6040516001600160a01b0390911681526020016100f6565b6100c161017d366004610cc3565b6104db565b6100c1610190366004610d05565b610869565b6101e76101a3366004610c87565b600160208181526000948552604080862082529385528385209052908352912080549181015460028201546003909201546001600160a01b03918216929091169084565b6040516100f694939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b610257610225366004610c87565b6001600160a01b0392831660009081526001602090815260408083209490951682529283528381209181529152205490565b6040519081526020016100f6565b61015773c778417e063141139fce010982780140aa0cd5ab81565b61025761028e366004610d5a565b6001600160a01b031660009081526020819052604090205490565b6100c16102b7366004610d7c565b610a77565b604051632142170760e11b81526001600160a01b038316906342842e0e906102ec90879087908690600401610da6565b600060405180830381600087803b15801561030657600080fd5b505af115801561031a573d6000803e3d6000fd5b5050505050505050565b6002546001600160a01b0316331461037a5760405162461bcd60e51b81526020600482015260146024820152736d7573742068617665206f776e657220726f6c6560601b60448201526064015b60405180910390fd5b6001600160a01b0380841660009081526001602090815260408083209386168352928152828220848352905220600301546103b89062278d00610de0565b42116104115760405162461bcd60e51b815260206004820152602260248201527f427579657220686173206d696e756d756d203330206461797320746f20726570604482015261617960f01b6064820152608401610371565b6001600160a01b03838116600090815260016020908152604080832084871680855290835281842086855290925291829020600201549151632142170760e11b815290926342842e0e9261047092309291909116908690600401610da6565b600060405180830381600087803b15801561048a57600080fd5b505af115801561049e573d6000803e3d6000fd5b505050506001600160a01b039283166000908152600160209081526040808320949095168252928352838120918152915290812081815560030155565b6040516370a0823160e01b8152336004820152819073c778417e063141139fce010982780140aa0cd5ab906370a0823190602401602060405180830381865afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105509190610df8565b101561059e5760405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f756768205745544820746f20726570617900000000000000006044820152606401610371565b6001600160a01b0380851660009081526001602090815260408083209387168352928152828220858352905220548111156106255760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420706179206261636b206d6f7265207468616e20796f75206f776044820152606560f81b6064820152608401610371565b3360008181526001602090815260408083206001600160a01b038881168552908352818420878552909252918290206002015491516323b872dd60e01b815273c778417e063141139fce010982780140aa0cd5ab936323b872dd936106939391929116908690600401610da6565b6020604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d69190610e11565b506001600160a01b038085166000908152600160209081526040808320938716835292815282822085835290529081208054839290610716908490610e33565b90915550506001600160a01b03841660009081526020819052604081208054839290610743908490610e33565b90915550506001600160a01b038085166000908152600160209081526040808320938716835292815282822085835290522054610863576001600160a01b03848116600090815260016020818152604080842085891680865290835281852088865290925292839020909101549151632142170760e11b815290926342842e0e926107d992309291909116908790600401610da6565b600060405180830381600087803b1580156107f357600080fd5b505af1158015610807573d6000803e3d6000fd5b505050506001600160a01b03848116600090815260016020818152604080842094881684529381528383208684529052918120600381019190915590810180546001600160a01b03199081169091556002909101805490911690555b50505050565b6001600160a01b038581166000908152600160209081526040808320878516845282528083208684529091529020600201548116908516146108dd576001600160a01b038086166000908152600160209081526040808320938716835292815282822085835290522054156108dd57600080fd5b6001600160a01b038086166000908152600160209081526040808320938716835292815282822085835290522060030154610947576001600160a01b0380861660009081526001602090815260408083209387168352928152828220858352905220426003909101555b604051632142170760e11b81526001600160a01b038416906342842e0e9061097790889030908790600401610da6565b600060405180830381600087803b15801561099157600080fd5b505af11580156109a5573d6000803e3d6000fd5b505050506001600160a01b0385811660009081526001602090815260408083209387168352928152828220858352905290812080548392906109e8908490610de0565b90915550506001600160a01b03851660009081526020819052604081208054839290610a15908490610de0565b9091555050506001600160a01b03938416600081815260016020818152604080842096891684529581528583209483529390935292909220600281018054949095166001600160a01b0319948516179094559290920180549091169091179055565b6002546001600160a01b03163314610ac85760405162461bcd60e51b81526020600482015260146024820152736d7573742068617665206f776e657220726f6c6560601b6044820152606401610371565b604051632142170760e11b81526001600160a01b038316906342842e0e90610af890309033908690600401610da6565b600060405180830381600087803b158015610b1257600080fd5b505af1158015610b26573d6000803e3d6000fd5b505050505050565b80356001600160a01b0381168114610b4557600080fd5b919050565b60008060008060808587031215610b6057600080fd5b610b6985610b2e565b9350610b7760208601610b2e565b9250610b8560408601610b2e565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610bc157600080fd5b610bca85610b2e565b9350610bd860208601610b2e565b925060408501359150606085013567ffffffffffffffff80821115610bfc57600080fd5b818701915087601f830112610c1057600080fd5b813581811115610c2257610c22610b95565b604051601f8201601f19908116603f01168101908382118183101715610c4a57610c4a610b95565b816040528281528a6020848701011115610c6357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215610c9c57600080fd5b610ca584610b2e565b9250610cb360208501610b2e565b9150604084013590509250925092565b60008060008060808587031215610cd957600080fd5b610ce285610b2e565b9350610cf060208601610b2e565b93969395505050506040820135916060013590565b600080600080600060a08688031215610d1d57600080fd5b610d2686610b2e565b9450610d3460208701610b2e565b9350610d4260408701610b2e565b94979396509394606081013594506080013592915050565b600060208284031215610d6c57600080fd5b610d7582610b2e565b9392505050565b60008060408385031215610d8f57600080fd5b610d9883610b2e565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610df357610df3610dca565b500190565b600060208284031215610e0a57600080fd5b5051919050565b600060208284031215610e2357600080fd5b81518015158114610d7557600080fd5b600082821015610e4557610e45610dca565b50039056fea26469706673582212202ccbc9235cfbd7f03699ad0145ce805bfa87afce6dcd083961f3da63d16db21364736f6c634300080b0033",
  "bytecodeSha1": "7e86a888328a0242ad5b7621f3867e39e9920b2f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Barter",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "Barter.collateralizedPurchase": {
          "28": [
            2776,
            2834,
            false
          ],
          "29": [
            2858,
            2914,
            true
          ]
        },
        "Barter.handleDefault": {
          "25": [
            5494,
            5590,
            true
          ]
        },
        "Barter.repay": {
          "26": [
            3943,
            3988,
            true
          ],
          "27": [
            4069,
            4131,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "Barter.collateralizedPurchase": {
          "17": [
            2850,
            2915
          ],
          "18": [
            3011,
            3096
          ],
          "19": [
            3216,
            3284
          ],
          "20": [
            3295,
            3360
          ],
          "21": [
            3370,
            3408
          ],
          "22": [
            3418,
            3475
          ],
          "23": [
            3485,
            3540
          ]
        },
        "Barter.emergencyExit": {
          "24": [
            7292,
            7358
          ]
        },
        "Barter.exchangeNFT": {
          "3": [
            1734,
            1796
          ]
        },
        "Barter.handleDefault": {
          "4": [
            5473,
            5650
          ],
          "5": [
            5660,
            5815
          ],
          "6": [
            5825,
            5880
          ],
          "7": [
            5953,
            6007
          ]
        },
        "Barter.repay": {
          "8": [
            3922,
            4038
          ],
          "9": [
            4048,
            4190
          ],
          "10": [
            4201,
            4348
          ],
          "11": [
            4359,
            4421
          ],
          "12": [
            4504,
            4539
          ],
          "13": [
            4661,
            4831
          ],
          "14": [
            4880,
            4934
          ],
          "15": [
            4948,
            5007
          ],
          "16": [
            5021,
            5081
          ]
        },
        "Barter.sellerCollateralNFT": {
          "0": [
            7144,
            7198
          ]
        },
        "Barter.totalValueBorrowed": {
          "2": [
            6584,
            6615
          ]
        },
        "Barter.valueBorrowedOneNFT": {
          "1": [
            6851,
            6909
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Receiver"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063617a19c011610071578063617a19c014610182578063946ccfc0146101955780639fed030014610217578063ad5c464814610265578063f2df757b14610280578063f61556c8146102a957600080fd5b80630b1eedb8146100ae578063150b7a02146100c35780631e315fd6146100ff5780633a1657b414610112578063490027491461016f575b600080fd5b6100c16100bc366004610b4a565b6102bc565b005b6100e16100d1366004610bab565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100c161010d366004610c87565b610324565b610157610120366004610c87565b6001600160a01b03928316600090815260016020908152604080832094861683529381528382209282529190915220600201541690565b6040516001600160a01b0390911681526020016100f6565b6100c161017d366004610cc3565b6104db565b6100c1610190366004610d05565b610869565b6101e76101a3366004610c87565b600160208181526000948552604080862082529385528385209052908352912080549181015460028201546003909201546001600160a01b03918216929091169084565b6040516100f694939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b610257610225366004610c87565b6001600160a01b0392831660009081526001602090815260408083209490951682529283528381209181529152205490565b6040519081526020016100f6565b61015773c778417e063141139fce010982780140aa0cd5ab81565b61025761028e366004610d5a565b6001600160a01b031660009081526020819052604090205490565b6100c16102b7366004610d7c565b610a77565b604051632142170760e11b81526001600160a01b038316906342842e0e906102ec90879087908690600401610da6565b600060405180830381600087803b15801561030657600080fd5b505af115801561031a573d6000803e3d6000fd5b5050505050505050565b6002546001600160a01b0316331461037a5760405162461bcd60e51b81526020600482015260146024820152736d7573742068617665206f776e657220726f6c6560601b60448201526064015b60405180910390fd5b6001600160a01b0380841660009081526001602090815260408083209386168352928152828220848352905220600301546103b89062278d00610de0565b42116104115760405162461bcd60e51b815260206004820152602260248201527f427579657220686173206d696e756d756d203330206461797320746f20726570604482015261617960f01b6064820152608401610371565b6001600160a01b03838116600090815260016020908152604080832084871680855290835281842086855290925291829020600201549151632142170760e11b815290926342842e0e9261047092309291909116908690600401610da6565b600060405180830381600087803b15801561048a57600080fd5b505af115801561049e573d6000803e3d6000fd5b505050506001600160a01b039283166000908152600160209081526040808320949095168252928352838120918152915290812081815560030155565b6040516370a0823160e01b8152336004820152819073c778417e063141139fce010982780140aa0cd5ab906370a0823190602401602060405180830381865afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105509190610df8565b101561059e5760405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f756768205745544820746f20726570617900000000000000006044820152606401610371565b6001600160a01b0380851660009081526001602090815260408083209387168352928152828220858352905220548111156106255760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420706179206261636b206d6f7265207468616e20796f75206f776044820152606560f81b6064820152608401610371565b3360008181526001602090815260408083206001600160a01b038881168552908352818420878552909252918290206002015491516323b872dd60e01b815273c778417e063141139fce010982780140aa0cd5ab936323b872dd936106939391929116908690600401610da6565b6020604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d69190610e11565b506001600160a01b038085166000908152600160209081526040808320938716835292815282822085835290529081208054839290610716908490610e33565b90915550506001600160a01b03841660009081526020819052604081208054839290610743908490610e33565b90915550506001600160a01b038085166000908152600160209081526040808320938716835292815282822085835290522054610863576001600160a01b03848116600090815260016020818152604080842085891680865290835281852088865290925292839020909101549151632142170760e11b815290926342842e0e926107d992309291909116908790600401610da6565b600060405180830381600087803b1580156107f357600080fd5b505af1158015610807573d6000803e3d6000fd5b505050506001600160a01b03848116600090815260016020818152604080842094881684529381528383208684529052918120600381019190915590810180546001600160a01b03199081169091556002909101805490911690555b50505050565b6001600160a01b038581166000908152600160209081526040808320878516845282528083208684529091529020600201548116908516146108dd576001600160a01b038086166000908152600160209081526040808320938716835292815282822085835290522054156108dd57600080fd5b6001600160a01b038086166000908152600160209081526040808320938716835292815282822085835290522060030154610947576001600160a01b0380861660009081526001602090815260408083209387168352928152828220858352905220426003909101555b604051632142170760e11b81526001600160a01b038416906342842e0e9061097790889030908790600401610da6565b600060405180830381600087803b15801561099157600080fd5b505af11580156109a5573d6000803e3d6000fd5b505050506001600160a01b0385811660009081526001602090815260408083209387168352928152828220858352905290812080548392906109e8908490610de0565b90915550506001600160a01b03851660009081526020819052604081208054839290610a15908490610de0565b9091555050506001600160a01b03938416600081815260016020818152604080842096891684529581528583209483529390935292909220600281018054949095166001600160a01b0319948516179094559290920180549091169091179055565b6002546001600160a01b03163314610ac85760405162461bcd60e51b81526020600482015260146024820152736d7573742068617665206f776e657220726f6c6560601b6044820152606401610371565b604051632142170760e11b81526001600160a01b038316906342842e0e90610af890309033908690600401610da6565b600060405180830381600087803b158015610b1257600080fd5b505af1158015610b26573d6000803e3d6000fd5b505050505050565b80356001600160a01b0381168114610b4557600080fd5b919050565b60008060008060808587031215610b6057600080fd5b610b6985610b2e565b9350610b7760208601610b2e565b9250610b8560408601610b2e565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610bc157600080fd5b610bca85610b2e565b9350610bd860208601610b2e565b925060408501359150606085013567ffffffffffffffff80821115610bfc57600080fd5b818701915087601f830112610c1057600080fd5b813581811115610c2257610c22610b95565b604051601f8201601f19908116603f01168101908382118183101715610c4a57610c4a610b95565b816040528281528a6020848701011115610c6357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215610c9c57600080fd5b610ca584610b2e565b9250610cb360208501610b2e565b9150604084013590509250925092565b60008060008060808587031215610cd957600080fd5b610ce285610b2e565b9350610cf060208601610b2e565b93969395505050506040820135916060013590565b600080600080600060a08688031215610d1d57600080fd5b610d2686610b2e565b9450610d3460208701610b2e565b9350610d4260408701610b2e565b94979396509394606081013594506080013592915050565b600060208284031215610d6c57600080fd5b610d7582610b2e565b9392505050565b60008060408385031215610d8f57600080fd5b610d9883610b2e565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610df357610df3610dca565b500190565b600060208284031215610e0a57600080fd5b5051919050565b600060208284031215610e2357600080fd5b81518015158114610d7557600080fd5b600082821015610e4557610e45610dca565b50039056fea26469706673582212202ccbc9235cfbd7f03699ad0145ce805bfa87afce6dcd083961f3da63d16db21364736f6c634300080b0033",
  "deployedSourceMap": "336:7031:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:393;;;;;;:::i;:::-;;:::i;:::-;;6020:200;;;;;;:::i;:::-;-1:-1:-1;;;6020:200:4;;;;;;;;;;-1:-1:-1;;;;;;2037:33:5;;;2019:52;;2007:2;1992:18;6020:200:4;;;;;;;;5191:823;;;;;;:::i;:::-;;:::i;6992:213::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7151:19:4;;;7125:7;7151:19;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;;;:47;;;;;6992:213;;;;-1:-1:-1;;;;;2579:32:5;;;2561:51;;2549:2;2534:18;6992:213:4;2415:203:5;3741:1357:4;;;;;;:::i;:::-;;:::i;2227:1320::-;;;;;;:::i;:::-;;:::i;851:97::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;851:97:4;;;;;;;;;;;;;;;;;;;3733:25:5;;;-1:-1:-1;;;;;3832:15:5;;;3827:2;3812:18;;3805:43;3884:15;;3879:2;3864:18;;3857:43;3931:2;3916:18;;3909:34;3720:3;3705:19;;3502:447;6699:217:4;;;;;;:::i;:::-;-1:-1:-1;;;;;6858:19:4;;;6832:7;6858:19;;;:11;:19;;;;;;;;:30;;;;;;;;;;;;:40;;;;;;:51;;6699:217;;;;4100:25:5;;;4088:2;4073:18;6699:217:4;3954:177:5;991:73:4;;1022:42;991:73;;6500:122;;;;;;:::i;:::-;-1:-1:-1;;;;;6591:24:4;6565:7;6591:24;;;;;;;;;;;;6500:122;7211:154;;;;;;:::i;:::-;;:::i;1410:393::-;1734:62;;-1:-1:-1;;;1734:62:4;;-1:-1:-1;;;;;1734:35:4;;;;;:62;;1770:6;;1778:7;;1787:8;;1734:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:393;;;;:::o;5191:823::-;1199:5;;-1:-1:-1;;;;;1199:5:4;1185:10;:19;1177:52;;;;-1:-1:-1;;;1177:52:4;;5168:2:5;1177:52:4;;;5150:21:5;5207:2;5187:18;;;5180:30;-1:-1:-1;;;5226:18:5;;;5219:50;5286:18;;1177:52:4;;;;;;;;;-1:-1:-1;;;;;5529:19:4;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;:30;;::::1;::::0;;;;;;;;:40;;;;;;:50:::1;;::::0;:60:::1;::::0;5582:7:::1;5529:60;:::i;:::-;5494:15;:96;5473:177;;;::::0;-1:-1:-1;;;5473:177:4;;5782:2:5;5473:177:4::1;::::0;::::1;5764:21:5::0;5821:2;5801:18;;;5794:30;5860:34;5840:18;;;5833:62;-1:-1:-1;;;5911:18:5;;;5904:32;5953:19;;5473:177:4::1;5580:398:5::0;5473:177:4::1;-1:-1:-1::0;;;;;5736:19:4;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;5660:35;;::::1;5736:30:::0;;;;;;;;;:40;;;;;;;;;;:47:::1;;::::0;5660:155;;-1:-1:-1;;;5660:155:4;;:35;;::::1;::::0;:155:::1;::::0;5717:4:::1;::::0;5736:47;;;::::1;::::0;5767:8;;5660:155:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;;5825:19:4;;::::1;5879:1;5825:19:::0;;;:11:::1;:19;::::0;;;;;;;:30;;;::::1;::::0;;;;;;;;:40;;;;;;;;:55;;;5953:50:::1;;:54:::0;5191:823::o;3741:1357::-;3943:34;;-1:-1:-1;;;3943:34:4;;3966:10;3943:34;;;2561:51:5;3981:7:4;;1022:42;;3943:22;;2534:18:5;;3943:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;3922:116;;;;-1:-1:-1;;;3922:116:4;;6374:2:5;3922:116:4;;;6356:21:5;6413:2;6393:18;;;6386:30;6452:26;6432:18;;;6425:54;6496:18;;3922:116:4;6172:348:5;3922:116:4;-1:-1:-1;;;;;4069:19:4;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;:51;:62;-1:-1:-1;4069:62:4;4048:142;;;;-1:-1:-1;;;4048:142:4;;6727:2:5;4048:142:4;;;6709:21:5;6766:2;6746:18;;;6739:30;6805:34;6785:18;;;6778:62;-1:-1:-1;;;6856:18:5;;;6849:31;6897:19;;4048:142:4;6525:397:5;4048:142:4;4240:10;4265:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4265:34:4;;;;;;;;;;;:44;;;;;;;;;;:51;;;4201:147;;-1:-1:-1;;;4201:147:4;;1022:42;;4201:25;;:147;;4240:10;;4265:51;;;4331:7;;4201:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4359:19:4;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;;;:62;;4414:7;;4359:19;:62;;4414:7;;4359:62;:::i;:::-;;;;-1:-1:-1;;;;;;;4504:24:4;;:16;:24;;;;;;;;;;:35;;4532:7;;4504:16;:35;;4532:7;;4504:35;:::i;:::-;;;;-1:-1:-1;;;;;;;4589:19:4;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;:51;4585:507;;-1:-1:-1;;;;;4745:19:4;;;;;;;:11;:19;;;;;;;;4661:35;;;4745:30;;;;;;;;;:40;;;;;;;;;;:46;;;;4661:170;;-1:-1:-1;;;4661:170:4;;:35;;;;:170;;4722:4;;4745:46;;;;;4776:8;;4661:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;4880:19:4;;;4933:1;4880:19;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;;;:50;;;:54;;;;4948:46;;;:59;;-1:-1:-1;;;;;;4948:59:4;;;;;;-1:-1:-1;5021:47:4;;;:60;;;;;;;4585:507;3741:1357;;;;:::o;2227:1320::-;-1:-1:-1;;;;;2776:19:4;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;:40;;;;;;;;:47;;;;;:58;;;;2772:154;;-1:-1:-1;;;;;2858:19:4;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;:51;:56;2850:65;;;;;;-1:-1:-1;;;;;2940:19:4;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;:50;;;2936:171;;-1:-1:-1;;;;;3011:19:4;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;3064:32;3011:50;;;;:85;2936:171;3216:68;;-1:-1:-1;;;3216:68:4;;-1:-1:-1;;;;;3216:35:4;;;;;:68;;3252:6;;3268:4;;3275:8;;3216:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;3295:19:4;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;;;:65;;3350:10;;3295:19;:65;;3350:10;;3295:65;:::i;:::-;;;;-1:-1:-1;;;;;;;3370:24:4;;:16;:24;;;;;;;;;;:38;;3398:10;;3370:16;:38;;3398:10;;3370:38;:::i;:::-;;;;-1:-1:-1;;;;;;;;3418:19:4;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;;;;;;:47;;;:57;;;;;;-1:-1:-1;;;;;;3418:57:4;;;;;;;3485:46;;;;:55;;;;;;;;;;2227:1320::o;7211:154::-;1199:5;;-1:-1:-1;;;;;1199:5:4;1185:10;:19;1177:52;;;;-1:-1:-1;;;1177:52:4;;5168:2:5;1177:52:4;;;5150:21:5;5207:2;5187:18;;;5180:30;-1:-1:-1;;;5226:18:5;;;5219:50;5286:18;;1177:52:4;4966:344:5;1177:52:4;7292:66:::1;::::0;-1:-1:-1;;;7292:66:4;;-1:-1:-1;;;;;7292:29:4;::::1;::::0;::::1;::::0;:66:::1;::::0;7330:4:::1;::::0;7337:10:::1;::::0;7349:8;;7292:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7211:154:::0;;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:403::-;278:6;286;294;302;355:3;343:9;334:7;330:23;326:33;323:53;;;372:1;369;362:12;323:53;395:29;414:9;395:29;:::i;:::-;385:39;;443:38;477:2;466:9;462:18;443:38;:::i;:::-;433:48;;500:38;534:2;523:9;519:18;500:38;:::i;:::-;192:403;;;;-1:-1:-1;490:48:5;;585:2;570:18;557:32;;-1:-1:-1;;192:403:5:o;600:127::-;661:10;656:3;652:20;649:1;642:31;692:4;689:1;682:15;716:4;713:1;706:15;732:1138;827:6;835;843;851;904:3;892:9;883:7;879:23;875:33;872:53;;;921:1;918;911:12;872:53;944:29;963:9;944:29;:::i;:::-;934:39;;992:38;1026:2;1015:9;1011:18;992:38;:::i;:::-;982:48;;1077:2;1066:9;1062:18;1049:32;1039:42;;1132:2;1121:9;1117:18;1104:32;1155:18;1196:2;1188:6;1185:14;1182:34;;;1212:1;1209;1202:12;1182:34;1250:6;1239:9;1235:22;1225:32;;1295:7;1288:4;1284:2;1280:13;1276:27;1266:55;;1317:1;1314;1307:12;1266:55;1353:2;1340:16;1375:2;1371;1368:10;1365:36;;;1381:18;;:::i;:::-;1456:2;1450:9;1424:2;1510:13;;-1:-1:-1;;1506:22:5;;;1530:2;1502:31;1498:40;1486:53;;;1554:18;;;1574:22;;;1551:46;1548:72;;;1600:18;;:::i;:::-;1640:10;1636:2;1629:22;1675:2;1667:6;1660:18;1715:7;1710:2;1705;1701;1697:11;1693:20;1690:33;1687:53;;;1736:1;1733;1726:12;1687:53;1792:2;1787;1783;1779:11;1774:2;1766:6;1762:15;1749:46;1837:1;1832:2;1827;1819:6;1815:15;1811:24;1804:35;1858:6;1848:16;;;;;;;732:1138;;;;;;;:::o;2082:328::-;2159:6;2167;2175;2228:2;2216:9;2207:7;2203:23;2199:32;2196:52;;;2244:1;2241;2234:12;2196:52;2267:29;2286:9;2267:29;:::i;:::-;2257:39;;2315:38;2349:2;2338:9;2334:18;2315:38;:::i;:::-;2305:48;;2400:2;2389:9;2385:18;2372:32;2362:42;;2082:328;;;;;:::o;2623:397::-;2709:6;2717;2725;2733;2786:3;2774:9;2765:7;2761:23;2757:33;2754:53;;;2803:1;2800;2793:12;2754:53;2826:29;2845:9;2826:29;:::i;:::-;2816:39;;2874:38;2908:2;2897:9;2893:18;2874:38;:::i;:::-;2623:397;;2864:48;;-1:-1:-1;;;;2959:2:5;2944:18;;2931:32;;3010:2;2995:18;2982:32;;2623:397::o;3025:472::-;3120:6;3128;3136;3144;3152;3205:3;3193:9;3184:7;3180:23;3176:33;3173:53;;;3222:1;3219;3212:12;3173:53;3245:29;3264:9;3245:29;:::i;:::-;3235:39;;3293:38;3327:2;3316:9;3312:18;3293:38;:::i;:::-;3283:48;;3350:38;3384:2;3373:9;3369:18;3350:38;:::i;:::-;3025:472;;;;-1:-1:-1;3340:48:5;;3435:2;3420:18;;3407:32;;-1:-1:-1;3486:3:5;3471:19;3458:33;;3025:472;-1:-1:-1;;3025:472:5:o;4136:186::-;4195:6;4248:2;4236:9;4227:7;4223:23;4219:32;4216:52;;;4264:1;4261;4254:12;4216:52;4287:29;4306:9;4287:29;:::i;:::-;4277:39;4136:186;-1:-1:-1;;;4136:186:5:o;4327:254::-;4395:6;4403;4456:2;4444:9;4435:7;4431:23;4427:32;4424:52;;;4472:1;4469;4462:12;4424:52;4495:29;4514:9;4495:29;:::i;:::-;4485:39;4571:2;4556:18;;;;4543:32;;-1:-1:-1;;;4327:254:5:o;4586:375::-;-1:-1:-1;;;;;4844:15:5;;;4826:34;;4896:15;;;;4891:2;4876:18;;4869:43;4943:2;4928:18;;4921:34;;;;4776:2;4761:18;;4586:375::o;5315:127::-;5376:10;5371:3;5367:20;5364:1;5357:31;5407:4;5404:1;5397:15;5431:4;5428:1;5421:15;5447:128;5487:3;5518:1;5514:6;5511:1;5508:13;5505:39;;;5524:18;;:::i;:::-;-1:-1:-1;5560:9:5;;5447:128::o;5983:184::-;6053:6;6106:2;6094:9;6085:7;6081:23;6077:32;6074:52;;;6122:1;6119;6112:12;6074:52;-1:-1:-1;6145:16:5;;5983:184;-1:-1:-1;5983:184:5:o;6927:277::-;6994:6;7047:2;7035:9;7026:7;7022:23;7018:32;7015:52;;;7063:1;7060;7053:12;7015:52;7095:9;7089:16;7148:5;7141:13;7134:21;7127:5;7124:32;7114:60;;7170:1;7167;7160:12;7209:125;7249:4;7277:1;7274;7271:8;7268:34;;;7282:18;;:::i;:::-;-1:-1:-1;7319:9:5;;7209:125::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "collateralizedPurchase(address,address,address,uint256,uint256)": {
        "details": "the calling contract/function must approve the transfer to this contract address",
        "notice": "function transfers ownership from buyer to this contract to be held as collateralbuyer will automaticall receive thier NFT back once they repay the item value"
      },
      "exchangeNFT(address,address,address,uint256)": {
        "details": "the calling contract/function must approve the transfer to the seller's address",
        "notice": "function transfers ownership from buyer to seller"
      },
      "handleDefault(address,address,uint256)": {
        "notice": "upon defualt, the store gets th NFT, and the user no longer owes money."
      },
      "repay(address,address,uint256,uint256)": {
        "details": "the calling contract/function must approve the transfer of ERC20 to the contract address",
        "notice": "a user pays back a debt in WETH only and original buyer recieves ERC721"
      },
      "sellerCollateralNFT(address,address,uint256)": {
        "notice": "returns address of seller who has an NFT as collateral"
      },
      "totalValueBorrowed(address)": {
        "notice": "returns the total eth quantity owed by a user"
      },
      "valueBorrowedOneNFT(address,address,uint256)": {
        "notice": "returns value owed on a specific NFT used as collateral"
      }
    },
    "version": 1
  },
  "offset": [
    336,
    7367
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x617A19C0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x617A19C0 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x946CCFC0 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9FED0300 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xF2DF757B EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xF61556C8 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1EEDB8 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x1E315FD6 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x3A1657B4 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x49002749 EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBAB JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0xC87 JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 PUSH1 0x2 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP3 MSTORE SWAP4 DUP6 MSTORE DUP4 DUP6 KECCAK256 SWAP1 MSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x157 PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x2EC SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6D7573742068617665206F776E657220726F6C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE SWAP1 MSTORE KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x3B8 SWAP1 PUSH3 0x278D00 PUSH2 0xDE0 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x411 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579657220686173206D696E756D756D203330206461797320746F20726570 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6179 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x371 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP3 PUSH4 0x42842E0E SWAP3 PUSH2 0x470 SWAP3 ADDRESS SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP2 MSTORE SWAP1 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x3 ADD SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x550 SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F756768205745544820746F2072657061790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x371 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420706179206261636B206D6F7265207468616E20796F75206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x371 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x693 SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0xE11 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x716 SWAP1 DUP5 SWAP1 PUSH2 0xE33 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x743 SWAP1 DUP5 SWAP1 PUSH2 0xE33 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x863 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 DUP10 AND DUP1 DUP7 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP9 DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP3 PUSH4 0x42842E0E SWAP3 PUSH2 0x7D9 SWAP3 ADDRESS SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP9 AND DUP5 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 MSTORE SWAP2 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP6 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 AND SWAP1 DUP6 AND EQ PUSH2 0x8DD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x947 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 TIMESTAMP PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x977 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9E8 SWAP1 DUP5 SWAP1 PUSH2 0xDE0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA15 SWAP1 DUP5 SWAP1 PUSH2 0xDE0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP7 DUP10 AND DUP5 MSTORE SWAP6 DUP2 MSTORE DUP6 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 SWAP5 SSTORE SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6D7573742068617665206F776E657220726F6C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0xAF8 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB69 DUP6 PUSH2 0xB2E JUMP JUMPDEST SWAP4 POP PUSH2 0xB77 PUSH1 0x20 DUP7 ADD PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP PUSH2 0xB85 PUSH1 0x40 DUP7 ADD PUSH2 0xB2E JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBCA DUP6 PUSH2 0xB2E JUMP JUMPDEST SWAP4 POP PUSH2 0xBD8 PUSH1 0x20 DUP7 ADD PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC22 JUMPI PUSH2 0xC22 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC4A JUMPI PUSH2 0xC4A PUSH2 0xB95 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xC63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA5 DUP5 PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP PUSH2 0xCB3 PUSH1 0x20 DUP6 ADD PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE2 DUP6 PUSH2 0xB2E JUMP JUMPDEST SWAP4 POP PUSH2 0xCF0 PUSH1 0x20 DUP7 ADD PUSH2 0xB2E JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD26 DUP7 PUSH2 0xB2E JUMP JUMPDEST SWAP5 POP PUSH2 0xD34 PUSH1 0x20 DUP8 ADD PUSH2 0xB2E JUMP JUMPDEST SWAP4 POP PUSH2 0xD42 PUSH1 0x40 DUP8 ADD PUSH2 0xB2E JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD75 DUP3 PUSH2 0xB2E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD98 DUP4 PUSH2 0xB2E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDF3 JUMPI PUSH2 0xDF3 PUSH2 0xDCA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE45 JUMPI PUSH2 0xE45 PUSH2 0xDCA JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xCB 0xC9 0x23 0x5C 0xFB 0xD7 CREATE CALLDATASIZE SWAP10 0xAD ADD GASLIMIT 0xCE DUP1 JUMPDEST STATICCALL DUP8 0xAF 0xCE PUSH14 0xCD083961F3DA63D16DB21364736F PUSH13 0x634300080B0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        336,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x617A19C0"
    },
    "38": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x617A19C0"
    },
    "49": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x182"
    },
    "53": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x946CCFC0"
    },
    "60": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x195"
    },
    "64": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9FED0300"
    },
    "71": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217"
    },
    "75": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAD5C4648"
    },
    "82": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x265"
    },
    "86": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2DF757B"
    },
    "93": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x280"
    },
    "97": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF61556C8"
    },
    "104": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A9"
    },
    "108": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB1EEDB8"
    },
    "120": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x150B7A02"
    },
    "131": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1E315FD6"
    },
    "142": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFF"
    },
    "146": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3A1657B4"
    },
    "153": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x112"
    },
    "157": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x49002749"
    },
    "164": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16F"
    },
    "168": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "DUP1",
      "path": "4"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        336,
        7367
      ],
      "op": "REVERT",
      "path": "4"
    },
    "174": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "175": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "178": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBC"
    },
    "181": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "182": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "184": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB4A"
    },
    "187": {
      "fn": "Barter.exchangeNFT",
      "jump": "i",
      "offset": [
        1410,
        1803
      ],
      "op": "JUMP",
      "path": "4"
    },
    "188": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "189": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BC"
    },
    "192": {
      "fn": "Barter.exchangeNFT",
      "jump": "i",
      "offset": [
        1410,
        1803
      ],
      "op": "JUMP",
      "path": "4"
    },
    "193": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "194": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "STOP",
      "path": "4"
    },
    "195": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "196": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE1"
    },
    "199": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD1"
    },
    "202": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "203": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "205": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBAB"
    },
    "208": {
      "fn": "Barter.onERC721Received",
      "jump": "i",
      "offset": [
        6020,
        6220
      ],
      "op": "JUMP",
      "path": "4"
    },
    "209": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "210": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "215": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "217": {
      "op": "SHL"
    },
    "218": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "219": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "220": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "POP",
      "path": "4"
    },
    "221": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "POP",
      "path": "4"
    },
    "222": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "POP",
      "path": "4"
    },
    "223": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "POP",
      "path": "4"
    },
    "224": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "JUMP",
      "path": "4"
    },
    "225": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "226": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "228": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "235": {
      "op": "SHL"
    },
    "236": {
      "op": "SUB"
    },
    "237": {
      "op": "NOT"
    },
    "238": {
      "op": "SWAP1"
    },
    "239": {
      "op": "SWAP2"
    },
    "240": {
      "op": "AND"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "MSTORE"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "op": "ADD"
    },
    "246": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "247": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "249": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "250": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "DUP1",
      "path": "4"
    },
    "251": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "252": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "SUB",
      "path": "4"
    },
    "253": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "254": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6020,
        6220
      ],
      "op": "RETURN",
      "path": "4"
    },
    "255": {
      "fn": "Barter.handleDefault",
      "offset": [
        5191,
        6014
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "256": {
      "fn": "Barter.handleDefault",
      "offset": [
        5191,
        6014
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "259": {
      "fn": "Barter.handleDefault",
      "offset": [
        5191,
        6014
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10D"
    },
    "262": {
      "fn": "Barter.handleDefault",
      "offset": [
        5191,
        6014
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "263": {
      "fn": "Barter.handleDefault",
      "offset": [
        5191,
        6014
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "265": {
      "fn": "Barter.handleDefault",
      "offset": [
        5191,
        6014
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC87"
    },
    "268": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        5191,
        6014
      ],
      "op": "JUMP",
      "path": "4"
    },
    "269": {
      "fn": "Barter.handleDefault",
      "offset": [
        5191,
        6014
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "270": {
      "fn": "Barter.handleDefault",
      "offset": [
        5191,
        6014
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x324"
    },
    "273": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        5191,
        6014
      ],
      "op": "JUMP",
      "path": "4"
    },
    "274": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "275": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "278": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x120"
    },
    "281": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "282": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "284": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC87"
    },
    "287": {
      "fn": "Barter.sellerCollateralNFT",
      "jump": "i",
      "offset": [
        6992,
        7205
      ],
      "op": "JUMP",
      "path": "4"
    },
    "288": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "295": {
      "op": "SHL"
    },
    "296": {
      "op": "SUB"
    },
    "297": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 0
    },
    "298": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "DUP4",
      "path": "4"
    },
    "299": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "AND",
      "path": "4"
    },
    "300": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7125,
        7132
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "302": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "303": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "DUP2",
      "path": "4"
    },
    "304": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "305": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "307": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "309": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "310": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "DUP2",
      "path": "4"
    },
    "311": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "312": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "314": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "DUP1",
      "path": "4"
    },
    "315": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "DUP4",
      "path": "4"
    },
    "316": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7170
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "317": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "318": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "DUP7",
      "path": "4"
    },
    "319": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "AND",
      "path": "4"
    },
    "320": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "DUP4",
      "path": "4"
    },
    "321": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "322": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "323": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "DUP2",
      "path": "4"
    },
    "324": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "325": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "DUP4",
      "path": "4"
    },
    "326": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "DUP3",
      "path": "4"
    },
    "327": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7181
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "328": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7191
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "329": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7191
      ],
      "op": "DUP3",
      "path": "4"
    },
    "330": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7191
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "331": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7191
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "332": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7191
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "333": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7191
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "334": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7191
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "335": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7191
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "336": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7198
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "338": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7198
      ],
      "op": "ADD",
      "path": "4"
    },
    "339": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7198
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "340": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7198
      ],
      "op": "AND",
      "path": "4"
    },
    "341": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7151,
        7198
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "342": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "JUMP",
      "path": "4"
    },
    "343": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "344": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "346": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "353": {
      "op": "SHL"
    },
    "354": {
      "op": "SUB"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "SWAP2"
    },
    "357": {
      "op": "AND"
    },
    "358": {
      "op": "DUP2"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "362": {
      "op": "ADD"
    },
    "363": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        6992,
        7205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "366": {
      "op": "JUMP"
    },
    "367": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "368": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "371": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17D"
    },
    "374": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "375": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "377": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC3"
    },
    "380": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        3741,
        5098
      ],
      "op": "JUMP",
      "path": "4"
    },
    "381": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "382": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4DB"
    },
    "385": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        3741,
        5098
      ],
      "op": "JUMP",
      "path": "4"
    },
    "386": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2227,
        3547
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "387": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2227,
        3547
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "390": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2227,
        3547
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x190"
    },
    "393": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2227,
        3547
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "394": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2227,
        3547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "396": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2227,
        3547
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD05"
    },
    "399": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        2227,
        3547
      ],
      "op": "JUMP",
      "path": "4"
    },
    "400": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2227,
        3547
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "401": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2227,
        3547
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x869"
    },
    "404": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        2227,
        3547
      ],
      "op": "JUMP",
      "path": "4"
    },
    "405": {
      "offset": [
        851,
        948
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "406": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7"
    },
    "409": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A3"
    },
    "412": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "413": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "415": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC87"
    },
    "418": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        851,
        948
      ],
      "op": "JUMP",
      "path": "4"
    },
    "419": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "420": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "422": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "424": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "425": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "426": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "427": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "429": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "430": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP6",
      "path": "4"
    },
    "431": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "432": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "434": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "435": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP7",
      "path": "4"
    },
    "436": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "437": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP3",
      "path": "4"
    },
    "438": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "439": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "440": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP6",
      "path": "4"
    },
    "441": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "442": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "443": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP6",
      "path": "4"
    },
    "444": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "445": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "446": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "447": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "448": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "449": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "450": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "451": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "452": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "453": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "454": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "455": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "456": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "ADD",
      "path": "4"
    },
    "457": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "458": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "460": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP3",
      "path": "4"
    },
    "461": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "ADD",
      "path": "4"
    },
    "462": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "463": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "465": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "466": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "467": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "ADD",
      "path": "4"
    },
    "468": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "475": {
      "op": "SHL"
    },
    "476": {
      "op": "SUB"
    },
    "477": {
      "offset": [
        851,
        948
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "478": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP3",
      "path": "4"
    },
    "479": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "AND",
      "path": "4"
    },
    "480": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "481": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "482": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "483": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "AND",
      "path": "4"
    },
    "484": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "485": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "DUP5",
      "path": "4"
    },
    "486": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "JUMP",
      "path": "4"
    },
    "487": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "488": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "490": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "491": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "494": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "495": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "496": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "497": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "498": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        851,
        948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "499": {
      "op": "SWAP4"
    },
    "500": {
      "op": "DUP5"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "508": {
      "op": "SHL"
    },
    "509": {
      "op": "SUB"
    },
    "510": {
      "op": "SWAP3"
    },
    "511": {
      "op": "DUP4"
    },
    "512": {
      "op": "AND"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "515": {
      "op": "DUP6"
    },
    "516": {
      "op": "ADD"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "SWAP2"
    },
    "519": {
      "op": "AND"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "522": {
      "op": "DUP4"
    },
    "523": {
      "op": "ADD"
    },
    "524": {
      "op": "MSTORE"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "527": {
      "op": "DUP3"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "op": "MSTORE"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "532": {
      "op": "ADD"
    },
    "533": {
      "op": "SWAP1"
    },
    "534": {
      "op": "JUMP"
    },
    "535": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "536": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x257"
    },
    "539": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x225"
    },
    "542": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "543": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "545": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC87"
    },
    "548": {
      "fn": "Barter.valueBorrowedOneNFT",
      "jump": "i",
      "offset": [
        6699,
        6916
      ],
      "op": "JUMP",
      "path": "4"
    },
    "549": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 1
    },
    "559": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "DUP4",
      "path": "4"
    },
    "560": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "AND",
      "path": "4"
    },
    "561": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6832,
        6839
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "563": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "564": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "DUP2",
      "path": "4"
    },
    "565": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "566": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6869
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "568": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "570": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "571": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "DUP2",
      "path": "4"
    },
    "572": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "573": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "575": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "DUP1",
      "path": "4"
    },
    "576": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "DUP4",
      "path": "4"
    },
    "577": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6877
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "578": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "579": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "580": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "581": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "AND",
      "path": "4"
    },
    "582": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "DUP3",
      "path": "4"
    },
    "583": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "584": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "585": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "DUP4",
      "path": "4"
    },
    "586": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "587": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "DUP4",
      "path": "4"
    },
    "588": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "DUP2",
      "path": "4"
    },
    "589": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6888
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "590": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6898
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "591": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6898
      ],
      "op": "DUP2",
      "path": "4"
    },
    "592": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6898
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "593": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6898
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "594": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6898
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "595": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6898
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "596": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6909
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "597": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6858,
        6909
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "598": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "JUMP",
      "path": "4"
    },
    "599": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "600": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "602": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "603": {
      "op": "SWAP1"
    },
    "604": {
      "op": "DUP2"
    },
    "605": {
      "op": "MSTORE"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6699,
        6916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "612": {
      "op": "JUMP"
    },
    "613": {
      "offset": [
        991,
        1064
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "614": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        991,
        1064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "617": {
      "offset": [
        1022,
        1064
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0xC778417E063141139FCE010982780140AA0CD5AB"
    },
    "638": {
      "offset": [
        991,
        1064
      ],
      "op": "DUP2",
      "path": "4"
    },
    "639": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        991,
        1064
      ],
      "op": "JUMP",
      "path": "4"
    },
    "640": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6500,
        6622
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "641": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6500,
        6622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x257"
    },
    "644": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6500,
        6622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28E"
    },
    "647": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6500,
        6622
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "648": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6500,
        6622
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "650": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6500,
        6622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD5A"
    },
    "653": {
      "fn": "Barter.totalValueBorrowed",
      "jump": "i",
      "offset": [
        6500,
        6622
      ],
      "op": "JUMP",
      "path": "4"
    },
    "654": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6500,
        6622
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "661": {
      "op": "SHL"
    },
    "662": {
      "op": "SUB"
    },
    "663": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "AND",
      "path": "4",
      "statement": 2
    },
    "664": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6565,
        6572
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "666": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "667": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "DUP2",
      "path": "4"
    },
    "668": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "669": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "671": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "DUP2",
      "path": "4"
    },
    "672": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "673": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "674": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "676": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "677": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "678": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "679": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6591,
        6615
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "680": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6500,
        6622
      ],
      "op": "JUMP",
      "path": "4"
    },
    "681": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "682": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1"
    },
    "685": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B7"
    },
    "688": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "689": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "691": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD7C"
    },
    "694": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        7211,
        7365
      ],
      "op": "JUMP",
      "path": "4"
    },
    "695": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "696": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA77"
    },
    "699": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        7211,
        7365
      ],
      "op": "JUMP",
      "path": "4"
    },
    "700": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "701": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x40"
    },
    "703": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "704": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "709": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "711": {
      "op": "SHL"
    },
    "712": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP2",
      "path": "4"
    },
    "713": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "720": {
      "op": "SHL"
    },
    "721": {
      "op": "SUB"
    },
    "722": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1769
      ],
      "op": "DUP4",
      "path": "4"
    },
    "723": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1769
      ],
      "op": "AND",
      "path": "4"
    },
    "724": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1769
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "725": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1769
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "730": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1769
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "731": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EC"
    },
    "734": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "735": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1770,
        1776
      ],
      "op": "DUP8",
      "path": "4"
    },
    "736": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1770,
        1776
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "737": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1778,
        1785
      ],
      "op": "DUP8",
      "path": "4"
    },
    "738": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1778,
        1785
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "739": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1787,
        1795
      ],
      "op": "DUP7",
      "path": "4"
    },
    "740": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1787,
        1795
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "741": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "743": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "ADD",
      "path": "4"
    },
    "744": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA6"
    },
    "747": {
      "fn": "Barter.exchangeNFT",
      "jump": "i",
      "offset": [
        1734,
        1796
      ],
      "op": "JUMP",
      "path": "4"
    },
    "748": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "749": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "751": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "753": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "754": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "755": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP4",
      "path": "4"
    },
    "756": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "SUB",
      "path": "4"
    },
    "757": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP2",
      "path": "4"
    },
    "758": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "760": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP8",
      "path": "4"
    },
    "761": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "762": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "763": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "764": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "765": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "766": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x306"
    },
    "769": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "770": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "772": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "773": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "REVERT",
      "path": "4"
    },
    "774": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "775": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "POP",
      "path": "4"
    },
    "776": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "GAS",
      "path": "4"
    },
    "777": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "CALL",
      "path": "4"
    },
    "778": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "779": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "780": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "781": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x31A"
    },
    "784": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "785": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "786": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "788": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "789": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "790": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "791": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "793": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "REVERT",
      "path": "4"
    },
    "794": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "795": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "POP",
      "path": "4"
    },
    "796": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "POP",
      "path": "4"
    },
    "797": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "POP",
      "path": "4"
    },
    "798": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1734,
        1796
      ],
      "op": "POP",
      "path": "4"
    },
    "799": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "POP",
      "path": "4"
    },
    "800": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "POP",
      "path": "4"
    },
    "801": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "POP",
      "path": "4"
    },
    "802": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1410,
        1803
      ],
      "op": "POP",
      "path": "4"
    },
    "803": {
      "fn": "Barter.exchangeNFT",
      "jump": "o",
      "offset": [
        1410,
        1803
      ],
      "op": "JUMP",
      "path": "4"
    },
    "804": {
      "fn": "Barter.handleDefault",
      "offset": [
        5191,
        6014
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "805": {
      "offset": [
        1199,
        1204
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "807": {
      "fn": "Barter.handleDefault",
      "offset": [
        1199,
        1204
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "814": {
      "op": "SHL"
    },
    "815": {
      "op": "SUB"
    },
    "816": {
      "offset": [
        1199,
        1204
      ],
      "op": "AND",
      "path": "4"
    },
    "817": {
      "offset": [
        1185,
        1195
      ],
      "op": "CALLER",
      "path": "4"
    },
    "818": {
      "offset": [
        1185,
        1204
      ],
      "op": "EQ",
      "path": "4"
    },
    "819": {
      "offset": [
        1177,
        1229
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37A"
    },
    "822": {
      "offset": [
        1177,
        1229
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "823": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "825": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "832": {
      "op": "SHL"
    },
    "833": {
      "offset": [
        1177,
        1229
      ],
      "op": "DUP2",
      "path": "4"
    },
    "834": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "837": {
      "offset": [
        1177,
        1229
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "839": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "DUP3",
      "path": "4"
    },
    "840": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "ADD",
      "path": "4"
    },
    "841": {
      "op": "MSTORE"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "846": {
      "op": "DUP3"
    },
    "847": {
      "op": "ADD"
    },
    "848": {
      "op": "MSTORE"
    },
    "849": {
      "op": "PUSH20",
      "value": "0x6D7573742068617665206F776E657220726F6C65"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "872": {
      "op": "SHL"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "875": {
      "op": "DUP3"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "op": "MSTORE"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "880": {
      "op": "ADD"
    },
    "881": {
      "offset": [
        1177,
        1229
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "882": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "884": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "885": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "DUP1",
      "path": "4"
    },
    "886": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "887": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "SUB",
      "path": "4"
    },
    "888": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "889": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "890": {
      "fn": "Barter.handleDefault",
      "offset": [
        1177,
        1229
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "897": {
      "op": "SHL"
    },
    "898": {
      "op": "SUB"
    },
    "899": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 4
    },
    "900": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "DUP5",
      "path": "4"
    },
    "901": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "AND",
      "path": "4"
    },
    "902": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "904": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "905": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "DUP2",
      "path": "4"
    },
    "906": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "907": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5540
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "909": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "911": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "912": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "DUP2",
      "path": "4"
    },
    "913": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "914": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "916": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "DUP1",
      "path": "4"
    },
    "917": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "DUP4",
      "path": "4"
    },
    "918": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5548
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "919": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "920": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "DUP7",
      "path": "4"
    },
    "921": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "AND",
      "path": "4"
    },
    "922": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "DUP4",
      "path": "4"
    },
    "923": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "924": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "925": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "DUP2",
      "path": "4"
    },
    "926": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "927": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "DUP3",
      "path": "4"
    },
    "928": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "DUP3",
      "path": "4"
    },
    "929": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5559
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "930": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5569
      ],
      "op": "DUP5",
      "path": "4"
    },
    "931": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5569
      ],
      "op": "DUP4",
      "path": "4"
    },
    "932": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5569
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "933": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5569
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "934": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5569
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "935": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5569
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "936": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "938": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5579
      ],
      "op": "ADD",
      "path": "4"
    },
    "939": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5579
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "940": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5589
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B8"
    },
    "943": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5589
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "944": {
      "fn": "Barter.handleDefault",
      "offset": [
        5582,
        5589
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x278D00"
    },
    "948": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5589
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE0"
    },
    "951": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        5529,
        5589
      ],
      "op": "JUMP",
      "path": "4"
    },
    "952": {
      "fn": "Barter.handleDefault",
      "offset": [
        5529,
        5589
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "953": {
      "fn": "Barter.handleDefault",
      "offset": [
        5494,
        5509
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "954": {
      "branch": 25,
      "fn": "Barter.handleDefault",
      "offset": [
        5494,
        5590
      ],
      "op": "GT",
      "path": "4"
    },
    "955": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x411"
    },
    "958": {
      "branch": 25,
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "959": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "961": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "962": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "966": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "968": {
      "op": "SHL"
    },
    "969": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "DUP2",
      "path": "4"
    },
    "970": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "973": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "975": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "DUP3",
      "path": "4"
    },
    "976": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "ADD",
      "path": "4"
    },
    "977": {
      "op": "MSTORE"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "982": {
      "op": "DUP3"
    },
    "983": {
      "op": "ADD"
    },
    "984": {
      "op": "MSTORE"
    },
    "985": {
      "op": "PUSH32",
      "value": "0x427579657220686173206D696E756D756D203330206461797320746F20726570"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1020": {
      "op": "DUP3"
    },
    "1021": {
      "op": "ADD"
    },
    "1022": {
      "op": "MSTORE"
    },
    "1023": {
      "op": "PUSH2",
      "value": "0x6179"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1028": {
      "op": "SHL"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1031": {
      "op": "DUP3"
    },
    "1032": {
      "op": "ADD"
    },
    "1033": {
      "op": "MSTORE"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x371"
    },
    "1040": {
      "op": "JUMP"
    },
    "1041": {
      "fn": "Barter.handleDefault",
      "offset": [
        5473,
        5650
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "SUB"
    },
    "1050": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 5
    },
    "1051": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1052": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "AND",
      "path": "4"
    },
    "1053": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1055": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1056": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1057": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1058": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1060": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1062": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1063": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1064": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1065": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1067": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1068": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1069": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5755
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1070": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5695
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1071": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5695
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1072": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5695
      ],
      "op": "AND",
      "path": "4"
    },
    "1073": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5766
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1074": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5766
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1075": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5766
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1076": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5766
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1077": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5766
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1078": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5766
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1079": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5766
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1080": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5766
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1081": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5766
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1082": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1083": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1084": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1085": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1086": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1087": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1088": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1089": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1090": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1091": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5776
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1092": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5783
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1094": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5783
      ],
      "op": "ADD",
      "path": "4"
    },
    "1095": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5783
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1096": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1097": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1098": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1107": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1108": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5695
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1109": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5695
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1110": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5695
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "1115": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5695
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1116": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x470"
    },
    "1119": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1120": {
      "fn": "Barter.handleDefault",
      "offset": [
        5717,
        5721
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "1121": {
      "fn": "Barter.handleDefault",
      "offset": [
        5717,
        5721
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1122": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5783
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1123": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5783
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1124": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5783
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1125": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5783
      ],
      "op": "AND",
      "path": "4"
    },
    "1126": {
      "fn": "Barter.handleDefault",
      "offset": [
        5736,
        5783
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1127": {
      "fn": "Barter.handleDefault",
      "offset": [
        5767,
        5775
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1128": {
      "fn": "Barter.handleDefault",
      "offset": [
        5767,
        5775
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1129": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1131": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "ADD",
      "path": "4"
    },
    "1132": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA6"
    },
    "1135": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        5660,
        5815
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1136": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1137": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1139": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1141": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1142": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1143": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1144": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "SUB",
      "path": "4"
    },
    "1145": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1146": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1148": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1149": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1150": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "1151": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1152": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1153": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1154": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48A"
    },
    "1157": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1158": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1160": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1161": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1162": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1163": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "POP",
      "path": "4"
    },
    "1164": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "GAS",
      "path": "4"
    },
    "1165": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "CALL",
      "path": "4"
    },
    "1166": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1167": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1168": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1169": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x49E"
    },
    "1172": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1173": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1174": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1176": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1177": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1178": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1179": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1181": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1182": {
      "fn": "Barter.handleDefault",
      "offset": [
        5660,
        5815
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "SUB"
    },
    "1195": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 6
    },
    "1196": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1197": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "AND",
      "path": "4"
    },
    "1198": {
      "fn": "Barter.handleDefault",
      "offset": [
        5879,
        5880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1200": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1201": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1202": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1203": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5836
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1205": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1207": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1208": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1209": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1210": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1212": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1213": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1214": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5844
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1215": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1216": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1217": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1218": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "AND",
      "path": "4"
    },
    "1219": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1220": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1221": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1222": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1223": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1224": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1225": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1226": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5855
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1227": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5865
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1228": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5865
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1229": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5865
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1230": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5865
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1231": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5865
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1232": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5865
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1233": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5865
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1234": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5865
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1235": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1236": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1237": {
      "fn": "Barter.handleDefault",
      "offset": [
        5825,
        5880
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1238": {
      "fn": "Barter.handleDefault",
      "offset": [
        5953,
        6003
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x3"
    },
    "1240": {
      "fn": "Barter.handleDefault",
      "offset": [
        5953,
        6003
      ],
      "op": "ADD",
      "path": "4"
    },
    "1241": {
      "fn": "Barter.handleDefault",
      "offset": [
        5953,
        6007
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1242": {
      "fn": "Barter.handleDefault",
      "jump": "o",
      "offset": [
        5191,
        6014
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1243": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1244": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x40"
    },
    "1246": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1247": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1254": {
      "op": "SHL"
    },
    "1255": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1256": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1257": {
      "fn": "Barter.repay",
      "offset": [
        3966,
        3976
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1258": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1260": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1261": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "ADD",
      "path": "4"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "fn": "Barter.repay",
      "offset": [
        3981,
        3988
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1264": {
      "fn": "Barter.repay",
      "offset": [
        3981,
        3988
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1265": {
      "offset": [
        1022,
        1064
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0xC778417E063141139FCE010982780140AA0CD5AB"
    },
    "1286": {
      "fn": "Barter.repay",
      "offset": [
        1022,
        1064
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1287": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3965
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "1292": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3965
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1295": {
      "op": "ADD"
    },
    "1296": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1298": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1300": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1301": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1302": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1303": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "SUB",
      "path": "4"
    },
    "1304": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1305": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1306": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "GAS",
      "path": "4"
    },
    "1307": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "1308": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1309": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1310": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1311": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x52C"
    },
    "1314": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1315": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1316": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1318": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1319": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1320": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1321": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1323": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1324": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1325": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "POP",
      "path": "4"
    },
    "1326": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "POP",
      "path": "4"
    },
    "1327": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "POP",
      "path": "4"
    },
    "1328": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "POP",
      "path": "4"
    },
    "1329": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1331": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1332": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1333": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1335": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "NOT",
      "path": "4"
    },
    "1336": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1338": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1339": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "ADD",
      "path": "4"
    },
    "1340": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "AND",
      "path": "4"
    },
    "1341": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1342": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "ADD",
      "path": "4"
    },
    "1343": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1344": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1346": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1347": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "POP",
      "path": "4"
    },
    "1348": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1349": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "ADD",
      "path": "4"
    },
    "1350": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1351": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x550"
    },
    "1354": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1355": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1356": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF8"
    },
    "1359": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        3943,
        3977
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1360": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3977
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1361": {
      "fn": "Barter.repay",
      "offset": [
        3943,
        3988
      ],
      "op": "LT",
      "path": "4"
    },
    "1362": {
      "branch": 26,
      "fn": "Barter.repay",
      "offset": [
        3943,
        3988
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1363": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59E"
    },
    "1366": {
      "branch": 26,
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1367": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1369": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1370": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1376": {
      "op": "SHL"
    },
    "1377": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1378": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1381": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1383": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1384": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "ADD",
      "path": "4"
    },
    "1385": {
      "op": "MSTORE"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1390": {
      "op": "DUP3"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "MSTORE"
    },
    "1393": {
      "op": "PUSH32",
      "value": "0x6E6F7420656E6F756768205745544820746F2072657061790000000000000000"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1428": {
      "op": "DUP3"
    },
    "1429": {
      "op": "ADD"
    },
    "1430": {
      "op": "MSTORE"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1433": {
      "op": "ADD"
    },
    "1434": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x371"
    },
    "1437": {
      "op": "JUMP"
    },
    "1438": {
      "fn": "Barter.repay",
      "offset": [
        3922,
        4038
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 9
    },
    "1448": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1449": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "AND",
      "path": "4"
    },
    "1450": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1452": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1453": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1454": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1455": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1457": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1459": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1460": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1461": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1462": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1464": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1465": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1466": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4088
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1467": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1468": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1469": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "AND",
      "path": "4"
    },
    "1470": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1471": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1472": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1473": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1474": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1475": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1476": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1477": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4099
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1478": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4109
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1479": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4109
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1480": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4109
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1481": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1482": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4109
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1483": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4109
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1484": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4120
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1485": {
      "fn": "Barter.repay",
      "offset": [
        4069,
        4131
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1486": {
      "op": "GT"
    },
    "1487": {
      "branch": 27,
      "fn": "Barter.repay",
      "offset": [
        4069,
        4131
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1488": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x625"
    },
    "1491": {
      "branch": 27,
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1492": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1494": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1503": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1506": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1508": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1509": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "ADD",
      "path": "4"
    },
    "1510": {
      "op": "MSTORE"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1515": {
      "op": "DUP3"
    },
    "1516": {
      "op": "ADD"
    },
    "1517": {
      "op": "MSTORE"
    },
    "1518": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420706179206261636B206D6F7265207468616E20796F75206F77"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1553": {
      "op": "DUP3"
    },
    "1554": {
      "op": "ADD"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "1560": {
      "op": "SHL"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1563": {
      "op": "DUP3"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1568": {
      "op": "ADD"
    },
    "1569": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x371"
    },
    "1572": {
      "op": "JUMP"
    },
    "1573": {
      "fn": "Barter.repay",
      "offset": [
        4048,
        4190
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1574": {
      "fn": "Barter.repay",
      "offset": [
        4240,
        4250
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 10
    },
    "1575": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1577": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1578": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1579": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1580": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4276
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1582": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1584": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1585": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1586": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1587": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1589": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1590": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1591": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4288
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1598": {
      "op": "SHL"
    },
    "1599": {
      "op": "SUB"
    },
    "1600": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1601": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1602": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "AND",
      "path": "4"
    },
    "1603": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1604": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1605": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1606": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1607": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1608": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1609": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1610": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4299
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1611": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1612": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1613": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1614": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1615": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1616": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1617": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1618": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1619": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1620": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4309
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1621": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1623": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4316
      ],
      "op": "ADD",
      "path": "4"
    },
    "1624": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4316
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1625": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1626": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1627": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1636": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1637": {
      "offset": [
        1022,
        1064
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0xC778417E063141139FCE010982780140AA0CD5AB"
    },
    "1658": {
      "fn": "Barter.repay",
      "offset": [
        1022,
        1064
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1659": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4226
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "1664": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4226
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1665": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x693"
    },
    "1668": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1669": {
      "fn": "Barter.repay",
      "offset": [
        4240,
        4250
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1670": {
      "fn": "Barter.repay",
      "offset": [
        4240,
        4250
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1671": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4316
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1672": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4316
      ],
      "op": "AND",
      "path": "4"
    },
    "1673": {
      "fn": "Barter.repay",
      "offset": [
        4265,
        4316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1674": {
      "fn": "Barter.repay",
      "offset": [
        4331,
        4338
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1675": {
      "fn": "Barter.repay",
      "offset": [
        4331,
        4338
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1676": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1678": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "ADD",
      "path": "4"
    },
    "1679": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA6"
    },
    "1682": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4201,
        4348
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1683": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1684": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1686": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1688": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1689": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1690": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1691": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "SUB",
      "path": "4"
    },
    "1692": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1693": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1695": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1696": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "GAS",
      "path": "4"
    },
    "1697": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "CALL",
      "path": "4"
    },
    "1698": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1699": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1700": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1701": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B2"
    },
    "1704": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1705": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1706": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1708": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1709": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1710": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1711": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1713": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1714": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1715": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "POP",
      "path": "4"
    },
    "1716": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "POP",
      "path": "4"
    },
    "1717": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "POP",
      "path": "4"
    },
    "1718": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "POP",
      "path": "4"
    },
    "1719": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1721": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1722": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1723": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1725": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "NOT",
      "path": "4"
    },
    "1726": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1728": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1729": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "ADD",
      "path": "4"
    },
    "1730": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "AND",
      "path": "4"
    },
    "1731": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1732": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "ADD",
      "path": "4"
    },
    "1733": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1734": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1736": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1737": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "POP",
      "path": "4"
    },
    "1738": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1739": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "ADD",
      "path": "4"
    },
    "1740": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1741": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6D6"
    },
    "1744": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1745": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1746": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE11"
    },
    "1749": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4201,
        4348
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1750": {
      "fn": "Barter.repay",
      "offset": [
        4201,
        4348
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1751": {
      "op": "POP"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "op": "SUB"
    },
    "1760": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 11
    },
    "1761": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1762": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "AND",
      "path": "4"
    },
    "1763": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1765": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1766": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1767": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1768": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4370
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1770": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1772": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1773": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1774": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1775": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1777": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1778": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1779": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1780": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1781": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1782": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "AND",
      "path": "4"
    },
    "1783": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1784": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1785": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1786": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1787": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1788": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1789": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1790": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4389
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1791": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4399
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1792": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4399
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1793": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4399
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1794": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4399
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1795": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4399
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1796": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4399
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1797": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4399
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1798": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4399
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1799": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4421
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1800": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4421
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1801": {
      "fn": "Barter.repay",
      "offset": [
        4414,
        4421
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1802": {
      "fn": "Barter.repay",
      "offset": [
        4414,
        4421
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1803": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1804": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4421
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x716"
    },
    "1807": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4421
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1808": {
      "fn": "Barter.repay",
      "offset": [
        4414,
        4421
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1809": {
      "fn": "Barter.repay",
      "offset": [
        4414,
        4421
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1810": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4421
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE33"
    },
    "1813": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4359,
        4421
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1814": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4421
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1815": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4421
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1816": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4421
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1817": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4421
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "op": "POP"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "SUB"
    },
    "1828": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 12
    },
    "1829": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "AND",
      "path": "4"
    },
    "1830": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4520
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1832": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1833": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1834": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1835": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1837": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1838": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1839": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1840": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1842": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1843": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4528
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1844": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4539
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1845": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4539
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1846": {
      "fn": "Barter.repay",
      "offset": [
        4532,
        4539
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1847": {
      "fn": "Barter.repay",
      "offset": [
        4532,
        4539
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1848": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4520
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1849": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4539
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x743"
    },
    "1852": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4539
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1853": {
      "fn": "Barter.repay",
      "offset": [
        4532,
        4539
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1854": {
      "fn": "Barter.repay",
      "offset": [
        4532,
        4539
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1855": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4539
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE33"
    },
    "1858": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4504,
        4539
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1859": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4539
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1860": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4539
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1861": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4539
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1862": {
      "fn": "Barter.repay",
      "offset": [
        4504,
        4539
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1871": {
      "op": "SHL"
    },
    "1872": {
      "op": "SUB"
    },
    "1873": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1874": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1875": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "4"
    },
    "1876": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1878": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1879": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1880": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1881": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4600
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1883": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1885": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1886": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1887": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1888": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1890": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1891": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1892": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4608
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1893": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1894": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1895": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "AND",
      "path": "4"
    },
    "1896": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1897": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1898": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1899": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1900": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1901": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1902": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1903": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4619
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1904": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4629
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1905": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4629
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1906": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4629
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1907": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4629
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1908": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4629
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1909": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4629
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1910": {
      "fn": "Barter.repay",
      "offset": [
        4589,
        4640
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1911": {
      "fn": "Barter.repay",
      "offset": [
        4585,
        5092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x863"
    },
    "1914": {
      "fn": "Barter.repay",
      "offset": [
        4585,
        5092
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1921": {
      "op": "SHL"
    },
    "1922": {
      "op": "SUB"
    },
    "1923": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 13
    },
    "1924": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1925": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "AND",
      "path": "4"
    },
    "1926": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1928": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1929": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1930": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1931": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1933": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1935": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1936": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1937": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1938": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1940": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1941": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1942": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4764
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1943": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4696
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1944": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4696
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1945": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4696
      ],
      "op": "AND",
      "path": "4"
    },
    "1946": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4775
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1947": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4775
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1948": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4775
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1949": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4775
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1950": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4775
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1951": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4775
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1952": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4775
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1953": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4775
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1954": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4775
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1955": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1956": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1957": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1958": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1959": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1960": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1961": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1962": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1963": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1964": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4785
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1965": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4791
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1966": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4791
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1967": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4791
      ],
      "op": "ADD",
      "path": "4"
    },
    "1968": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4791
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1969": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1970": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1971": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1980": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1981": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4696
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1982": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4696
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1983": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4696
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "1988": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4696
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1989": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D9"
    },
    "1992": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1993": {
      "fn": "Barter.repay",
      "offset": [
        4722,
        4726
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "1994": {
      "fn": "Barter.repay",
      "offset": [
        4722,
        4726
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1995": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4791
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1996": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4791
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1997": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4791
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1998": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4791
      ],
      "op": "AND",
      "path": "4"
    },
    "1999": {
      "fn": "Barter.repay",
      "offset": [
        4745,
        4791
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2000": {
      "fn": "Barter.repay",
      "offset": [
        4776,
        4784
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2001": {
      "fn": "Barter.repay",
      "offset": [
        4776,
        4784
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2002": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2004": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "ADD",
      "path": "4"
    },
    "2005": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA6"
    },
    "2008": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4661,
        4831
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2009": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2010": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2012": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2014": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2015": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2016": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2017": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "SUB",
      "path": "4"
    },
    "2018": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2019": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2021": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2022": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2023": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "2024": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2025": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2026": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2027": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F3"
    },
    "2030": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2031": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2033": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2034": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2035": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2036": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "POP",
      "path": "4"
    },
    "2037": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "GAS",
      "path": "4"
    },
    "2038": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "CALL",
      "path": "4"
    },
    "2039": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2040": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2041": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2042": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x807"
    },
    "2045": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2046": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2047": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2049": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2050": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2051": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2052": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2054": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2055": {
      "fn": "Barter.repay",
      "offset": [
        4661,
        4831
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "op": "POP"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "op": "POP"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2066": {
      "op": "SHL"
    },
    "2067": {
      "op": "SUB"
    },
    "2068": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 14
    },
    "2069": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2070": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "AND",
      "path": "4"
    },
    "2071": {
      "fn": "Barter.repay",
      "offset": [
        4933,
        4934
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2073": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2074": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2075": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2076": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2078": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2080": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2081": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2082": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2083": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2085": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2086": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2087": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4899
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2088": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2089": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2090": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "AND",
      "path": "4"
    },
    "2091": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2092": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2093": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2094": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2095": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2096": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2097": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2098": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4910
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2099": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4920
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2100": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4920
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2101": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4920
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2102": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2103": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4920
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2104": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4920
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2105": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4920
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2106": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4920
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2107": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2109": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4930
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2110": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4930
      ],
      "op": "ADD",
      "path": "4"
    },
    "2111": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4934
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2112": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4934
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2113": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4934
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2114": {
      "fn": "Barter.repay",
      "offset": [
        4880,
        4934
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2115": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        4994
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 15
    },
    "2116": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        4994
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2117": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        4994
      ],
      "op": "ADD",
      "path": "4"
    },
    "2118": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        5007
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2119": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        5007
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "op": "SUB"
    },
    "2128": {
      "op": "NOT"
    },
    "2129": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        5007
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2130": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        5007
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2131": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        5007
      ],
      "op": "AND",
      "path": "4"
    },
    "2132": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        5007
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2133": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        5007
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2134": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        5007
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2137": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5068
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 16
    },
    "2138": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5068
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2139": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5068
      ],
      "op": "ADD",
      "path": "4"
    },
    "2140": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5081
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2141": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5081
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2142": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5081
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2143": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5081
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2144": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5081
      ],
      "op": "AND",
      "path": "4"
    },
    "2145": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5081
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2146": {
      "fn": "Barter.repay",
      "offset": [
        5021,
        5081
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2147": {
      "fn": "Barter.repay",
      "offset": [
        4585,
        5092
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2148": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "POP",
      "path": "4"
    },
    "2149": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "POP",
      "path": "4"
    },
    "2150": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "POP",
      "path": "4"
    },
    "2151": {
      "fn": "Barter.repay",
      "offset": [
        3741,
        5098
      ],
      "op": "POP",
      "path": "4"
    },
    "2152": {
      "fn": "Barter.repay",
      "jump": "o",
      "offset": [
        3741,
        5098
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2153": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2227,
        3547
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2160": {
      "op": "SHL"
    },
    "2161": {
      "op": "SUB"
    },
    "2162": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2163": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2164": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "AND",
      "path": "4"
    },
    "2165": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2167": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2168": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2169": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2170": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2787
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2172": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2174": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2175": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2176": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2177": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2179": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2180": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2181": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2795
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2182": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2183": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2184": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "AND",
      "path": "4"
    },
    "2185": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2186": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2187": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2188": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2189": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2190": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2191": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2806
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2192": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2816
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2193": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2816
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2194": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2816
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2195": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2816
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2196": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2816
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2197": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2816
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2198": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2816
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2199": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2816
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2200": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2823
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2202": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2823
      ],
      "op": "ADD",
      "path": "4"
    },
    "2203": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2823
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2204": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2823
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2205": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2823
      ],
      "op": "AND",
      "path": "4"
    },
    "2206": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2207": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2834
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2208": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2834
      ],
      "op": "AND",
      "path": "4"
    },
    "2209": {
      "branch": 28,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2776,
        2834
      ],
      "op": "EQ",
      "path": "4"
    },
    "2210": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2772,
        2926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8DD"
    },
    "2213": {
      "branch": 28,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2772,
        2926
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "op": "SUB"
    },
    "2222": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 17
    },
    "2223": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2224": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "AND",
      "path": "4"
    },
    "2225": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2227": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2228": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2229": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2230": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2869
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2232": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2234": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2235": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2236": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2237": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2239": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2240": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2241": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2877
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2242": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2243": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2244": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "AND",
      "path": "4"
    },
    "2245": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2246": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2247": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2248": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2249": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2250": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2251": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2252": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2888
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2253": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2898
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2254": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2898
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2255": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2898
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2256": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2257": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2898
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2258": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2898
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2259": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2909
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2260": {
      "branch": 29,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2858,
        2914
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2261": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2850,
        2915
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8DD"
    },
    "2264": {
      "branch": 29,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2850,
        2915
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2265": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2850,
        2915
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2267": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2850,
        2915
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2268": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2850,
        2915
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2269": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2850,
        2915
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2276": {
      "op": "SHL"
    },
    "2277": {
      "op": "SUB"
    },
    "2278": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2279": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2280": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "AND",
      "path": "4"
    },
    "2281": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2283": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2284": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2285": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2286": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2951
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2288": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2290": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2291": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2292": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2293": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2295": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2296": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2297": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2959
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2298": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2299": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2300": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "AND",
      "path": "4"
    },
    "2301": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2302": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2303": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2304": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2305": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2306": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2307": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2308": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2970
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2309": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2980
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2310": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2980
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2311": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2980
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2312": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2980
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2313": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2980
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2314": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2980
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2315": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2317": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2990
      ],
      "op": "ADD",
      "path": "4"
    },
    "2318": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2940,
        2990
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2319": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2936,
        3107
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x947"
    },
    "2322": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2936,
        3107
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2329": {
      "op": "SHL"
    },
    "2330": {
      "op": "SUB"
    },
    "2331": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 18
    },
    "2332": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2333": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "AND",
      "path": "4"
    },
    "2334": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2336": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2337": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2338": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2339": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3022
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2341": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2343": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2344": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2345": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2346": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2348": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2349": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2350": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3030
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2351": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2352": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2353": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "AND",
      "path": "4"
    },
    "2354": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2355": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2356": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2357": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2358": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2359": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2360": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2361": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3041
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2362": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3051
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2363": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3051
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2364": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3051
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2365": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3051
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2366": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3051
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2367": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3051
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2368": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3064,
        3096
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "2369": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3061
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2371": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3061
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2372": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3061
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2373": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3061
      ],
      "op": "ADD",
      "path": "4"
    },
    "2374": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3011,
        3096
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2375": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2936,
        3107
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2376": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 19,
      "value": "0x40"
    },
    "2378": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2379": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2386": {
      "op": "SHL"
    },
    "2387": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2388": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2395": {
      "op": "SHL"
    },
    "2396": {
      "op": "SUB"
    },
    "2397": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3251
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2398": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3251
      ],
      "op": "AND",
      "path": "4"
    },
    "2399": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3251
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2400": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3251
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "2405": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3251
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2406": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x977"
    },
    "2409": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2410": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3252,
        3258
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2411": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3252,
        3258
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2412": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3268,
        3272
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2413": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3268,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2414": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3275,
        3283
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2415": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3275,
        3283
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2416": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2418": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "ADD",
      "path": "4"
    },
    "2419": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA6"
    },
    "2422": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        3216,
        3284
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2423": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2424": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2426": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2428": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2429": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2430": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2431": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "SUB",
      "path": "4"
    },
    "2432": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2433": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2435": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2436": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2437": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "2438": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2439": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2440": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2441": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x991"
    },
    "2444": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2445": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2447": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2448": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2449": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2450": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "POP",
      "path": "4"
    },
    "2451": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "GAS",
      "path": "4"
    },
    "2452": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "CALL",
      "path": "4"
    },
    "2453": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2454": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2455": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2456": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A5"
    },
    "2459": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2460": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2461": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2463": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2464": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2465": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2466": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2468": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2469": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3216,
        3284
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2470": {
      "op": "POP"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2480": {
      "op": "SHL"
    },
    "2481": {
      "op": "SUB"
    },
    "2482": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 20
    },
    "2483": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2484": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "AND",
      "path": "4"
    },
    "2485": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2487": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2488": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2489": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2490": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3306
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2492": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2494": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2495": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2496": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2497": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2499": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2500": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2501": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2502": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2503": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2504": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "AND",
      "path": "4"
    },
    "2505": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2506": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2507": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2508": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2509": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2510": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2511": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2512": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3325
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2513": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3335
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2514": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3335
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2515": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3335
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2516": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3335
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2517": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3335
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2518": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3335
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2519": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3335
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2520": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3335
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2521": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2522": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3360
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2523": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3350,
        3360
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2524": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3350,
        3360
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2525": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3314
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2526": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9E8"
    },
    "2529": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3360
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2530": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3350,
        3360
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2531": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3350,
        3360
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2532": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE0"
    },
    "2535": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        3295,
        3360
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2536": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3360
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2537": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3360
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2538": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3360
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2539": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3295,
        3360
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2540": {
      "op": "POP"
    },
    "2541": {
      "op": "POP"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "op": "SUB"
    },
    "2550": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 21
    },
    "2551": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "AND",
      "path": "4"
    },
    "2552": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2554": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2555": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2556": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2557": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2559": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2560": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2561": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2562": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2564": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2565": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3394
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2566": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3408
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2567": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3408
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2568": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3398,
        3408
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2569": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3398,
        3408
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2570": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2571": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3408
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA15"
    },
    "2574": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3408
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2575": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3398,
        3408
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2576": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3398,
        3408
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2577": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3408
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE0"
    },
    "2580": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        3370,
        3408
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2581": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3408
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2582": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3408
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2583": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3408
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2584": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3370,
        3408
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2585": {
      "op": "POP"
    },
    "2586": {
      "op": "POP"
    },
    "2587": {
      "op": "POP"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "op": "SUB"
    },
    "2596": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "SWAP4",
      "path": "4",
      "statement": 22
    },
    "2597": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2598": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "AND",
      "path": "4"
    },
    "2599": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2601": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2602": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2603": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2604": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2606": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2608": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2609": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2610": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2611": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2613": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2614": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2615": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3437
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2616": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2617": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "DUP10",
      "path": "4"
    },
    "2618": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "AND",
      "path": "4"
    },
    "2619": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2620": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2621": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2622": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2623": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2624": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2625": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2626": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3448
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2627": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2628": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2629": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2630": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2631": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2632": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2633": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2634": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2635": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2636": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2637": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3458
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2638": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3465
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2640": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3465
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2641": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3465
      ],
      "op": "ADD",
      "path": "4"
    },
    "2642": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2643": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2644": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2645": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2646": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2647": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "AND",
      "path": "4"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2654": {
      "op": "SHL"
    },
    "2655": {
      "op": "SUB"
    },
    "2656": {
      "op": "NOT"
    },
    "2657": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2658": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2659": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "AND",
      "path": "4"
    },
    "2660": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "OR",
      "path": "4"
    },
    "2661": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2662": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2663": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3418,
        3475
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2664": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3531
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 23
    },
    "2665": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3531
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2666": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3531
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2667": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3531
      ],
      "op": "ADD",
      "path": "4"
    },
    "2668": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2669": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2670": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2671": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2672": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "AND",
      "path": "4"
    },
    "2673": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2674": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2675": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "OR",
      "path": "4"
    },
    "2676": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2677": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3485,
        3540
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2678": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "o",
      "offset": [
        2227,
        3547
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2679": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2680": {
      "offset": [
        1199,
        1204
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2682": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1199,
        1204
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "op": "SUB"
    },
    "2691": {
      "offset": [
        1199,
        1204
      ],
      "op": "AND",
      "path": "4"
    },
    "2692": {
      "offset": [
        1185,
        1195
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2693": {
      "offset": [
        1185,
        1204
      ],
      "op": "EQ",
      "path": "4"
    },
    "2694": {
      "offset": [
        1177,
        1229
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAC8"
    },
    "2697": {
      "offset": [
        1177,
        1229
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2698": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1177,
        1229
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2700": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1177,
        1229
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2701": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2707": {
      "op": "SHL"
    },
    "2708": {
      "offset": [
        1177,
        1229
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2709": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1177,
        1229
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2712": {
      "offset": [
        1177,
        1229
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2714": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1177,
        1229
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2715": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1177,
        1229
      ],
      "op": "ADD",
      "path": "4"
    },
    "2716": {
      "op": "MSTORE"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2721": {
      "op": "DUP3"
    },
    "2722": {
      "op": "ADD"
    },
    "2723": {
      "op": "MSTORE"
    },
    "2724": {
      "op": "PUSH20",
      "value": "0x6D7573742068617665206F776E657220726F6C65"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2750": {
      "op": "DUP3"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "op": "MSTORE"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "offset": [
        1177,
        1229
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x371"
    },
    "2759": {
      "op": "JUMP"
    },
    "2760": {
      "offset": [
        1177,
        1229
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2761": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0x40"
    },
    "2763": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2764": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2773": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7321
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2783": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7321
      ],
      "op": "AND",
      "path": "4"
    },
    "2784": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7321
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2785": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7321
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42842E0E"
    },
    "2790": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7321
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2791": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAF8"
    },
    "2794": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2795": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7330,
        7334
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2796": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7330,
        7334
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2797": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7337,
        7347
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2798": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7337,
        7347
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2799": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7349,
        7357
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2800": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7349,
        7357
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2801": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2803": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "ADD",
      "path": "4"
    },
    "2804": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDA6"
    },
    "2807": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        7292,
        7358
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2808": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2809": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2811": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2813": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2814": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2815": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2816": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "SUB",
      "path": "4"
    },
    "2817": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2818": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2820": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2821": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2822": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "2823": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2824": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2825": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2826": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB12"
    },
    "2829": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2830": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2832": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2833": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2834": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2835": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "POP",
      "path": "4"
    },
    "2836": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "GAS",
      "path": "4"
    },
    "2837": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "CALL",
      "path": "4"
    },
    "2838": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2839": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2840": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2841": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB26"
    },
    "2844": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2845": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2846": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2848": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2849": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2850": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2851": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2853": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2854": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2855": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "POP",
      "path": "4"
    },
    "2856": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "POP",
      "path": "4"
    },
    "2857": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "POP",
      "path": "4"
    },
    "2858": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7292,
        7358
      ],
      "op": "POP",
      "path": "4"
    },
    "2859": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "POP",
      "path": "4"
    },
    "2860": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7211,
        7365
      ],
      "op": "POP",
      "path": "4"
    },
    "2861": {
      "fn": "Barter.emergencyExit",
      "jump": "o",
      "offset": [
        7211,
        7365
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2862": {
      "op": "JUMPDEST"
    },
    "2863": {
      "op": "DUP1"
    },
    "2864": {
      "op": "CALLDATALOAD"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2871": {
      "op": "SHL"
    },
    "2872": {
      "op": "SUB"
    },
    "2873": {
      "op": "DUP2"
    },
    "2874": {
      "op": "AND"
    },
    "2875": {
      "op": "DUP2"
    },
    "2876": {
      "op": "EQ"
    },
    "2877": {
      "op": "PUSH2",
      "value": "0xB45"
    },
    "2880": {
      "op": "JUMPI"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2883": {
      "op": "DUP1"
    },
    "2884": {
      "op": "REVERT"
    },
    "2885": {
      "op": "JUMPDEST"
    },
    "2886": {
      "op": "SWAP2"
    },
    "2887": {
      "op": "SWAP1"
    },
    "2888": {
      "op": "POP"
    },
    "2889": {
      "jump": "o",
      "op": "JUMP"
    },
    "2890": {
      "op": "JUMPDEST"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2893": {
      "op": "DUP1"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2896": {
      "op": "DUP1"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2899": {
      "op": "DUP6"
    },
    "2900": {
      "op": "DUP8"
    },
    "2901": {
      "op": "SUB"
    },
    "2902": {
      "op": "SLT"
    },
    "2903": {
      "op": "ISZERO"
    },
    "2904": {
      "op": "PUSH2",
      "value": "0xB60"
    },
    "2907": {
      "op": "JUMPI"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2910": {
      "op": "DUP1"
    },
    "2911": {
      "op": "REVERT"
    },
    "2912": {
      "op": "JUMPDEST"
    },
    "2913": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "2916": {
      "op": "DUP6"
    },
    "2917": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "2920": {
      "jump": "i",
      "op": "JUMP"
    },
    "2921": {
      "op": "JUMPDEST"
    },
    "2922": {
      "op": "SWAP4"
    },
    "2923": {
      "op": "POP"
    },
    "2924": {
      "op": "PUSH2",
      "value": "0xB77"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2929": {
      "op": "DUP7"
    },
    "2930": {
      "op": "ADD"
    },
    "2931": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "2934": {
      "jump": "i",
      "op": "JUMP"
    },
    "2935": {
      "op": "JUMPDEST"
    },
    "2936": {
      "op": "SWAP3"
    },
    "2937": {
      "op": "POP"
    },
    "2938": {
      "op": "PUSH2",
      "value": "0xB85"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2943": {
      "op": "DUP7"
    },
    "2944": {
      "op": "ADD"
    },
    "2945": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "2948": {
      "jump": "i",
      "op": "JUMP"
    },
    "2949": {
      "op": "JUMPDEST"
    },
    "2950": {
      "op": "SWAP4"
    },
    "2951": {
      "op": "SWAP7"
    },
    "2952": {
      "op": "SWAP3"
    },
    "2953": {
      "op": "SWAP6"
    },
    "2954": {
      "op": "POP"
    },
    "2955": {
      "op": "SWAP3"
    },
    "2956": {
      "op": "SWAP4"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "CALLDATALOAD"
    },
    "2961": {
      "op": "SWAP3"
    },
    "2962": {
      "op": "POP"
    },
    "2963": {
      "op": "POP"
    },
    "2964": {
      "jump": "o",
      "op": "JUMP"
    },
    "2965": {
      "op": "JUMPDEST"
    },
    "2966": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2973": {
      "op": "SHL"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2976": {
      "op": "MSTORE"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2981": {
      "op": "MSTORE"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2986": {
      "op": "REVERT"
    },
    "2987": {
      "op": "JUMPDEST"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2990": {
      "op": "DUP1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2993": {
      "op": "DUP1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2996": {
      "op": "DUP6"
    },
    "2997": {
      "op": "DUP8"
    },
    "2998": {
      "op": "SUB"
    },
    "2999": {
      "op": "SLT"
    },
    "3000": {
      "op": "ISZERO"
    },
    "3001": {
      "op": "PUSH2",
      "value": "0xBC1"
    },
    "3004": {
      "op": "JUMPI"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3007": {
      "op": "DUP1"
    },
    "3008": {
      "op": "REVERT"
    },
    "3009": {
      "op": "JUMPDEST"
    },
    "3010": {
      "op": "PUSH2",
      "value": "0xBCA"
    },
    "3013": {
      "op": "DUP6"
    },
    "3014": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3017": {
      "jump": "i",
      "op": "JUMP"
    },
    "3018": {
      "op": "JUMPDEST"
    },
    "3019": {
      "op": "SWAP4"
    },
    "3020": {
      "op": "POP"
    },
    "3021": {
      "op": "PUSH2",
      "value": "0xBD8"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3026": {
      "op": "DUP7"
    },
    "3027": {
      "op": "ADD"
    },
    "3028": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3031": {
      "jump": "i",
      "op": "JUMP"
    },
    "3032": {
      "op": "JUMPDEST"
    },
    "3033": {
      "op": "SWAP3"
    },
    "3034": {
      "op": "POP"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3037": {
      "op": "DUP6"
    },
    "3038": {
      "op": "ADD"
    },
    "3039": {
      "op": "CALLDATALOAD"
    },
    "3040": {
      "op": "SWAP2"
    },
    "3041": {
      "op": "POP"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3044": {
      "op": "DUP6"
    },
    "3045": {
      "op": "ADD"
    },
    "3046": {
      "op": "CALLDATALOAD"
    },
    "3047": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3056": {
      "op": "DUP1"
    },
    "3057": {
      "op": "DUP3"
    },
    "3058": {
      "op": "GT"
    },
    "3059": {
      "op": "ISZERO"
    },
    "3060": {
      "op": "PUSH2",
      "value": "0xBFC"
    },
    "3063": {
      "op": "JUMPI"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3066": {
      "op": "DUP1"
    },
    "3067": {
      "op": "REVERT"
    },
    "3068": {
      "op": "JUMPDEST"
    },
    "3069": {
      "op": "DUP2"
    },
    "3070": {
      "op": "DUP8"
    },
    "3071": {
      "op": "ADD"
    },
    "3072": {
      "op": "SWAP2"
    },
    "3073": {
      "op": "POP"
    },
    "3074": {
      "op": "DUP8"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3077": {
      "op": "DUP4"
    },
    "3078": {
      "op": "ADD"
    },
    "3079": {
      "op": "SLT"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0xC10"
    },
    "3083": {
      "op": "JUMPI"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3086": {
      "op": "DUP1"
    },
    "3087": {
      "op": "REVERT"
    },
    "3088": {
      "op": "JUMPDEST"
    },
    "3089": {
      "op": "DUP2"
    },
    "3090": {
      "op": "CALLDATALOAD"
    },
    "3091": {
      "op": "DUP2"
    },
    "3092": {
      "op": "DUP2"
    },
    "3093": {
      "op": "GT"
    },
    "3094": {
      "op": "ISZERO"
    },
    "3095": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "3098": {
      "op": "JUMPI"
    },
    "3099": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "3102": {
      "op": "PUSH2",
      "value": "0xB95"
    },
    "3105": {
      "jump": "i",
      "op": "JUMP"
    },
    "3106": {
      "op": "JUMPDEST"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3109": {
      "op": "MLOAD"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3112": {
      "op": "DUP3"
    },
    "3113": {
      "op": "ADD"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3116": {
      "op": "NOT"
    },
    "3117": {
      "op": "SWAP1"
    },
    "3118": {
      "op": "DUP2"
    },
    "3119": {
      "op": "AND"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3122": {
      "op": "ADD"
    },
    "3123": {
      "op": "AND"
    },
    "3124": {
      "op": "DUP2"
    },
    "3125": {
      "op": "ADD"
    },
    "3126": {
      "op": "SWAP1"
    },
    "3127": {
      "op": "DUP4"
    },
    "3128": {
      "op": "DUP3"
    },
    "3129": {
      "op": "GT"
    },
    "3130": {
      "op": "DUP2"
    },
    "3131": {
      "op": "DUP4"
    },
    "3132": {
      "op": "LT"
    },
    "3133": {
      "op": "OR"
    },
    "3134": {
      "op": "ISZERO"
    },
    "3135": {
      "op": "PUSH2",
      "value": "0xC4A"
    },
    "3138": {
      "op": "JUMPI"
    },
    "3139": {
      "op": "PUSH2",
      "value": "0xC4A"
    },
    "3142": {
      "op": "PUSH2",
      "value": "0xB95"
    },
    "3145": {
      "jump": "i",
      "op": "JUMP"
    },
    "3146": {
      "op": "JUMPDEST"
    },
    "3147": {
      "op": "DUP2"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3150": {
      "op": "MSTORE"
    },
    "3151": {
      "op": "DUP3"
    },
    "3152": {
      "op": "DUP2"
    },
    "3153": {
      "op": "MSTORE"
    },
    "3154": {
      "op": "DUP11"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3157": {
      "op": "DUP5"
    },
    "3158": {
      "op": "DUP8"
    },
    "3159": {
      "op": "ADD"
    },
    "3160": {
      "op": "ADD"
    },
    "3161": {
      "op": "GT"
    },
    "3162": {
      "op": "ISZERO"
    },
    "3163": {
      "op": "PUSH2",
      "value": "0xC63"
    },
    "3166": {
      "op": "JUMPI"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3169": {
      "op": "DUP1"
    },
    "3170": {
      "op": "REVERT"
    },
    "3171": {
      "op": "JUMPDEST"
    },
    "3172": {
      "op": "DUP3"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3175": {
      "op": "DUP7"
    },
    "3176": {
      "op": "ADD"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3179": {
      "op": "DUP4"
    },
    "3180": {
      "op": "ADD"
    },
    "3181": {
      "op": "CALLDATACOPY"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3186": {
      "op": "DUP5"
    },
    "3187": {
      "op": "DUP4"
    },
    "3188": {
      "op": "ADD"
    },
    "3189": {
      "op": "ADD"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "DUP1"
    },
    "3192": {
      "op": "SWAP6"
    },
    "3193": {
      "op": "POP"
    },
    "3194": {
      "op": "POP"
    },
    "3195": {
      "op": "POP"
    },
    "3196": {
      "op": "POP"
    },
    "3197": {
      "op": "POP"
    },
    "3198": {
      "op": "POP"
    },
    "3199": {
      "op": "SWAP3"
    },
    "3200": {
      "op": "SWAP6"
    },
    "3201": {
      "op": "SWAP2"
    },
    "3202": {
      "op": "SWAP5"
    },
    "3203": {
      "op": "POP"
    },
    "3204": {
      "op": "SWAP3"
    },
    "3205": {
      "op": "POP"
    },
    "3206": {
      "jump": "o",
      "op": "JUMP"
    },
    "3207": {
      "op": "JUMPDEST"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3210": {
      "op": "DUP1"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3215": {
      "op": "DUP5"
    },
    "3216": {
      "op": "DUP7"
    },
    "3217": {
      "op": "SUB"
    },
    "3218": {
      "op": "SLT"
    },
    "3219": {
      "op": "ISZERO"
    },
    "3220": {
      "op": "PUSH2",
      "value": "0xC9C"
    },
    "3223": {
      "op": "JUMPI"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3226": {
      "op": "DUP1"
    },
    "3227": {
      "op": "REVERT"
    },
    "3228": {
      "op": "JUMPDEST"
    },
    "3229": {
      "op": "PUSH2",
      "value": "0xCA5"
    },
    "3232": {
      "op": "DUP5"
    },
    "3233": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3236": {
      "jump": "i",
      "op": "JUMP"
    },
    "3237": {
      "op": "JUMPDEST"
    },
    "3238": {
      "op": "SWAP3"
    },
    "3239": {
      "op": "POP"
    },
    "3240": {
      "op": "PUSH2",
      "value": "0xCB3"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3245": {
      "op": "DUP6"
    },
    "3246": {
      "op": "ADD"
    },
    "3247": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3250": {
      "jump": "i",
      "op": "JUMP"
    },
    "3251": {
      "op": "JUMPDEST"
    },
    "3252": {
      "op": "SWAP2"
    },
    "3253": {
      "op": "POP"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3256": {
      "op": "DUP5"
    },
    "3257": {
      "op": "ADD"
    },
    "3258": {
      "op": "CALLDATALOAD"
    },
    "3259": {
      "op": "SWAP1"
    },
    "3260": {
      "op": "POP"
    },
    "3261": {
      "op": "SWAP3"
    },
    "3262": {
      "op": "POP"
    },
    "3263": {
      "op": "SWAP3"
    },
    "3264": {
      "op": "POP"
    },
    "3265": {
      "op": "SWAP3"
    },
    "3266": {
      "jump": "o",
      "op": "JUMP"
    },
    "3267": {
      "op": "JUMPDEST"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3270": {
      "op": "DUP1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3273": {
      "op": "DUP1"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3276": {
      "op": "DUP6"
    },
    "3277": {
      "op": "DUP8"
    },
    "3278": {
      "op": "SUB"
    },
    "3279": {
      "op": "SLT"
    },
    "3280": {
      "op": "ISZERO"
    },
    "3281": {
      "op": "PUSH2",
      "value": "0xCD9"
    },
    "3284": {
      "op": "JUMPI"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3287": {
      "op": "DUP1"
    },
    "3288": {
      "op": "REVERT"
    },
    "3289": {
      "op": "JUMPDEST"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xCE2"
    },
    "3293": {
      "op": "DUP6"
    },
    "3294": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3297": {
      "jump": "i",
      "op": "JUMP"
    },
    "3298": {
      "op": "JUMPDEST"
    },
    "3299": {
      "op": "SWAP4"
    },
    "3300": {
      "op": "POP"
    },
    "3301": {
      "op": "PUSH2",
      "value": "0xCF0"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3306": {
      "op": "DUP7"
    },
    "3307": {
      "op": "ADD"
    },
    "3308": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3311": {
      "jump": "i",
      "op": "JUMP"
    },
    "3312": {
      "op": "JUMPDEST"
    },
    "3313": {
      "op": "SWAP4"
    },
    "3314": {
      "op": "SWAP7"
    },
    "3315": {
      "op": "SWAP4"
    },
    "3316": {
      "op": "SWAP6"
    },
    "3317": {
      "op": "POP"
    },
    "3318": {
      "op": "POP"
    },
    "3319": {
      "op": "POP"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3323": {
      "op": "DUP3"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "op": "CALLDATALOAD"
    },
    "3326": {
      "op": "SWAP2"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3329": {
      "op": "ADD"
    },
    "3330": {
      "op": "CALLDATALOAD"
    },
    "3331": {
      "op": "SWAP1"
    },
    "3332": {
      "jump": "o",
      "op": "JUMP"
    },
    "3333": {
      "op": "JUMPDEST"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3336": {
      "op": "DUP1"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3339": {
      "op": "DUP1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3344": {
      "op": "DUP7"
    },
    "3345": {
      "op": "DUP9"
    },
    "3346": {
      "op": "SUB"
    },
    "3347": {
      "op": "SLT"
    },
    "3348": {
      "op": "ISZERO"
    },
    "3349": {
      "op": "PUSH2",
      "value": "0xD1D"
    },
    "3352": {
      "op": "JUMPI"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3355": {
      "op": "DUP1"
    },
    "3356": {
      "op": "REVERT"
    },
    "3357": {
      "op": "JUMPDEST"
    },
    "3358": {
      "op": "PUSH2",
      "value": "0xD26"
    },
    "3361": {
      "op": "DUP7"
    },
    "3362": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3365": {
      "jump": "i",
      "op": "JUMP"
    },
    "3366": {
      "op": "JUMPDEST"
    },
    "3367": {
      "op": "SWAP5"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0xD34"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3374": {
      "op": "DUP8"
    },
    "3375": {
      "op": "ADD"
    },
    "3376": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3379": {
      "jump": "i",
      "op": "JUMP"
    },
    "3380": {
      "op": "JUMPDEST"
    },
    "3381": {
      "op": "SWAP4"
    },
    "3382": {
      "op": "POP"
    },
    "3383": {
      "op": "PUSH2",
      "value": "0xD42"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3388": {
      "op": "DUP8"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3393": {
      "jump": "i",
      "op": "JUMP"
    },
    "3394": {
      "op": "JUMPDEST"
    },
    "3395": {
      "op": "SWAP5"
    },
    "3396": {
      "op": "SWAP8"
    },
    "3397": {
      "op": "SWAP4"
    },
    "3398": {
      "op": "SWAP7"
    },
    "3399": {
      "op": "POP"
    },
    "3400": {
      "op": "SWAP4"
    },
    "3401": {
      "op": "SWAP5"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3404": {
      "op": "DUP2"
    },
    "3405": {
      "op": "ADD"
    },
    "3406": {
      "op": "CALLDATALOAD"
    },
    "3407": {
      "op": "SWAP5"
    },
    "3408": {
      "op": "POP"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3411": {
      "op": "ADD"
    },
    "3412": {
      "op": "CALLDATALOAD"
    },
    "3413": {
      "op": "SWAP3"
    },
    "3414": {
      "op": "SWAP2"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "jump": "o",
      "op": "JUMP"
    },
    "3418": {
      "op": "JUMPDEST"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3423": {
      "op": "DUP3"
    },
    "3424": {
      "op": "DUP5"
    },
    "3425": {
      "op": "SUB"
    },
    "3426": {
      "op": "SLT"
    },
    "3427": {
      "op": "ISZERO"
    },
    "3428": {
      "op": "PUSH2",
      "value": "0xD6C"
    },
    "3431": {
      "op": "JUMPI"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3434": {
      "op": "DUP1"
    },
    "3435": {
      "op": "REVERT"
    },
    "3436": {
      "op": "JUMPDEST"
    },
    "3437": {
      "op": "PUSH2",
      "value": "0xD75"
    },
    "3440": {
      "op": "DUP3"
    },
    "3441": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3444": {
      "jump": "i",
      "op": "JUMP"
    },
    "3445": {
      "op": "JUMPDEST"
    },
    "3446": {
      "op": "SWAP4"
    },
    "3447": {
      "op": "SWAP3"
    },
    "3448": {
      "op": "POP"
    },
    "3449": {
      "op": "POP"
    },
    "3450": {
      "op": "POP"
    },
    "3451": {
      "jump": "o",
      "op": "JUMP"
    },
    "3452": {
      "op": "JUMPDEST"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3455": {
      "op": "DUP1"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3458": {
      "op": "DUP4"
    },
    "3459": {
      "op": "DUP6"
    },
    "3460": {
      "op": "SUB"
    },
    "3461": {
      "op": "SLT"
    },
    "3462": {
      "op": "ISZERO"
    },
    "3463": {
      "op": "PUSH2",
      "value": "0xD8F"
    },
    "3466": {
      "op": "JUMPI"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3469": {
      "op": "DUP1"
    },
    "3470": {
      "op": "REVERT"
    },
    "3471": {
      "op": "JUMPDEST"
    },
    "3472": {
      "op": "PUSH2",
      "value": "0xD98"
    },
    "3475": {
      "op": "DUP4"
    },
    "3476": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "3479": {
      "jump": "i",
      "op": "JUMP"
    },
    "3480": {
      "op": "JUMPDEST"
    },
    "3481": {
      "op": "SWAP5"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3484": {
      "op": "SWAP4"
    },
    "3485": {
      "op": "SWAP1"
    },
    "3486": {
      "op": "SWAP4"
    },
    "3487": {
      "op": "ADD"
    },
    "3488": {
      "op": "CALLDATALOAD"
    },
    "3489": {
      "op": "SWAP4"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "op": "POP"
    },
    "3493": {
      "jump": "o",
      "op": "JUMP"
    },
    "3494": {
      "op": "JUMPDEST"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3501": {
      "op": "SHL"
    },
    "3502": {
      "op": "SUB"
    },
    "3503": {
      "op": "SWAP4"
    },
    "3504": {
      "op": "DUP5"
    },
    "3505": {
      "op": "AND"
    },
    "3506": {
      "op": "DUP2"
    },
    "3507": {
      "op": "MSTORE"
    },
    "3508": {
      "op": "SWAP2"
    },
    "3509": {
      "op": "SWAP1"
    },
    "3510": {
      "op": "SWAP3"
    },
    "3511": {
      "op": "AND"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3514": {
      "op": "DUP3"
    },
    "3515": {
      "op": "ADD"
    },
    "3516": {
      "op": "MSTORE"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3519": {
      "op": "DUP2"
    },
    "3520": {
      "op": "ADD"
    },
    "3521": {
      "op": "SWAP2"
    },
    "3522": {
      "op": "SWAP1"
    },
    "3523": {
      "op": "SWAP2"
    },
    "3524": {
      "op": "MSTORE"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3527": {
      "op": "ADD"
    },
    "3528": {
      "op": "SWAP1"
    },
    "3529": {
      "jump": "o",
      "op": "JUMP"
    },
    "3530": {
      "op": "JUMPDEST"
    },
    "3531": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3546": {
      "op": "MSTORE"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3551": {
      "op": "REVERT"
    },
    "3552": {
      "op": "JUMPDEST"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3555": {
      "op": "DUP3"
    },
    "3556": {
      "op": "NOT"
    },
    "3557": {
      "op": "DUP3"
    },
    "3558": {
      "op": "GT"
    },
    "3559": {
      "op": "ISZERO"
    },
    "3560": {
      "op": "PUSH2",
      "value": "0xDF3"
    },
    "3563": {
      "op": "JUMPI"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0xDF3"
    },
    "3567": {
      "op": "PUSH2",
      "value": "0xDCA"
    },
    "3570": {
      "jump": "i",
      "op": "JUMP"
    },
    "3571": {
      "op": "JUMPDEST"
    },
    "3572": {
      "op": "POP"
    },
    "3573": {
      "op": "ADD"
    },
    "3574": {
      "op": "SWAP1"
    },
    "3575": {
      "jump": "o",
      "op": "JUMP"
    },
    "3576": {
      "op": "JUMPDEST"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3581": {
      "op": "DUP3"
    },
    "3582": {
      "op": "DUP5"
    },
    "3583": {
      "op": "SUB"
    },
    "3584": {
      "op": "SLT"
    },
    "3585": {
      "op": "ISZERO"
    },
    "3586": {
      "op": "PUSH2",
      "value": "0xE0A"
    },
    "3589": {
      "op": "JUMPI"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3592": {
      "op": "DUP1"
    },
    "3593": {
      "op": "REVERT"
    },
    "3594": {
      "op": "JUMPDEST"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "op": "MLOAD"
    },
    "3597": {
      "op": "SWAP2"
    },
    "3598": {
      "op": "SWAP1"
    },
    "3599": {
      "op": "POP"
    },
    "3600": {
      "jump": "o",
      "op": "JUMP"
    },
    "3601": {
      "op": "JUMPDEST"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3606": {
      "op": "DUP3"
    },
    "3607": {
      "op": "DUP5"
    },
    "3608": {
      "op": "SUB"
    },
    "3609": {
      "op": "SLT"
    },
    "3610": {
      "op": "ISZERO"
    },
    "3611": {
      "op": "PUSH2",
      "value": "0xE23"
    },
    "3614": {
      "op": "JUMPI"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3617": {
      "op": "DUP1"
    },
    "3618": {
      "op": "REVERT"
    },
    "3619": {
      "op": "JUMPDEST"
    },
    "3620": {
      "op": "DUP2"
    },
    "3621": {
      "op": "MLOAD"
    },
    "3622": {
      "op": "DUP1"
    },
    "3623": {
      "op": "ISZERO"
    },
    "3624": {
      "op": "ISZERO"
    },
    "3625": {
      "op": "DUP2"
    },
    "3626": {
      "op": "EQ"
    },
    "3627": {
      "op": "PUSH2",
      "value": "0xD75"
    },
    "3630": {
      "op": "JUMPI"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3633": {
      "op": "DUP1"
    },
    "3634": {
      "op": "REVERT"
    },
    "3635": {
      "op": "JUMPDEST"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3638": {
      "op": "DUP3"
    },
    "3639": {
      "op": "DUP3"
    },
    "3640": {
      "op": "LT"
    },
    "3641": {
      "op": "ISZERO"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE45"
    },
    "3645": {
      "op": "JUMPI"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0xE45"
    },
    "3649": {
      "op": "PUSH2",
      "value": "0xDCA"
    },
    "3652": {
      "jump": "i",
      "op": "JUMP"
    },
    "3653": {
      "op": "JUMPDEST"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "SUB"
    },
    "3656": {
      "op": "SWAP1"
    },
    "3657": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "812023e69e9eb7975d9bf2c11e1837012c31783c",
  "source": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n//import \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\n//import \"./Math.sol\";\n\ncontract Barter is IERC721Receiver {\n    //using Math for uint256;\n\n    // struct for what each person owes to the seller, specific to what they bought, and when\n    struct userBorrow {\n        uint256 amountOwed;\n        address buyer;\n        address seller;\n        uint256 timestamp;\n    }\n    //track how much a wallet has borrowed agsint all thier NFTs\n    mapping(address => uint256) totalborrowedETH;\n\n    // mapping: buyer -> NFT Contract -> tokenID -> struct(money owed, buyer, seller, purchase time)\n    mapping(address => mapping(address => mapping(uint256 => userBorrow)))\n        public loanTracker;\n\n    //Rinkeby WETH contract address\n    address public constant WETH = 0xc778417E063141139Fce010982780140Aa0cD5Ab;\n\n    address owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"must have owner role\");\n        _;\n    }\n\n    ///@notice function transfers ownership from buyer to seller\n    ///@dev the calling contract/function must approve the transfer to the seller's address\n    function exchangeNFT(\n        address _buyer,\n        address _seller,\n        address _contract,\n        uint256 _tokenID\n    ) public {\n        /*\n    * Security:\n    * ower must approve this contract to move thier NFT so even if\n    someone else calls this function, it only works if user pre-approved it\n    */\n\n        IERC721(_contract).safeTransferFrom(_buyer, _seller, _tokenID);\n    }\n\n    ///@notice function transfers ownership from buyer to this contract to be held as collateral\n    ///@notice buyer will automaticall receive thier NFT back once they repay the item value\n    ///@dev the calling contract/function must approve the transfer to this contract address\n\n    // backend should check to see if there is enough collateral value, it will also allow user to buy multiple items against one NFT\n    function collateralizedPurchase(\n        address _buyer,\n        address _seller,\n        address _contract,\n        uint256 _tokenID,\n        uint256 _itemValue\n    ) public {\n        /*\n        * Security:\n        * ower must approve this contract to move thier NFT so even if\n        someone else calls this function, it only works if user pre-approved it\n        * Only the initial buyer will recieve the NFT on repayment\n        */\n\n        //if they purchsed from new seller with same NFT, they must have payed off thier old debts\n        if (loanTracker[_buyer][_contract][_tokenID].seller != _seller) {\n            require(loanTracker[_buyer][_contract][_tokenID].amountOwed == 0);\n        }\n\n        if (loanTracker[_buyer][_contract][_tokenID].timestamp == 0) {\n            loanTracker[_buyer][_contract][_tokenID].timestamp = block\n                .timestamp;\n        } // could also check for default here, but issues may arise, better to have default manually called\n\n        IERC721(_contract).safeTransferFrom(_buyer, address(this), _tokenID);\n\n        loanTracker[_buyer][_contract][_tokenID].amountOwed += _itemValue;\n        totalborrowedETH[_buyer] += _itemValue;\n        loanTracker[_buyer][_contract][_tokenID].seller = _seller;\n        loanTracker[_buyer][_contract][_tokenID].buyer = _buyer;\n    }\n\n    ///@notice a user pays back a debt in WETH only and original buyer recieves ERC721\n    ///@dev the calling contract/function must approve the transfer of ERC20 to the contract address\n    function repay(\n        address _buyer,\n        address _contract,\n        uint256 _tokenID,\n        uint256 _amount\n    ) public {\n        //make sure user has enough WETH\n        require(\n            IERC20(WETH).balanceOf(msg.sender) >= _amount,\n            \"not enough WETH to repay\"\n        );\n        require(\n            loanTracker[_buyer][_contract][_tokenID].amountOwed >= _amount,\n            \"Cannot pay back more than you owe\"\n        );\n\n        IERC20(WETH).transferFrom(\n            msg.sender,\n            (loanTracker[msg.sender][_contract][_tokenID].seller),\n            _amount\n        );\n\n        loanTracker[_buyer][_contract][_tokenID].amountOwed -= _amount; //minimum( _amount, loanTracker[_buyer][_contract][_tokenID].amountOwed)\n        totalborrowedETH[_buyer] -= _amount;\n\n        //send NFT if debt is paid\n        if (loanTracker[_buyer][_contract][_tokenID].amountOwed == 0) {\n            IERC721(_contract).safeTransferFrom(\n                address(this),\n                loanTracker[_buyer][_contract][_tokenID].buyer,\n                _tokenID\n            );\n            //reset struct values:\n            loanTracker[_buyer][_contract][_tokenID].timestamp = 0;\n            loanTracker[_buyer][_contract][_tokenID].buyer = address(0);\n            loanTracker[_buyer][_contract][_tokenID].seller = address(0);\n        }\n    }\n\n    ///@notice upon defualt, the store gets th NFT, and the user no longer owes money.\n    function handleDefault(\n        address _buyer,\n        address _contract,\n        uint256 _tokenID\n    ) public onlyOwner {\n        /*\n         * Security:\n         * Only owner can call this right now\n         * Can only be called 30 days after first purchase\n         */\n        require(\n            block.timestamp >\n                (loanTracker[_buyer][_contract][_tokenID].timestamp + 2592000),\n            \"Buyer has minumum 30 days to repay\"\n        );\n        IERC721(_contract).safeTransferFrom(\n            address(this),\n            loanTracker[_buyer][_contract][_tokenID].seller,\n            _tokenID\n        );\n        loanTracker[_buyer][_contract][_tokenID].amountOwed = 0;\n        //delete mapping? or set buyer/seller to zero address?\n        loanTracker[_buyer][_contract][_tokenID].timestamp = 0;\n    }\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n\n    //_____________________________Helper Functions Begin Here_____________________________//\n\n    // function minimum(uint256 a, uint256 b) internal pure returns (uint256) {\n    //     return a.min(b);\n    // }\n\n    ///@notice returns the total eth quantity owed by a user\n    function totalValueBorrowed(address _buyer) public view returns (uint256) {\n        return totalborrowedETH[_buyer];\n    }\n\n    ///@notice returns value owed on a specific NFT used as collateral\n    function valueBorrowedOneNFT(\n        address _buyer,\n        address _contract,\n        uint256 _tokenID\n    ) public view returns (uint256) {\n        return loanTracker[_buyer][_contract][_tokenID].amountOwed;\n    }\n\n    ///@notice returns address of seller who has an NFT as collateral\n    function sellerCollateralNFT(\n        address _buyer,\n        address _contract,\n        uint256 _tokenID\n    ) public view returns (address) {\n        return loanTracker[_buyer][_contract][_tokenID].seller;\n    }\n\n    function emergencyExit(address nft, uint256 _tokenID) public onlyOwner {\n        IERC721(nft).safeTransferFrom(address(this), msg.sender, _tokenID);\n    }\n}\n",
  "sourceMap": "336:7031:4:-:0;;;1091:49;;;;;;;;;-1:-1:-1;1115:5:4;:18;;-1:-1:-1;;;;;;1115:18:4;1123:10;1115:18;;;336:7031;;;;;;",
  "sourcePath": "contracts/Barter.sol",
  "type": "contract"
}