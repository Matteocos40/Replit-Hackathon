{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_itemValue",
          "type": "uint256"
        }
      ],
      "name": "collateralizedPurchase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "emergencyExit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "exchangeNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "handleDefault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanTracker",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOwed",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "sellerCollateralNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "totalValueBorrowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "valueBorrowedOneNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/AccessControl.sol",
    "1": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/AccessControlEnumerable.sol",
    "10": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "12": "contracts/Barter.sol",
    "2": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/IAccessControl.sol",
    "3": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/IAccessControlEnumerable.sol",
    "4": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721Receiver.sol",
    "7": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "9": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/Barter.sol",
    "exportedSymbols": {
      "AccessControl": [
        1146
      ],
      "AccessControlEnumerable": [
        625
      ],
      "Barter": [
        500
      ],
      "Context": [
        1877
      ],
      "ERC165": [
        2104
      ],
      "EnumerableSet": [
        1770
      ],
      "IAccessControl": [
        1855
      ],
      "IAccessControlEnumerable": [
        1171
      ],
      "IERC165": [
        1782
      ],
      "IERC20": [
        703
      ],
      "IERC721": [
        819
      ],
      "IERC721Receiver": [
        837
      ],
      "Strings": [
        2080
      ]
    },
    "id": 501,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:12"
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 501,
        "sourceUnit": 820,
        "src": "57:58:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 501,
        "sourceUnit": 704,
        "src": "116:56:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 501,
        "sourceUnit": 838,
        "src": "173:66:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matteocosentino/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 501,
        "sourceUnit": 626,
        "src": "240:68:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 837,
              "src": "329:15:12"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "329:15:12"
          },
          {
            "baseName": {
              "id": 8,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 625,
              "src": "346:23:12"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "346:23:12"
          }
        ],
        "canonicalName": "Barter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 500,
        "linearizedBaseContracts": [
          500,
          625,
          1146,
          2104,
          1782,
          1171,
          1855,
          1877,
          837
        ],
        "name": "Barter",
        "nameLocation": "319:6:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Barter.userBorrow",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "amountOwed",
                "nameLocation": "474:10:12",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "466:18:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "502:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "494:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "525:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "517:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "517:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "549:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "541:17:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "541:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "userBorrow",
            "nameLocation": "445:10:12",
            "nodeType": "StructDefinition",
            "scope": 500,
            "src": "438:127:12",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "totalborrowedETH",
            "nameLocation": "664:16:12",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "636:44:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "644:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "636:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 20,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "655:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "946ccfc0",
            "id": 31,
            "mutability": "mutable",
            "name": "loanTracker",
            "nameLocation": "874:11:12",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "788:97:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow)))"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "796:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "788:70:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow)))"
              },
              "valueType": {
                "id": 29,
                "keyType": {
                  "id": 24,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "815:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "807:50:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                  "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow))"
                },
                "valueType": {
                  "id": 28,
                  "keyType": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "826:30:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                    "typeString": "mapping(uint256 => struct Barter.userBorrow)"
                  },
                  "valueType": {
                    "id": 27,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 26,
                      "name": "userBorrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18,
                      "src": "845:10:12"
                    },
                    "referencedDeclaration": 18,
                    "src": "845:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_userBorrow_$18_storage_ptr",
                      "typeString": "struct Barter.userBorrow"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "ad5c4648",
            "id": 34,
            "mutability": "constant",
            "name": "WETH",
            "nameLocation": "952:4:12",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "928:73:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "928:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "959:42:12",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "75b238fc",
            "id": 39,
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nameLocation": "1032:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "1008:60:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 35,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1008:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f524f4c45",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1055:12:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  },
                  "value": "ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  }
                ],
                "id": 36,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1045:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1045:23:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "1089:98:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1110:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 44,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1122:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1122:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1054,
                      "src": "1099:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1154:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1174:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Barter_$500",
                              "typeString": "contract Barter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Barter_$500",
                              "typeString": "contract Barter"
                            }
                          ],
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1166:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1166:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1166:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1054,
                      "src": "1143:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:37:12"
                }
              ]
            },
            "id": 57,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:2:12"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:0:12"
            },
            "scope": 500,
            "src": "1075:112:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1214:92:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61,
                            "name": "ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "1240:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 62,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1252:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1252:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 60,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "1232:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1232:31:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d75737420686176652061646d696e20726f6c65",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1265:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad152a747a147bbfcd593473efdc1dd6ce69c0dfaa752af3c2ee5fc65b543294",
                          "typeString": "literal_string \"must have admin role\""
                        },
                        "value": "must have admin role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad152a747a147bbfcd593473efdc1dd6ce69c0dfaa752af3c2ee5fc65b543294",
                          "typeString": "literal_string \"must have admin role\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1224:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:64:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:64:12"
                },
                {
                  "id": 68,
                  "nodeType": "PlaceholderStatement",
                  "src": "1298:1:12"
                }
              ]
            },
            "id": 70,
            "name": "onlyOwner",
            "nameLocation": "1202:9:12",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1211:2:12"
            },
            "src": "1193:113:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1605:273:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1845:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1853:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1862:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 83,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1817:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 82,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 819,
                          "src": "1809:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$819_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1809:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$819",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 762,
                      "src": "1809:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:62:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:62:12"
                }
              ]
            },
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "1312:152:12",
              "text": "@notice function transfers ownership from buyer to seller\n@dev the calling contract/function must approve the transfer to the seller's address"
            },
            "functionSelector": "0b1eedb8",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeNFT",
            "nameLocation": "1478:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "1507:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1499:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "1531:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1523:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "1556:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1548:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "1583:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1575:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1489:108:12"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:0:12"
            },
            "scope": 500,
            "src": "1469:409:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "2391:1526:12",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 106,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "2985:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 108,
                            "indexExpression": {
                              "id": 107,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "2997:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2985:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 110,
                          "indexExpression": {
                            "id": 109,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "3005:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2985:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 112,
                        "indexExpression": {
                          "id": 111,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "3016:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2985:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "2985:47:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3044:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3036:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3036:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3036:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2985:61:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 166,
                  "nodeType": "IfStatement",
                  "src": "2981:515:12",
                  "trueBody": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "3048:448:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 123,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "3115:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 126,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3147:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Barter_$500",
                                    "typeString": "contract Barter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Barter_$500",
                                    "typeString": "contract Barter"
                                  }
                                ],
                                "id": 125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3139:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 124,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3139:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3139:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 128,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "3170:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 120,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "3070:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 119,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "3062:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$819_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3062:18:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$819",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 762,
                            "src": "3062:35:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3062:130:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "3062:130:12"
                      },
                      {
                        "expression": {
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 131,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "3260:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 135,
                                  "indexExpression": {
                                    "id": 132,
                                    "name": "_buyer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "3272:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3260:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 136,
                                "indexExpression": {
                                  "id": 133,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "3280:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3260:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 137,
                              "indexExpression": {
                                "id": 134,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101,
                                "src": "3291:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3260:40:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "3260:47:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 139,
                            "name": "_seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "3310:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3260:57:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "3260:57:12"
                      },
                      {
                        "expression": {
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 142,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "3331:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 146,
                                  "indexExpression": {
                                    "id": 143,
                                    "name": "_buyer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "3343:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3331:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 147,
                                "indexExpression": {
                                  "id": 144,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "3351:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3331:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 148,
                              "indexExpression": {
                                "id": 145,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101,
                                "src": "3362:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3331:40:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "3331:46:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 150,
                            "name": "_buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "3380:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3331:55:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "3331:55:12"
                      },
                      {
                        "expression": {
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 153,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "3400:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 157,
                                  "indexExpression": {
                                    "id": 154,
                                    "name": "_buyer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "3412:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3400:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 158,
                                "indexExpression": {
                                  "id": 155,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "3420:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3400:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 159,
                              "indexExpression": {
                                "id": 156,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101,
                                "src": "3431:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3400:40:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 160,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17,
                            "src": "3400:50:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 161,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3453:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3453:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3400:85:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "3400:85:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 168,
                                  "name": "loanTracker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "3588:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                    "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                  }
                                },
                                "id": 170,
                                "indexExpression": {
                                  "id": 169,
                                  "name": "_buyer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "3600:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3588:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                }
                              },
                              "id": 172,
                              "indexExpression": {
                                "id": 171,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "3608:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3588:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                                "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                              }
                            },
                            "id": 174,
                            "indexExpression": {
                              "id": 173,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "3619:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3588:40:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                              "typeString": "struct Barter.userBorrow storage ref"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "3588:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 176,
                          "name": "_seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "3639:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3588:58:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920757365206e667420617320636f6c6c61746572616c20666f72206f6e652073746f726520617420612074696d65",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3660:52:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4557702d262d36fb8e150219e948808c77f22e8ac26caa3b55755cad0f64b947",
                          "typeString": "literal_string \"only use nft as collateral for one store at a time\""
                        },
                        "value": "only use nft as collateral for one store at a time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4557702d262d36fb8e150219e948808c77f22e8ac26caa3b55755cad0f64b947",
                          "typeString": "literal_string \"only use nft as collateral for one store at a time\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3567:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3567:155:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:155:12"
                },
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 181,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "3797:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 185,
                            "indexExpression": {
                              "id": 182,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "3809:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3797:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 186,
                          "indexExpression": {
                            "id": 183,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "3817:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3797:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 187,
                        "indexExpression": {
                          "id": 184,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "3828:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3797:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "3797:51:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 189,
                      "name": "_itemValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "3852:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3797:65:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3797:65:12"
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 192,
                        "name": "totalborrowedETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3872:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 194,
                      "indexExpression": {
                        "id": 193,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "3889:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3872:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 195,
                      "name": "_itemValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "3900:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3872:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:38:12"
                }
              ]
            },
            "documentation": {
              "id": 93,
              "nodeType": "StructuredDocumentation",
              "src": "1884:327:12",
              "text": "@notice function transfers ownership from buyer to this contract to be held as collateral\n@notice buyer will automaticall receive thier NFT back once they repay the item value\n@dev the calling contract/function must approve the transfer to this contract address\n@param _itemValue must be in wei (10**18)"
            },
            "functionSelector": "617a19c0",
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralizedPurchase",
            "nameLocation": "2225:22:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "2265:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2257:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2257:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "2289:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2281:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2281:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "2314:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2306:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "2341:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2333:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_itemValue",
                  "nameLocation": "2367:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2359:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2359:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:136:12"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2391:0:12"
            },
            "scope": 500,
            "src": "2216:1701:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "4287:1073:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 216,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4382:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4382:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 213,
                                  "name": "WETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "4366:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 212,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 703,
                                "src": "4359:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$703_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4359:12:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$703",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 642,
                            "src": "4359:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4359:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 219,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "4397:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4359:45:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f756768205745544820746f207265706179",
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4418:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_177c1e54ca3e518431235dfa7be3287196bc96d70b49d2cdb5578862ba10c1c0",
                          "typeString": "literal_string \"not enough WETH to repay\""
                        },
                        "value": "not enough WETH to repay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_177c1e54ca3e518431235dfa7be3287196bc96d70b49d2cdb5578862ba10c1c0",
                          "typeString": "literal_string \"not enough WETH to repay\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4338:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4338:116:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "4338:116:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 225,
                                  "name": "loanTracker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "4485:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                    "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                  }
                                },
                                "id": 227,
                                "indexExpression": {
                                  "id": 226,
                                  "name": "_buyer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "4497:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4485:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                }
                              },
                              "id": 229,
                              "indexExpression": {
                                "id": 228,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 204,
                                "src": "4505:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4485:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                                "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                              }
                            },
                            "id": 231,
                            "indexExpression": {
                              "id": 230,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "4516:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4485:40:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                              "typeString": "struct Barter.userBorrow storage ref"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOwed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "4485:51:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 233,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "4540:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4485:62:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420706179206261636b206d6f7265207468616e20796f75206f7765",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4561:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcaf546af5b5471811c5e526c5feaac590764e6627cf45296a5573ada6e868b7",
                          "typeString": "literal_string \"Cannot pay back more than you owe\""
                        },
                        "value": "Cannot pay back more than you owe"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcaf546af5b5471811c5e526c5feaac590764e6627cf45296a5573ada6e868b7",
                          "typeString": "literal_string \"Cannot pay back more than you owe\""
                        }
                      ],
                      "id": 224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4464:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4464:142:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "4464:142:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 242,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4656:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4656:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 244,
                                    "name": "loanTracker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "4681:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                    }
                                  },
                                  "id": 247,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 245,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4693:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4693:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4681:23:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                  }
                                },
                                "id": 249,
                                "indexExpression": {
                                  "id": 248,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 204,
                                  "src": "4705:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4681:34:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                }
                              },
                              "id": 251,
                              "indexExpression": {
                                "id": 250,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "4716:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4681:44:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                                "typeString": "struct Barter.userBorrow storage ref"
                              }
                            },
                            "id": 252,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "4681:51:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 253,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4680:53:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 254,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "4747:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 239,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4624:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 238,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "4617:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$703_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4617:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$703",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 684,
                      "src": "4617:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4617:147:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "4617:147:12"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 257,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "4775:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 261,
                            "indexExpression": {
                              "id": 258,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "4787:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4775:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 262,
                          "indexExpression": {
                            "id": 259,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "4795:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4775:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 263,
                        "indexExpression": {
                          "id": 260,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "4806:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4775:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "4775:51:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 265,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "4830:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4775:62:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "4775:62:12"
                },
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 268,
                        "name": "totalborrowedETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "4920:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "id": 269,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "4937:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4920:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 271,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "4948:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4920:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "4920:35:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 274,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "5005:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 276,
                            "indexExpression": {
                              "id": 275,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "5017:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5005:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 278,
                          "indexExpression": {
                            "id": 277,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "5025:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5005:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 280,
                        "indexExpression": {
                          "id": 279,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "5036:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5005:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "5005:51:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5060:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5005:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 313,
                  "nodeType": "IfStatement",
                  "src": "5001:353:12",
                  "trueBody": {
                    "id": 312,
                    "nodeType": "Block",
                    "src": "5063:291:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 290,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5138:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Barter_$500",
                                    "typeString": "contract Barter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Barter_$500",
                                    "typeString": "contract Barter"
                                  }
                                ],
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5130:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 288,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5130:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5130:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 292,
                                      "name": "loanTracker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31,
                                      "src": "5161:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                        "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                      }
                                    },
                                    "id": 294,
                                    "indexExpression": {
                                      "id": 293,
                                      "name": "_buyer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 202,
                                      "src": "5173:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5161:19:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                      "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                    }
                                  },
                                  "id": 296,
                                  "indexExpression": {
                                    "id": 295,
                                    "name": "_contract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 204,
                                    "src": "5181:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5161:30:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                                    "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                  }
                                },
                                "id": 298,
                                "indexExpression": {
                                  "id": 297,
                                  "name": "_tokenID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 206,
                                  "src": "5192:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5161:40:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                                  "typeString": "struct Barter.userBorrow storage ref"
                                }
                              },
                              "id": 299,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13,
                              "src": "5161:46:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 300,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "5225:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 285,
                                  "name": "_contract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 204,
                                  "src": "5085:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 284,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "5077:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$819_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5077:18:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$819",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 762,
                            "src": "5077:35:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5077:170:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 302,
                        "nodeType": "ExpressionStatement",
                        "src": "5077:170:12"
                      },
                      {
                        "expression": {
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5296:47:12",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 303,
                                  "name": "loanTracker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "5303:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                    "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                  }
                                },
                                "id": 305,
                                "indexExpression": {
                                  "id": 304,
                                  "name": "_buyer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "5315:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5303:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                }
                              },
                              "id": 307,
                              "indexExpression": {
                                "id": 306,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 204,
                                "src": "5323:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5303:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                                "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                              }
                            },
                            "id": 309,
                            "indexExpression": {
                              "id": 308,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "5334:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5303:40:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                              "typeString": "struct Barter.userBorrow storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 311,
                        "nodeType": "ExpressionStatement",
                        "src": "5296:47:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 200,
              "nodeType": "StructuredDocumentation",
              "src": "3923:229:12",
              "text": "@notice a user pays back a debt in WETH only and original buyer recieves ERC721\n@dev the calling contract/function must approve the transfer of ERC20 to the contract address\n@param _amount must be in wei (10**18)"
            },
            "functionSelector": "49002749",
            "id": 315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repay",
            "nameLocation": "4166:5:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "4189:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "4181:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4181:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "4213:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "4205:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4205:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "4240:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "4232:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4232:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4266:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "4258:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4258:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4171:108:12"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4287:0:12"
            },
            "scope": 500,
            "src": "4157:1203:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "5576:735:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 328,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5756:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5756:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 330,
                                        "name": "loanTracker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 31,
                                        "src": "5791:11:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                          "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                        }
                                      },
                                      "id": 332,
                                      "indexExpression": {
                                        "id": 331,
                                        "name": "_buyer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 318,
                                        "src": "5803:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5791:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                                      }
                                    },
                                    "id": 334,
                                    "indexExpression": {
                                      "id": 333,
                                      "name": "_contract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 320,
                                      "src": "5811:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5791:30:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                                      "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                                    }
                                  },
                                  "id": 336,
                                  "indexExpression": {
                                    "id": 335,
                                    "name": "_tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 322,
                                    "src": "5822:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5791:40:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                                    "typeString": "struct Barter.userBorrow storage ref"
                                  }
                                },
                                "id": 337,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17,
                                "src": "5791:50:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "32353932303030",
                                "id": 338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5844:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2592000_by_1",
                                  "typeString": "int_const 2592000"
                                },
                                "value": "2592000"
                              },
                              "src": "5791:60:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 340,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5790:62:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5756:96:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "427579657220686173206d696e756d756d203330206461797320746f207265706179",
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5866:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5b4b0411f6b7840c37bbccb54e8abf56715644ebfa713de3a745840d9f3031c",
                          "typeString": "literal_string \"Buyer has minumum 30 days to repay\""
                        },
                        "value": "Buyer has minumum 30 days to repay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5b4b0411f6b7840c37bbccb54e8abf56715644ebfa713de3a745840d9f3031c",
                          "typeString": "literal_string \"Buyer has minumum 30 days to repay\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5735:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5735:177:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "5735:177:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 351,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5980:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Barter_$500",
                              "typeString": "contract Barter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Barter_$500",
                              "typeString": "contract Barter"
                            }
                          ],
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5972:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 349,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5972:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5972:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 353,
                                "name": "loanTracker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "5999:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                  "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                                }
                              },
                              "id": 355,
                              "indexExpression": {
                                "id": 354,
                                "name": "_buyer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 318,
                                "src": "6011:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5999:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                              }
                            },
                            "id": 357,
                            "indexExpression": {
                              "id": 356,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "6019:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5999:30:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                              "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                            }
                          },
                          "id": 359,
                          "indexExpression": {
                            "id": 358,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "6030:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5999:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                            "typeString": "struct Barter.userBorrow storage ref"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "5999:47:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 361,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "6060:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 346,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "5931:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 345,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 819,
                          "src": "5923:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$819_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5923:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$819",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 762,
                      "src": "5923:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5923:155:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "5923:155:12"
                },
                {
                  "expression": {
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 364,
                        "name": "totalborrowedETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "6125:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 366,
                      "indexExpression": {
                        "id": 365,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "6142:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6125:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 367,
                              "name": "loanTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "6153:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                              }
                            },
                            "id": 369,
                            "indexExpression": {
                              "id": 368,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 318,
                              "src": "6165:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6153:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                            }
                          },
                          "id": 371,
                          "indexExpression": {
                            "id": 370,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "6173:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6153:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                            "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                          }
                        },
                        "id": 373,
                        "indexExpression": {
                          "id": 372,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "6184:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6153:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                          "typeString": "struct Barter.userBorrow storage ref"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountOwed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "6153:64:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6125:92:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "6125:92:12"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6257:47:12",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 377,
                            "name": "loanTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "6264:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                            }
                          },
                          "id": 379,
                          "indexExpression": {
                            "id": 378,
                            "name": "_buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 318,
                            "src": "6276:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6264:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                          }
                        },
                        "id": 381,
                        "indexExpression": {
                          "id": 380,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 320,
                          "src": "6284:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6264:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                          "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                        }
                      },
                      "id": 383,
                      "indexExpression": {
                        "id": 382,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "6295:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6264:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                        "typeString": "struct Barter.userBorrow storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "6257:47:12"
                }
              ]
            },
            "documentation": {
              "id": 316,
              "nodeType": "StructuredDocumentation",
              "src": "5366:82:12",
              "text": "@notice upon defualt, the store gets th NFT, and the user no longer owes money."
            },
            "functionSelector": "1e315fd6",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 325,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 324,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "5566:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "5566:9:12"
              }
            ],
            "name": "handleDefault",
            "nameLocation": "5462:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "5493:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5485:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5485:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "5517:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5509:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5509:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "5544:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5536:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5536:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5475:83:12"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5576:0:12"
            },
            "scope": 500,
            "src": "5453:858:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              836
            ],
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "6463:54:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 401,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "6480:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Barter_$500",
                          "typeString": "contract Barter"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "6480:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "6480:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 400,
                  "id": 404,
                  "nodeType": "Return",
                  "src": "6473:37:12"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "6326:16:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 397,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6437:8:12"
            },
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "6352:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6352:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "6369:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6369:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "6386:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6386:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "6403:12:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6403:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6342:79:12"
            },
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "6455:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6455:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6454:8:12"
            },
            "scope": 500,
            "src": "6317:200:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "6871:48:12",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 414,
                      "name": "totalborrowedETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "6888:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 416,
                    "indexExpression": {
                      "id": 415,
                      "name": "_buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "6905:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6888:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 413,
                  "id": 417,
                  "nodeType": "Return",
                  "src": "6881:31:12"
                }
              ]
            },
            "documentation": {
              "id": 407,
              "nodeType": "StructuredDocumentation",
              "src": "6736:56:12",
              "text": "@notice returns the total eth quantity owed by a user"
            },
            "functionSelector": "f2df757b",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalValueBorrowed",
            "nameLocation": "6806:18:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "6833:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "6825:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6825:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6824:16:12"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "6862:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6862:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6861:9:12"
            },
            "scope": 500,
            "src": "6797:122:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "7138:75:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 431,
                            "name": "loanTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "7155:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                            }
                          },
                          "id": 433,
                          "indexExpression": {
                            "id": 432,
                            "name": "_buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "7167:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7155:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                          }
                        },
                        "id": 435,
                        "indexExpression": {
                          "id": 434,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "7175:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7155:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                          "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                        }
                      },
                      "id": 437,
                      "indexExpression": {
                        "id": 436,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "7186:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7155:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                        "typeString": "struct Barter.userBorrow storage ref"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amountOwed",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11,
                    "src": "7155:51:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 430,
                  "id": 439,
                  "nodeType": "Return",
                  "src": "7148:58:12"
                }
              ]
            },
            "documentation": {
              "id": 420,
              "nodeType": "StructuredDocumentation",
              "src": "6925:66:12",
              "text": "@notice returns value owed on a specific NFT used as collateral"
            },
            "functionSelector": "9fed0300",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "valueBorrowedOneNFT",
            "nameLocation": "7005:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "7042:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "7034:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7034:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "7066:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "7058:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7058:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "7093:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "7085:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7085:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7024:83:12"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "7129:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7129:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7128:9:12"
            },
            "scope": 500,
            "src": "6996:217:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "7431:71:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 453,
                            "name": "loanTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "7448:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref)))"
                            }
                          },
                          "id": 455,
                          "indexExpression": {
                            "id": 454,
                            "name": "_buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "7460:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7448:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct Barter.userBorrow storage ref))"
                          }
                        },
                        "id": 457,
                        "indexExpression": {
                          "id": 456,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "7468:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7448:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userBorrow_$18_storage_$",
                          "typeString": "mapping(uint256 => struct Barter.userBorrow storage ref)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "id": 458,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "7479:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7448:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userBorrow_$18_storage",
                        "typeString": "struct Barter.userBorrow storage ref"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 15,
                    "src": "7448:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 452,
                  "id": 461,
                  "nodeType": "Return",
                  "src": "7441:54:12"
                }
              ]
            },
            "documentation": {
              "id": 442,
              "nodeType": "StructuredDocumentation",
              "src": "7219:65:12",
              "text": "@notice returns address of seller who has an NFT as collateral"
            },
            "functionSelector": "3a1657b4",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerCollateralNFT",
            "nameLocation": "7298:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "7335:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "7327:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7327:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "7359:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "7351:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7351:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "7386:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "7378:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7378:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7317:83:12"
            },
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "7422:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7422:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7421:9:12"
            },
            "scope": 500,
            "src": "7289:213:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 485,
              "nodeType": "Block",
              "src": "7605:135:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 478,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7672:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Barter_$500",
                              "typeString": "contract Barter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Barter_$500",
                              "typeString": "contract Barter"
                            }
                          ],
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7664:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 476,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7664:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7664:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 480,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7691:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7691:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 482,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "7715:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 473,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "7623:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 472,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 819,
                          "src": "7615:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$819_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7615:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$819",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 762,
                      "src": "7615:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7615:118:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "7615:118:12"
                }
              ]
            },
            "functionSelector": "f61556c8",
            "id": 486,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 469,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "7591:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "7591:9:12"
              }
            ],
            "name": "emergencyExit",
            "nameLocation": "7517:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "7539:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "7531:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7531:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "7558:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "7550:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7550:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7530:37:12"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7605:0:12"
            },
            "scope": 500,
            "src": "7508:232:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 498,
              "nodeType": "Block",
              "src": "7829:50:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 494,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "7850:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 495,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "7862:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 493,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1054,
                      "src": "7839:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7839:33:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "7839:33:12"
                }
              ]
            },
            "functionSelector": "7065cb48",
            "id": 499,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 491,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 490,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "7819:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "7819:9:12"
              }
            ],
            "name": "addOwner",
            "nameLocation": "7784:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "7801:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "7793:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7793:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7792:19:12"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7829:0:12"
            },
            "scope": 500,
            "src": "7775:104:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 501,
        "src": "310:7571:12",
        "usedErrors": []
      }
    ],
    "src": "32:7850:12"
  },
  "bytecode": "60806040523480156200001157600080fd5b506200002d60008051602062001aca833981519152336200004e565b6200004860008051602062001aca833981519152306200004e565b620001b3565b6200005a82826200005e565b5050565b620000758282620000a160201b62000e8f1760201c565b60008281526001602090815260409091206200009c91839062000f1362000141821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200005a576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000fd3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000158836001600160a01b03841662000161565b90505b92915050565b6000818152600183016020526040812054620001aa575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200015b565b5060006200015b565b61190780620001c36000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806375b238fc116100b8578063a217fddf1161007c578063a217fddf146103b8578063ad5c4648146103c0578063ca15c873146103db578063d547741f146103ee578063f2df757b14610401578063f61556c81461042a57600080fd5b806375b238fc146102bb5780639010d07c146102d057806391d14854146102e3578063946ccfc0146102f65780639fed03001461037857600080fd5b80632f2ff15d1161010a5780632f2ff15d146101ff57806336568abe146102125780633a1657b4146102255780634900274914610282578063617a19c0146102955780637065cb48146102a857600080fd5b806301ffc9a7146101475780630b1eedb81461016f578063150b7a02146101845780631e315fd6146101bb578063248a9ca3146101ce575b600080fd5b61015a6101553660046113a7565b61043d565b60405190151581526020015b60405180910390f35b61018261017d3660046113ed565b610468565b005b6101a261019236600461144e565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610166565b6101826101c936600461152a565b6104d0565b6101f16101dc366004611566565b60009081526020819052604090206001015490565b604051908152602001610166565b61018261020d36600461157f565b6106e0565b61018261022036600461157f565b61070b565b61026a61023336600461152a565b6001600160a01b03928316600090815260036020908152604080832094861683529381528382209282529190915220600201541690565b6040516001600160a01b039091168152602001610166565b6101826102903660046115ab565b610789565b6101826102a33660046115ed565b610b16565b6101826102b6366004611642565b610d21565b6101f16000805160206118b283398151915281565b61026a6102de36600461165d565b610d70565b61015a6102f136600461157f565b610d8f565b61034861030436600461152a565b6003602081815260009485526040808620825293855283852090529083529120805460018201546002830154929093015490926001600160a01b0390811692169084565b60405161016694939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b6101f161038636600461152a565b6001600160a01b0392831660009081526003602090815260408083209490951682529283528381209181529152205490565b6101f1600081565b61026a73c778417e063141139fce010982780140aa0cd5ab81565b6101f16103e9366004611566565b610db8565b6101826103fc36600461157f565b610dcf565b6101f161040f366004611642565b6001600160a01b031660009081526002602052604090205490565b61018261043836600461167f565b610df5565b60006001600160e01b03198216635a05180f60e01b1480610462575061046282610f28565b92915050565b604051632142170760e11b81526001600160a01b038316906342842e0e90610498908790879086906004016116a9565b600060405180830381600087803b1580156104b257600080fd5b505af11580156104c6573d6000803e3d6000fd5b5050505050505050565b6104e86000805160206118b283398151915233610d8f565b61050d5760405162461bcd60e51b8152600401610504906116cd565b60405180910390fd5b6001600160a01b03808416600090815260036020818152604080842094871684529381528383208584529052919020015461054b9062278d00611711565b42116105a45760405162461bcd60e51b815260206004820152602260248201527f427579657220686173206d696e756d756d203330206461797320746f20726570604482015261617960f01b6064820152608401610504565b6001600160a01b03838116600090815260036020908152604080832084871680855290835281842086855290925291829020600201549151632142170760e11b815290926342842e0e92610603923092919091169086906004016116a9565b600060405180830381600087803b15801561061d57600080fd5b505af1158015610631573d6000803e3d6000fd5b5050506001600160a01b03808516600081815260036020908152604080832094881683529381528382208683528152838220549282526002905291822080549193509190610680908490611729565b90915550506001600160a01b039283166000908152600360208181526040808420959096168352938452848220928252919092529181208181556001810180546001600160a01b0319908116909155600282018054909116905590910155565b6000828152602081905260409020600101546106fc8133610f5d565b6107068383610fc1565b505050565b6001600160a01b038116331461077b5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610504565b6107858282610fe3565b5050565b6040516370a0823160e01b8152336004820152819073c778417e063141139fce010982780140aa0cd5ab906370a0823190602401602060405180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190611740565b101561084c5760405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f756768205745544820746f20726570617900000000000000006044820152606401610504565b6001600160a01b0380851660009081526003602090815260408083209387168352928152828220858352905220548111156108d35760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420706179206261636b206d6f7265207468616e20796f75206f776044820152606560f81b6064820152608401610504565b3360008181526003602090815260408083206001600160a01b038881168552908352818420878552909252918290206002015491516323b872dd60e01b815273c778417e063141139fce010982780140aa0cd5ab936323b872dd9361094193919291169086906004016116a9565b6020604051808303816000875af1158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190611759565b506001600160a01b0380851660009081526003602090815260408083209387168352928152828220858352905290812080548392906109c4908490611729565b90915550506001600160a01b038416600090815260026020526040812080548392906109f1908490611729565b90915550506001600160a01b038085166000908152600360209081526040808320938716835292815282822085835290522054610b10576001600160a01b03848116600090815260036020908152604080832084881680855290835281842087855290925291829020600101549151632142170760e11b815290926342842e0e92610a87923092919091169087906004016116a9565b600060405180830381600087803b158015610aa157600080fd5b505af1158015610ab5573d6000803e3d6000fd5b5050506001600160a01b038086166000908152600360208181526040808420948916845293815283832087845290529181208181556001810180546001600160a01b0319908116909155600282018054909116905590910155505b50505050565b6001600160a01b0385811660009081526003602090815260408083208785168452825280832086845290915290206002015416610c0a57604051632142170760e11b81526001600160a01b038416906342842e0e90610b7d908890309087906004016116a9565b600060405180830381600087803b158015610b9757600080fd5b505af1158015610bab573d6000803e3d6000fd5b505050506001600160a01b038581166000818152600360208181526040808420898716855282528084208885529091529091206002810180549489166001600160a01b0319958616179055600181018054909416909217909255429101555b6001600160a01b03858116600090815260036020908152604080832087851684528252808320868452909152902060020154811690851614610ca95760405162461bcd60e51b815260206004820152603260248201527f6f6e6c7920757365206e667420617320636f6c6c61746572616c20666f72206f6044820152716e652073746f726520617420612074696d6560701b6064820152608401610504565b6001600160a01b038086166000908152600360209081526040808320938716835292815282822085835290529081208054839290610ce8908490611711565b90915550506001600160a01b03851660009081526002602052604081208054839290610d15908490611711565b90915550505050505050565b610d396000805160206118b283398151915233610d8f565b610d555760405162461bcd60e51b8152600401610504906116cd565b610d6d6000805160206118b283398151915282611005565b50565b6000828152600160205260408120610d88908361100f565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526001602052604081206104629061101b565b600082815260208190526040902060010154610deb8133610f5d565b6107068383610fe3565b610e0d6000805160206118b283398151915233610d8f565b610e295760405162461bcd60e51b8152600401610504906116cd565b604051632142170760e11b81526001600160a01b038316906342842e0e90610e59903090339086906004016116a9565b600060405180830381600087803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b505050505050565b610e998282610d8f565b610785576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610ecf3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610d88836001600160a01b038416611025565b60006001600160e01b03198216637965db0b60e01b148061046257506301ffc9a760e01b6001600160e01b0319831614610462565b610f678282610d8f565b61078557610f7f816001600160a01b03166014611074565b610f8a836020611074565b604051602001610f9b9291906117a7565b60408051601f198184030181529082905262461bcd60e51b82526105049160040161181c565b610fcb8282610e8f565b60008281526001602052604090206107069082610f13565b610fed8282611210565b60008281526001602052604090206107069082611275565b6107858282610fc1565b6000610d88838361128a565b6000610462825490565b600081815260018301602052604081205461106c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610462565b506000610462565b6060600061108383600261184f565b61108e906002611711565b67ffffffffffffffff8111156110a6576110a6611438565b6040519080825280601f01601f1916602001820160405280156110d0576020820181803683370190505b509050600360fc1b816000815181106110eb576110eb61186e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061111a5761111a61186e565b60200101906001600160f81b031916908160001a905350600061113e84600261184f565b611149906001611711565b90505b60018111156111c1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061117d5761117d61186e565b1a60f81b8282815181106111935761119361186e565b60200101906001600160f81b031916908160001a90535060049490941c936111ba81611884565b905061114c565b508315610d885760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610504565b61121a8282610d8f565b15610785576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610d88836001600160a01b0384166112b4565b60008260000182815481106112a1576112a161186e565b9060005260206000200154905092915050565b6000818152600183016020526040812054801561139d5760006112d8600183611729565b85549091506000906112ec90600190611729565b905081811461135157600086600001828154811061130c5761130c61186e565b906000526020600020015490508087600001848154811061132f5761132f61186e565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806113625761136261189b565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610462565b6000915050610462565b6000602082840312156113b957600080fd5b81356001600160e01b031981168114610d8857600080fd5b80356001600160a01b03811681146113e857600080fd5b919050565b6000806000806080858703121561140357600080fd5b61140c856113d1565b935061141a602086016113d1565b9250611428604086016113d1565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561146457600080fd5b61146d856113d1565b935061147b602086016113d1565b925060408501359150606085013567ffffffffffffffff8082111561149f57600080fd5b818701915087601f8301126114b357600080fd5b8135818111156114c5576114c5611438565b604051601f8201601f19908116603f011681019083821181831017156114ed576114ed611438565b816040528281528a602084870101111561150657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060006060848603121561153f57600080fd5b611548846113d1565b9250611556602085016113d1565b9150604084013590509250925092565b60006020828403121561157857600080fd5b5035919050565b6000806040838503121561159257600080fd5b823591506115a2602084016113d1565b90509250929050565b600080600080608085870312156115c157600080fd5b6115ca856113d1565b93506115d8602086016113d1565b93969395505050506040820135916060013590565b600080600080600060a0868803121561160557600080fd5b61160e866113d1565b945061161c602087016113d1565b935061162a604087016113d1565b94979396509394606081013594506080013592915050565b60006020828403121561165457600080fd5b610d88826113d1565b6000806040838503121561167057600080fd5b50508035926020909101359150565b6000806040838503121561169257600080fd5b61169b836113d1565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252601490820152736d75737420686176652061646d696e20726f6c6560601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611724576117246116fb565b500190565b60008282101561173b5761173b6116fb565b500390565b60006020828403121561175257600080fd5b5051919050565b60006020828403121561176b57600080fd5b81518015158114610d8857600080fd5b60005b8381101561179657818101518382015260200161177e565b83811115610b105750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516117df81601785016020880161177b565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161181081602884016020880161177b565b01602801949350505050565b602081526000825180602084015261183b81604085016020870161177b565b601f01601f19169190910160400192915050565b6000816000190483118215151615611869576118696116fb565b500290565b634e487b7160e01b600052603260045260246000fd5b600081611893576118936116fb565b506000190190565b634e487b7160e01b600052603160045260246000fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220a326ade67550b1c2c0856ddc0226cdd2a02a82ca96095197fc83ef6dcdfa16ab64736f6c634300080b0033a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
  "bytecodeSha1": "e07e6ed0890567bbe7f639a14bbc29117bdec79d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Barter",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._checkRole": {
          "53": [
            3423,
            3445,
            false
          ]
        },
        "AccessControl._grantRole": {
          "52": [
            6944,
            6966,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "54": [
            7302,
            7324,
            false
          ]
        },
        "AccessControl.renounceRole": {
          "51": [
            5499,
            5522,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "12": {
        "Barter.collateralizedPurchase": {
          "49": [
            3588,
            3646,
            true
          ]
        },
        "Barter.emergencyExit": {
          "50": [
            1232,
            1263,
            true
          ]
        },
        "Barter.handleDefault": {
          "46": [
            5756,
            5852,
            true
          ]
        },
        "Barter.repay": {
          "47": [
            4359,
            4404,
            true
          ],
          "48": [
            4485,
            4547,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "9": {}
    },
    "statements": {
      "0": {
        "AccessControl._checkRole": {
          "38": [
            3461,
            3810
          ]
        },
        "AccessControl._grantRole": {
          "34": [
            6982,
            7018
          ],
          "35": [
            7032,
            7077
          ]
        },
        "AccessControl._revokeRole": {
          "44": [
            7340,
            7377
          ],
          "45": [
            7391,
            7436
          ]
        },
        "AccessControl._setupRole": {
          "43": [
            6335,
            6360
          ]
        },
        "AccessControl.getRoleAdmin": {
          "0": [
            4101,
            4130
          ]
        },
        "AccessControl.grantRole": {
          "11": [
            4500,
            4525
          ]
        },
        "AccessControl.hasRole": {
          "30": [
            3011,
            3047
          ]
        },
        "AccessControl.renounceRole": {
          "12": [
            5491,
            5574
          ],
          "13": [
            5585,
            5611
          ]
        },
        "AccessControl.revokeRole": {
          "32": [
            4880,
            4906
          ]
        },
        "AccessControl.supportsInterface": {
          "36": [
            2721,
            2815
          ]
        }
      },
      "1": {
        "AccessControlEnumerable._grantRole": {
          "39": [
            2065,
            2096
          ],
          "40": [
            2106,
            2137
          ]
        },
        "AccessControlEnumerable._revokeRole": {
          "41": [
            2321,
            2353
          ],
          "42": [
            2363,
            2397
          ]
        },
        "AccessControlEnumerable.getRoleMember": {
          "29": [
            1540,
            1575
          ]
        },
        "AccessControlEnumerable.getRoleMemberCount": {
          "31": [
            1849,
            1883
          ]
        },
        "AccessControlEnumerable.supportsInterface": {
          "4": [
            735,
            839
          ]
        }
      },
      "10": {},
      "12": {
        "Barter.addOwner": {
          "28": [
            7839,
            7872
          ]
        },
        "Barter.collateralizedPurchase": {
          "21": [
            3062,
            3192
          ],
          "22": [
            3260,
            3317
          ],
          "23": [
            3331,
            3386
          ],
          "24": [
            3400,
            3485
          ],
          "25": [
            3567,
            3722
          ],
          "26": [
            3797,
            3862
          ],
          "27": [
            3872,
            3910
          ]
        },
        "Barter.emergencyExit": {
          "33": [
            7615,
            7733
          ]
        },
        "Barter.exchangeNFT": {
          "5": [
            1809,
            1871
          ]
        },
        "Barter.handleDefault": {
          "6": [
            5735,
            5912
          ],
          "7": [
            5923,
            6078
          ],
          "8": [
            6125,
            6217
          ],
          "9": [
            6257,
            6304
          ]
        },
        "Barter.repay": {
          "14": [
            4338,
            4454
          ],
          "15": [
            4464,
            4606
          ],
          "16": [
            4617,
            4764
          ],
          "17": [
            4775,
            4837
          ],
          "18": [
            4920,
            4955
          ],
          "19": [
            5077,
            5247
          ],
          "20": [
            5296,
            5343
          ]
        },
        "Barter.sellerCollateralNFT": {
          "1": [
            7441,
            7495
          ]
        },
        "Barter.totalValueBorrowed": {
          "3": [
            6881,
            6912
          ]
        },
        "Barter.valueBorrowedOneNFT": {
          "2": [
            7148,
            7206
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "9": {
        "ERC165.supportsInterface": {
          "37": [
            930,
            977
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/AccessControlEnumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IAccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IAccessControlEnumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Receiver"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101425760003560e01c806375b238fc116100b8578063a217fddf1161007c578063a217fddf146103b8578063ad5c4648146103c0578063ca15c873146103db578063d547741f146103ee578063f2df757b14610401578063f61556c81461042a57600080fd5b806375b238fc146102bb5780639010d07c146102d057806391d14854146102e3578063946ccfc0146102f65780639fed03001461037857600080fd5b80632f2ff15d1161010a5780632f2ff15d146101ff57806336568abe146102125780633a1657b4146102255780634900274914610282578063617a19c0146102955780637065cb48146102a857600080fd5b806301ffc9a7146101475780630b1eedb81461016f578063150b7a02146101845780631e315fd6146101bb578063248a9ca3146101ce575b600080fd5b61015a6101553660046113a7565b61043d565b60405190151581526020015b60405180910390f35b61018261017d3660046113ed565b610468565b005b6101a261019236600461144e565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610166565b6101826101c936600461152a565b6104d0565b6101f16101dc366004611566565b60009081526020819052604090206001015490565b604051908152602001610166565b61018261020d36600461157f565b6106e0565b61018261022036600461157f565b61070b565b61026a61023336600461152a565b6001600160a01b03928316600090815260036020908152604080832094861683529381528382209282529190915220600201541690565b6040516001600160a01b039091168152602001610166565b6101826102903660046115ab565b610789565b6101826102a33660046115ed565b610b16565b6101826102b6366004611642565b610d21565b6101f16000805160206118b283398151915281565b61026a6102de36600461165d565b610d70565b61015a6102f136600461157f565b610d8f565b61034861030436600461152a565b6003602081815260009485526040808620825293855283852090529083529120805460018201546002830154929093015490926001600160a01b0390811692169084565b60405161016694939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b6101f161038636600461152a565b6001600160a01b0392831660009081526003602090815260408083209490951682529283528381209181529152205490565b6101f1600081565b61026a73c778417e063141139fce010982780140aa0cd5ab81565b6101f16103e9366004611566565b610db8565b6101826103fc36600461157f565b610dcf565b6101f161040f366004611642565b6001600160a01b031660009081526002602052604090205490565b61018261043836600461167f565b610df5565b60006001600160e01b03198216635a05180f60e01b1480610462575061046282610f28565b92915050565b604051632142170760e11b81526001600160a01b038316906342842e0e90610498908790879086906004016116a9565b600060405180830381600087803b1580156104b257600080fd5b505af11580156104c6573d6000803e3d6000fd5b5050505050505050565b6104e86000805160206118b283398151915233610d8f565b61050d5760405162461bcd60e51b8152600401610504906116cd565b60405180910390fd5b6001600160a01b03808416600090815260036020818152604080842094871684529381528383208584529052919020015461054b9062278d00611711565b42116105a45760405162461bcd60e51b815260206004820152602260248201527f427579657220686173206d696e756d756d203330206461797320746f20726570604482015261617960f01b6064820152608401610504565b6001600160a01b03838116600090815260036020908152604080832084871680855290835281842086855290925291829020600201549151632142170760e11b815290926342842e0e92610603923092919091169086906004016116a9565b600060405180830381600087803b15801561061d57600080fd5b505af1158015610631573d6000803e3d6000fd5b5050506001600160a01b03808516600081815260036020908152604080832094881683529381528382208683528152838220549282526002905291822080549193509190610680908490611729565b90915550506001600160a01b039283166000908152600360208181526040808420959096168352938452848220928252919092529181208181556001810180546001600160a01b0319908116909155600282018054909116905590910155565b6000828152602081905260409020600101546106fc8133610f5d565b6107068383610fc1565b505050565b6001600160a01b038116331461077b5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610504565b6107858282610fe3565b5050565b6040516370a0823160e01b8152336004820152819073c778417e063141139fce010982780140aa0cd5ab906370a0823190602401602060405180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190611740565b101561084c5760405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f756768205745544820746f20726570617900000000000000006044820152606401610504565b6001600160a01b0380851660009081526003602090815260408083209387168352928152828220858352905220548111156108d35760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420706179206261636b206d6f7265207468616e20796f75206f776044820152606560f81b6064820152608401610504565b3360008181526003602090815260408083206001600160a01b038881168552908352818420878552909252918290206002015491516323b872dd60e01b815273c778417e063141139fce010982780140aa0cd5ab936323b872dd9361094193919291169086906004016116a9565b6020604051808303816000875af1158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190611759565b506001600160a01b0380851660009081526003602090815260408083209387168352928152828220858352905290812080548392906109c4908490611729565b90915550506001600160a01b038416600090815260026020526040812080548392906109f1908490611729565b90915550506001600160a01b038085166000908152600360209081526040808320938716835292815282822085835290522054610b10576001600160a01b03848116600090815260036020908152604080832084881680855290835281842087855290925291829020600101549151632142170760e11b815290926342842e0e92610a87923092919091169087906004016116a9565b600060405180830381600087803b158015610aa157600080fd5b505af1158015610ab5573d6000803e3d6000fd5b5050506001600160a01b038086166000908152600360208181526040808420948916845293815283832087845290529181208181556001810180546001600160a01b0319908116909155600282018054909116905590910155505b50505050565b6001600160a01b0385811660009081526003602090815260408083208785168452825280832086845290915290206002015416610c0a57604051632142170760e11b81526001600160a01b038416906342842e0e90610b7d908890309087906004016116a9565b600060405180830381600087803b158015610b9757600080fd5b505af1158015610bab573d6000803e3d6000fd5b505050506001600160a01b038581166000818152600360208181526040808420898716855282528084208885529091529091206002810180549489166001600160a01b0319958616179055600181018054909416909217909255429101555b6001600160a01b03858116600090815260036020908152604080832087851684528252808320868452909152902060020154811690851614610ca95760405162461bcd60e51b815260206004820152603260248201527f6f6e6c7920757365206e667420617320636f6c6c61746572616c20666f72206f6044820152716e652073746f726520617420612074696d6560701b6064820152608401610504565b6001600160a01b038086166000908152600360209081526040808320938716835292815282822085835290529081208054839290610ce8908490611711565b90915550506001600160a01b03851660009081526002602052604081208054839290610d15908490611711565b90915550505050505050565b610d396000805160206118b283398151915233610d8f565b610d555760405162461bcd60e51b8152600401610504906116cd565b610d6d6000805160206118b283398151915282611005565b50565b6000828152600160205260408120610d88908361100f565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526001602052604081206104629061101b565b600082815260208190526040902060010154610deb8133610f5d565b6107068383610fe3565b610e0d6000805160206118b283398151915233610d8f565b610e295760405162461bcd60e51b8152600401610504906116cd565b604051632142170760e11b81526001600160a01b038316906342842e0e90610e59903090339086906004016116a9565b600060405180830381600087803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b505050505050565b610e998282610d8f565b610785576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610ecf3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610d88836001600160a01b038416611025565b60006001600160e01b03198216637965db0b60e01b148061046257506301ffc9a760e01b6001600160e01b0319831614610462565b610f678282610d8f565b61078557610f7f816001600160a01b03166014611074565b610f8a836020611074565b604051602001610f9b9291906117a7565b60408051601f198184030181529082905262461bcd60e51b82526105049160040161181c565b610fcb8282610e8f565b60008281526001602052604090206107069082610f13565b610fed8282611210565b60008281526001602052604090206107069082611275565b6107858282610fc1565b6000610d88838361128a565b6000610462825490565b600081815260018301602052604081205461106c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610462565b506000610462565b6060600061108383600261184f565b61108e906002611711565b67ffffffffffffffff8111156110a6576110a6611438565b6040519080825280601f01601f1916602001820160405280156110d0576020820181803683370190505b509050600360fc1b816000815181106110eb576110eb61186e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061111a5761111a61186e565b60200101906001600160f81b031916908160001a905350600061113e84600261184f565b611149906001611711565b90505b60018111156111c1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061117d5761117d61186e565b1a60f81b8282815181106111935761119361186e565b60200101906001600160f81b031916908160001a90535060049490941c936111ba81611884565b905061114c565b508315610d885760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610504565b61121a8282610d8f565b15610785576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610d88836001600160a01b0384166112b4565b60008260000182815481106112a1576112a161186e565b9060005260206000200154905092915050565b6000818152600183016020526040812054801561139d5760006112d8600183611729565b85549091506000906112ec90600190611729565b905081811461135157600086600001828154811061130c5761130c61186e565b906000526020600020015490508087600001848154811061132f5761132f61186e565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806113625761136261189b565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610462565b6000915050610462565b6000602082840312156113b957600080fd5b81356001600160e01b031981168114610d8857600080fd5b80356001600160a01b03811681146113e857600080fd5b919050565b6000806000806080858703121561140357600080fd5b61140c856113d1565b935061141a602086016113d1565b9250611428604086016113d1565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561146457600080fd5b61146d856113d1565b935061147b602086016113d1565b925060408501359150606085013567ffffffffffffffff8082111561149f57600080fd5b818701915087601f8301126114b357600080fd5b8135818111156114c5576114c5611438565b604051601f8201601f19908116603f011681019083821181831017156114ed576114ed611438565b816040528281528a602084870101111561150657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060006060848603121561153f57600080fd5b611548846113d1565b9250611556602085016113d1565b9150604084013590509250925092565b60006020828403121561157857600080fd5b5035919050565b6000806040838503121561159257600080fd5b823591506115a2602084016113d1565b90509250929050565b600080600080608085870312156115c157600080fd5b6115ca856113d1565b93506115d8602086016113d1565b93969395505050506040820135916060013590565b600080600080600060a0868803121561160557600080fd5b61160e866113d1565b945061161c602087016113d1565b935061162a604087016113d1565b94979396509394606081013594506080013592915050565b60006020828403121561165457600080fd5b610d88826113d1565b6000806040838503121561167057600080fd5b50508035926020909101359150565b6000806040838503121561169257600080fd5b61169b836113d1565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252601490820152736d75737420686176652061646d696e20726f6c6560601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611724576117246116fb565b500190565b60008282101561173b5761173b6116fb565b500390565b60006020828403121561175257600080fd5b5051919050565b60006020828403121561176b57600080fd5b81518015158114610d8857600080fd5b60005b8381101561179657818101518382015260200161177e565b83811115610b105750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516117df81601785016020880161177b565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161181081602884016020880161177b565b01602801949350505050565b602081526000825180602084015261183b81604085016020870161177b565b601f01601f19169190910160400192915050565b6000816000190483118215151615611869576118696116fb565b500290565b634e487b7160e01b600052603260045260246000fd5b600081611893576118936116fb565b506000190190565b634e487b7160e01b600052603160045260246000fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220a326ade67550b1c2c0856ddc0226cdd2a02a82ca96095197fc83ef6dcdfa16ab64736f6c634300080b0033",
  "deployedSourceMap": "310:7571:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:1;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;634:212:1;;;;;;;;1469:409:12;;;;;;:::i;:::-;;:::i;:::-;;6317:200;;;;;;:::i;:::-;-1:-1:-1;;;6317:200:12;;;;;;;;;;-1:-1:-1;;;;;;2520:33:13;;;2502:52;;2490:2;2475:18;6317:200:12;2358:202:13;5453:858:12;;;;;;:::i;:::-;;:::i;4008:129:0:-;;;;;;:::i;:::-;4082:7;4108:12;;;;;;;;;;:22;;;;4008:129;;;;3229:25:13;;;3217:2;3202:18;4008:129:0;3083:177:13;4387:145:0;;;;;;:::i;:::-;;:::i;5404:214::-;;;;;;:::i;:::-;;:::i;7289:213:12:-;;;;;;:::i;:::-;-1:-1:-1;;;;;7448:19:12;;;7422:7;7448:19;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;;;:47;;;;;7289:213;;;;-1:-1:-1;;;;;3688:32:13;;;3670:51;;3658:2;3643:18;7289:213:12;3524:203:13;4157:1203:12;;;;;;:::i;:::-;;:::i;2216:1701::-;;;;;;:::i;:::-;;:::i;7775:104::-;;;;;;:::i;:::-;;:::i;1008:60::-;;-1:-1:-1;;;;;;;;;;;1008:60:12;;1431:151:1;;;;;;:::i;:::-;;:::i;2909:145:0:-;;;;;;:::i;:::-;;:::i;788:97:12:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;788:97:12;;;;;;;;;;;;;;;;;5286:25:13;;;-1:-1:-1;;;;;5385:15:13;;;5380:2;5365:18;;5358:43;5437:15;;5432:2;5417:18;;5410:43;5484:2;5469:18;;5462:34;5273:3;5258:19;;5055:447;6996:217:12;;;;;;:::i;:::-;-1:-1:-1;;;;;7155:19:12;;;7129:7;7155:19;;;:11;:19;;;;;;;;:30;;;;;;;;;;;;:40;;;;;;:51;;6996:217;2027:49:0;;2072:4;2027:49;;928:73:12;;959:42;928:73;;1750:140:1;;;;;;:::i;:::-;;:::i;4766:147:0:-;;;;;;:::i;:::-;;:::i;6797:122:12:-;;;;;;:::i;:::-;-1:-1:-1;;;;;6888:24:12;6862:7;6888:24;;;:16;:24;;;;;;;6797:122;7508:232;;;;;;:::i;:::-;;:::i;634:212:1:-;719:4;-1:-1:-1;;;;;;742:57:1;;-1:-1:-1;;;742:57:1;;:97;;;803:36;827:11;803:23;:36::i;:::-;735:104;634:212;-1:-1:-1;;634:212:1:o;1469:409:12:-;1809:62;;-1:-1:-1;;;1809:62:12;;-1:-1:-1;;;;;1809:35:12;;;;;:62;;1845:6;;1853:7;;1862:8;;1809:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:409;;;;:::o;5453:858::-;1232:31;-1:-1:-1;;;;;;;;;;;1252:10:12;1232:7;:31::i;:::-;1224:64;;;;-1:-1:-1;;;1224:64:12;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;5791:19:12;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;:30;;::::1;::::0;;;;;;;;:40;;;;;;;;:50:::1;::::0;:60:::1;::::0;5844:7:::1;5791:60;:::i;:::-;5756:15;:96;5735:177;;;::::0;-1:-1:-1;;;5735:177:12;;7144:2:13;5735:177:12::1;::::0;::::1;7126:21:13::0;7183:2;7163:18;;;7156:30;7222:34;7202:18;;;7195:62;-1:-1:-1;;;7273:18:13;;;7266:32;7315:19;;5735:177:12::1;6942:398:13::0;5735:177:12::1;-1:-1:-1::0;;;;;5999:19:12;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;5923:35;;::::1;5999:30:::0;;;;;;;;;:40;;;;;;;;;;:47:::1;;::::0;5923:155;;-1:-1:-1;;;5923:155:12;;:35;;::::1;::::0;:155:::1;::::0;5980:4:::1;::::0;5999:47;;;::::1;::::0;6030:8;;5923:155:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;6153:19:12;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;:30;;::::1;::::0;;;;;;;;:40;;;;;;;;:64;6125:24;;;:16:::1;:24:::0;;;;;:92;;6153:64;;-1:-1:-1;6125:24:12;6153:19;6125:92:::1;::::0;6153:64;;6125:92:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;6264:19:12;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;:30;;;::::1;::::0;;;;;;;;:40;;;;;;;;;;6257:47;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;6257:47:12;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;5453:858::o;4387:145:0:-;4082:7;4108:12;;;;;;;;;;:22;;;2505:30;2516:4;719:10:7;2505::0;:30::i;:::-;4500:25:::1;4511:4;4517:7;4500:10;:25::i;:::-;4387:145:::0;;;:::o;5404:214::-;-1:-1:-1;;;;;5499:23:0;;719:10:7;5499:23:0;5491:83;;;;-1:-1:-1;;;5491:83:0;;7677:2:13;5491:83:0;;;7659:21:13;7716:2;7696:18;;;7689:30;7755:34;7735:18;;;7728:62;-1:-1:-1;;;7806:18:13;;;7799:45;7861:19;;5491:83:0;7475:411:13;5491:83:0;5585:26;5597:4;5603:7;5585:11;:26::i;:::-;5404:214;;:::o;4157:1203:12:-;4359:34;;-1:-1:-1;;;4359:34:12;;4382:10;4359:34;;;3670:51:13;4397:7:12;;959:42;;4359:22;;3643:18:13;;4359:34:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;4338:116;;;;-1:-1:-1;;;4338:116:12;;8282:2:13;4338:116:12;;;8264:21:13;8321:2;8301:18;;;8294:30;8360:26;8340:18;;;8333:54;8404:18;;4338:116:12;8080:348:13;4338:116:12;-1:-1:-1;;;;;4485:19:12;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;:51;:62;-1:-1:-1;4485:62:12;4464:142;;;;-1:-1:-1;;;4464:142:12;;8635:2:13;4464:142:12;;;8617:21:13;8674:2;8654:18;;;8647:30;8713:34;8693:18;;;8686:62;-1:-1:-1;;;8764:18:13;;;8757:31;8805:19;;4464:142:12;8433:397:13;4464:142:12;4656:10;4681:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4681:34:12;;;;;;;;;;;:44;;;;;;;;;;:51;;;4617:147;;-1:-1:-1;;;4617:147:12;;959:42;;4617:25;;:147;;4656:10;;4681:51;;;4747:7;;4617:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4775:19:12;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;;;:62;;4830:7;;4775:19;:62;;4830:7;;4775:62;:::i;:::-;;;;-1:-1:-1;;;;;;;4920:24:12;;;;;;:16;:24;;;;;:35;;4948:7;;4920:24;:35;;4948:7;;4920:35;:::i;:::-;;;;-1:-1:-1;;;;;;;5005:19:12;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;:51;5001:353;;-1:-1:-1;;;;;5161:19:12;;;;;;;:11;:19;;;;;;;;5077:35;;;5161:30;;;;;;;;;:40;;;;;;;;;;:46;;;5077:170;;-1:-1:-1;;;5077:170:12;;:35;;;;:170;;5138:4;;5161:46;;;;;5192:8;;5077:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;5303:19:12;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;;;5296:47;;;;;;;;-1:-1:-1;;;;;;5296:47:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5001:353:12;4157:1203;;;;:::o;2216:1701::-;-1:-1:-1;;;;;2985:19:12;;;3044:1;2985:19;;;:11;:19;;;;;;;;:30;;;;;;;;;;:40;;;;;;;;:47;;;;2981:515;;3062:130;;-1:-1:-1;;;3062:130:12;;-1:-1:-1;;;;;3062:35:12;;;;;:130;;3115:6;;3147:4;;3170:8;;3062:130;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;3260:19:12;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;:40;;;;;;;;;:47;;;:57;;;;;-1:-1:-1;;;;;;3260:57:12;;;;;;-1:-1:-1;3331:46:12;;:55;;;;;;;;;;;3453:32;3400:50;;:85;2981:515;-1:-1:-1;;;;;3588:19:12;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;:40;;;;;;;;:47;;;;;:58;;;;3567:155;;;;-1:-1:-1;;;3567:155:12;;9319:2:13;3567:155:12;;;9301:21:13;9358:2;9338:18;;;9331:30;9397:34;9377:18;;;9370:62;-1:-1:-1;;;9448:18:13;;;9441:48;9506:19;;3567:155:12;9117:414:13;3567:155:12;-1:-1:-1;;;;;3797:19:12;;;;;;;:11;:19;;;;;;;;:30;;;;;;;;;;;:40;;;;;;;;:65;;3852:10;;3797:19;:65;;3852:10;;3797:65;:::i;:::-;;;;-1:-1:-1;;;;;;;3872:24:12;;;;;;:16;:24;;;;;:38;;3900:10;;3872:24;:38;;3900:10;;3872:38;:::i;:::-;;;;-1:-1:-1;;;;;;;2216:1701:12:o;7775:104::-;1232:31;-1:-1:-1;;;;;;;;;;;1252:10:12;1232:7;:31::i;:::-;1224:64;;;;-1:-1:-1;;;1224:64:12;;;;;;;:::i;:::-;7839:33:::1;-1:-1:-1::0;;;;;;;;;;;7862:9:12::1;7839:10;:33::i;:::-;7775:104:::0;:::o;1431:151:1:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:1:o;2909:145:0:-;2995:4;3018:12;;;;;;;;;;;-1:-1:-1;;;;;3018:29:0;;;;;;;;;;;;;;;2909:145::o;1750:140:1:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;4766:147:0:-;4082:7;4108:12;;;;;;;;;;:22;;;2505:30;2516:4;719:10:7;2505::0;:30::i;:::-;4880:26:::1;4892:4;4898:7;4880:11;:26::i;7508:232:12:-:0;1232:31;-1:-1:-1;;;;;;;;;;;1252:10:12;1232:7;:31::i;:::-;1224:64;;;;-1:-1:-1;;;1224:64:12;;;;;;;:::i;:::-;7615:118:::1;::::0;-1:-1:-1;;;7615:118:12;;-1:-1:-1;;;;;7615:35:12;::::1;::::0;::::1;::::0;:118:::1;::::0;7672:4:::1;::::0;7691:10:::1;::::0;7715:8;;7615:118:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7508:232:::0;;:::o;6861:233:0:-;6944:22;6952:4;6958:7;6944;:22::i;:::-;6939:149;;6982:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6982:29:0;;;;;;;;;:36;;-1:-1:-1;;6982:36:0;7014:4;6982:36;;;7064:12;719:10:7;;640:96;7064:12:0;-1:-1:-1;;;;;7037:40:0;7055:7;-1:-1:-1;;;;;7037:40:0;7049:4;7037:40;;;;;;;;;;6861:233;;:::o;7612:150:11:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:11;;7705:4;:50::i;2620:202:0:-;2705:4;-1:-1:-1;;;;;;2728:47:0;;-1:-1:-1;;;2728:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:9;;;2779:36:0;829:155:9;3335:492:0;3423:22;3431:4;3437:7;3423;:22::i;:::-;3418:403;;3606:41;3634:7;-1:-1:-1;;;;;3606:41:0;3644:2;3606:19;:41::i;:::-;3718:38;3746:4;3753:2;3718:19;:38::i;:::-;3513:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3513:265:0;;;;;;;;;;-1:-1:-1;;;3461:349:0;;;;;;;:::i;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;6257:110:0:-;6335:25;6346:4;6352:7;6335:10;:25::i;8870:156:11:-;8944:7;8994:22;8998:3;9010:5;8994:3;:22::i;8413:115::-;8476:7;8502:19;8510:3;4028:18;;3946:107;1697:404;1760:4;3834:19;;;:12;;;:19;;;;;;1776:319;;-1:-1:-1;1818:23:11;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:11;2072:12;;1588:441:8;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:8;;1688:47;;-1:-1:-1;;;1745:6:8;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:8;;;;;;;;;-1:-1:-1;;;1770:6:8;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:8;;;;;;;;-1:-1:-1;1800:9:8;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:8;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:8;;;;;;;;-1:-1:-1;1915:1:8;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:8;;1936:55;;;;-1:-1:-1;;;1936:55:8;;11626:2:13;1936:55:8;;;11608:21:13;;;11645:18;;;11638:30;11704:34;11684:18;;;11677:62;11756:18;;1936:55:8;11424:356:13;7219:234:0;7302:22;7310:4;7316:7;7302;:22::i;:::-;7298:149;;;7372:5;7340:12;;;;;;;;;;;-1:-1:-1;;;;;7340:29:0;;;;;;;;;;:37;;-1:-1:-1;;7340:37:0;;;7396:40;719:10:7;;7340:12:0;;7396:40;;7372:5;7396:40;7219:234;;:::o;7930:156:11:-;8003:4;8026:53;8034:3;-1:-1:-1;;;;;8054:23:11;;8026:7;:53::i;4395:118::-;4462:7;4488:3;:11;;4500:5;4488:18;;;;;;;;:::i;:::-;;;;;;;;;4481:25;;4395:118;;;;:::o;2269:1388::-;2335:4;2472:19;;;:12;;;:19;;;;;;2506:15;;2502:1149;;2875:21;2899:14;2912:1;2899:10;:14;:::i;:::-;2947:18;;2875:38;;-1:-1:-1;2927:17:11;;2947:22;;2968:1;;2947:22;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;;;:::i;:::-;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3288:23;;;:12;;;:23;;;;;:36;;;2984:398;3460:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;;;14:286:13;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:13;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:403::-;761:6;769;777;785;838:3;826:9;817:7;813:23;809:33;806:53;;;855:1;852;845:12;806:53;878:29;897:9;878:29;:::i;:::-;868:39;;926:38;960:2;949:9;945:18;926:38;:::i;:::-;916:48;;983:38;1017:2;1006:9;1002:18;983:38;:::i;:::-;675:403;;;;-1:-1:-1;973:48:13;;1068:2;1053:18;1040:32;;-1:-1:-1;;675:403:13:o;1083:127::-;1144:10;1139:3;1135:20;1132:1;1125:31;1175:4;1172:1;1165:15;1199:4;1196:1;1189:15;1215:1138;1310:6;1318;1326;1334;1387:3;1375:9;1366:7;1362:23;1358:33;1355:53;;;1404:1;1401;1394:12;1355:53;1427:29;1446:9;1427:29;:::i;:::-;1417:39;;1475:38;1509:2;1498:9;1494:18;1475:38;:::i;:::-;1465:48;;1560:2;1549:9;1545:18;1532:32;1522:42;;1615:2;1604:9;1600:18;1587:32;1638:18;1679:2;1671:6;1668:14;1665:34;;;1695:1;1692;1685:12;1665:34;1733:6;1722:9;1718:22;1708:32;;1778:7;1771:4;1767:2;1763:13;1759:27;1749:55;;1800:1;1797;1790:12;1749:55;1836:2;1823:16;1858:2;1854;1851:10;1848:36;;;1864:18;;:::i;:::-;1939:2;1933:9;1907:2;1993:13;;-1:-1:-1;;1989:22:13;;;2013:2;1985:31;1981:40;1969:53;;;2037:18;;;2057:22;;;2034:46;2031:72;;;2083:18;;:::i;:::-;2123:10;2119:2;2112:22;2158:2;2150:6;2143:18;2198:7;2193:2;2188;2184;2180:11;2176:20;2173:33;2170:53;;;2219:1;2216;2209:12;2170:53;2275:2;2270;2266;2262:11;2257:2;2249:6;2245:15;2232:46;2320:1;2315:2;2310;2302:6;2298:15;2294:24;2287:35;2341:6;2331:16;;;;;;;1215:1138;;;;;;;:::o;2565:328::-;2642:6;2650;2658;2711:2;2699:9;2690:7;2686:23;2682:32;2679:52;;;2727:1;2724;2717:12;2679:52;2750:29;2769:9;2750:29;:::i;:::-;2740:39;;2798:38;2832:2;2821:9;2817:18;2798:38;:::i;:::-;2788:48;;2883:2;2872:9;2868:18;2855:32;2845:42;;2565:328;;;;;:::o;2898:180::-;2957:6;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;-1:-1:-1;3049:23:13;;2898:180;-1:-1:-1;2898:180:13:o;3265:254::-;3333:6;3341;3394:2;3382:9;3373:7;3369:23;3365:32;3362:52;;;3410:1;3407;3400:12;3362:52;3446:9;3433:23;3423:33;;3475:38;3509:2;3498:9;3494:18;3475:38;:::i;:::-;3465:48;;3265:254;;;;;:::o;3732:397::-;3818:6;3826;3834;3842;3895:3;3883:9;3874:7;3870:23;3866:33;3863:53;;;3912:1;3909;3902:12;3863:53;3935:29;3954:9;3935:29;:::i;:::-;3925:39;;3983:38;4017:2;4006:9;4002:18;3983:38;:::i;:::-;3732:397;;3973:48;;-1:-1:-1;;;;4068:2:13;4053:18;;4040:32;;4119:2;4104:18;4091:32;;3732:397::o;4134:472::-;4229:6;4237;4245;4253;4261;4314:3;4302:9;4293:7;4289:23;4285:33;4282:53;;;4331:1;4328;4321:12;4282:53;4354:29;4373:9;4354:29;:::i;:::-;4344:39;;4402:38;4436:2;4425:9;4421:18;4402:38;:::i;:::-;4392:48;;4459:38;4493:2;4482:9;4478:18;4459:38;:::i;:::-;4134:472;;;;-1:-1:-1;4449:48:13;;4544:2;4529:18;;4516:32;;-1:-1:-1;4595:3:13;4580:19;4567:33;;4134:472;-1:-1:-1;;4134:472:13:o;4611:186::-;4670:6;4723:2;4711:9;4702:7;4698:23;4694:32;4691:52;;;4739:1;4736;4729:12;4691:52;4762:29;4781:9;4762:29;:::i;4802:248::-;4870:6;4878;4931:2;4919:9;4910:7;4906:23;4902:32;4899:52;;;4947:1;4944;4937:12;4899:52;-1:-1:-1;;4970:23:13;;;5040:2;5025:18;;;5012:32;;-1:-1:-1;4802:248:13:o;5689:254::-;5757:6;5765;5818:2;5806:9;5797:7;5793:23;5789:32;5786:52;;;5834:1;5831;5824:12;5786:52;5857:29;5876:9;5857:29;:::i;:::-;5847:39;5933:2;5918:18;;;;5905:32;;-1:-1:-1;;;5689:254:13:o;5948:375::-;-1:-1:-1;;;;;6206:15:13;;;6188:34;;6258:15;;;;6253:2;6238:18;;6231:43;6305:2;6290:18;;6283:34;;;;6138:2;6123:18;;5948:375::o;6328:344::-;6530:2;6512:21;;;6569:2;6549:18;;;6542:30;-1:-1:-1;;;6603:2:13;6588:18;;6581:50;6663:2;6648:18;;6328:344::o;6677:127::-;6738:10;6733:3;6729:20;6726:1;6719:31;6769:4;6766:1;6759:15;6793:4;6790:1;6783:15;6809:128;6849:3;6880:1;6876:6;6873:1;6870:13;6867:39;;;6886:18;;:::i;:::-;-1:-1:-1;6922:9:13;;6809:128::o;7345:125::-;7385:4;7413:1;7410;7407:8;7404:34;;;7418:18;;:::i;:::-;-1:-1:-1;7455:9:13;;7345:125::o;7891:184::-;7961:6;8014:2;8002:9;7993:7;7989:23;7985:32;7982:52;;;8030:1;8027;8020:12;7982:52;-1:-1:-1;8053:16:13;;7891:184;-1:-1:-1;7891:184:13:o;8835:277::-;8902:6;8955:2;8943:9;8934:7;8930:23;8926:32;8923:52;;;8971:1;8968;8961:12;8923:52;9003:9;8997:16;9056:5;9049:13;9042:21;9035:5;9032:32;9022:60;;9078:1;9075;9068:12;9536:258;9608:1;9618:113;9632:6;9629:1;9626:13;9618:113;;;9708:11;;;9702:18;9689:11;;;9682:39;9654:2;9647:10;9618:113;;;9749:6;9746:1;9743:13;9740:48;;;-1:-1:-1;;9784:1:13;9766:16;;9759:27;9536:258::o;9799:786::-;10210:25;10205:3;10198:38;10180:3;10265:6;10259:13;10281:62;10336:6;10331:2;10326:3;10322:12;10315:4;10307:6;10303:17;10281:62;:::i;:::-;-1:-1:-1;;;10402:2:13;10362:16;;;10394:11;;;10387:40;10452:13;;10474:63;10452:13;10523:2;10515:11;;10508:4;10496:17;;10474:63;:::i;:::-;10557:17;10576:2;10553:26;;9799:786;-1:-1:-1;;;;9799:786:13:o;10590:383::-;10739:2;10728:9;10721:21;10702:4;10771:6;10765:13;10814:6;10809:2;10798:9;10794:18;10787:34;10830:66;10889:6;10884:2;10873:9;10869:18;10864:2;10856:6;10852:15;10830:66;:::i;:::-;10957:2;10936:15;-1:-1:-1;;10932:29:13;10917:45;;;;10964:2;10913:54;;10590:383;-1:-1:-1;;10590:383:13:o;10978:168::-;11018:7;11084:1;11080;11076:6;11072:14;11069:1;11066:21;11061:1;11054:9;11047:17;11043:45;11040:71;;;11091:18;;:::i;:::-;-1:-1:-1;11131:9:13;;10978:168::o;11151:127::-;11212:10;11207:3;11203:20;11200:1;11193:31;11243:4;11240:1;11233:15;11267:4;11264:1;11257:15;11283:136;11322:3;11350:5;11340:39;;11359:18;;:::i;:::-;-1:-1:-1;;;11395:18:13;;11283:136::o;11785:127::-;11846:10;11841:3;11837:20;11834:1;11827:31;11877:4;11874:1;11867:15;11901:4;11898:1;11891:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "collateralizedPurchase(address,address,address,uint256,uint256)": {
        "details": "the calling contract/function must approve the transfer to this contract address",
        "notice": "function transfers ownership from buyer to this contract to be held as collateralbuyer will automaticall receive thier NFT back once they repay the item value",
        "params": {
          "_itemValue": "must be in wei (10**18)"
        }
      },
      "exchangeNFT(address,address,address,uint256)": {
        "details": "the calling contract/function must approve the transfer to the seller's address",
        "notice": "function transfers ownership from buyer to seller"
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "handleDefault(address,address,uint256)": {
        "notice": "upon defualt, the store gets th NFT, and the user no longer owes money."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "repay(address,address,uint256,uint256)": {
        "details": "the calling contract/function must approve the transfer of ERC20 to the contract address",
        "notice": "a user pays back a debt in WETH only and original buyer recieves ERC721",
        "params": {
          "_amount": "must be in wei (10**18)"
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "sellerCollateralNFT(address,address,uint256)": {
        "notice": "returns address of seller who has an NFT as collateral"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "totalValueBorrowed(address)": {
        "notice": "returns the total eth quantity owed by a user"
      },
      "valueBorrowedOneNFT(address,address,uint256)": {
        "notice": "returns value owed on a specific NFT used as collateral"
      }
    },
    "version": 1
  },
  "offset": [
    310,
    7881
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xF2DF757B EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xF61556C8 EQ PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x946CCFC0 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x9FED0300 EQ PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x3A1657B4 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x49002749 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x617A19C0 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x7065CB48 EQ PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xB1EEDB8 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x1E315FD6 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x152A JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x26A PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 PUSH1 0x2 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x165D JUMP JUMPDEST PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x348 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP3 MSTORE SWAP4 DUP6 MSTORE DUP4 DUP6 KECCAK256 SWAP1 MSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x26A PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1566 JUMP JUMPDEST PUSH2 0xDB8 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x3FC CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x167F JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x462 JUMPI POP PUSH2 0x462 DUP3 PUSH2 0xF28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x498 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4E8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP8 AND DUP5 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 ADD SLOAD PUSH2 0x54B SWAP1 PUSH3 0x278D00 PUSH2 0x1711 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579657220686173206D696E756D756D203330206461797320746F20726570 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6179 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP3 PUSH4 0x42842E0E SWAP3 PUSH2 0x603 SWAP3 ADDRESS SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x631 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP7 DUP4 MSTORE DUP2 MSTORE DUP4 DUP3 KECCAK256 SLOAD SWAP3 DUP3 MSTORE PUSH1 0x2 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 POP SWAP2 SWAP1 PUSH2 0x680 SWAP1 DUP5 SWAP1 PUSH2 0x1729 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP7 AND DUP4 MSTORE SWAP4 DUP5 MSTORE DUP5 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP2 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x6FC DUP2 CALLER PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x706 DUP4 DUP4 PUSH2 0xFC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x504 JUMP JUMPDEST PUSH2 0x785 DUP3 DUP3 PUSH2 0xFE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST LT ISZERO PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F756768205745544820746F2072657061790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420706179206261636B206D6F7265207468616E20796F75206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x504 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x941 SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x960 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x1759 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9C4 SWAP1 DUP5 SWAP1 PUSH2 0x1729 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9F1 SWAP1 DUP5 SWAP1 PUSH2 0x1729 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0xB10 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP3 PUSH4 0x42842E0E SWAP3 PUSH2 0xA87 SWAP3 ADDRESS SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP10 AND DUP5 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 MSTORE SWAP2 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE SWAP1 SWAP2 ADD SSTORE POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP6 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0xB7D SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP10 DUP8 AND DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP9 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP5 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP6 DUP7 AND OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE TIMESTAMP SWAP2 ADD SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP6 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 AND SWAP1 DUP6 AND EQ PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920757365206E667420617320636F6C6C61746572616C20666F72206F PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6E652073746F726520617420612074696D65 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xCE8 SWAP1 DUP5 SWAP1 PUSH2 0x1711 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD15 SWAP1 DUP5 SWAP1 PUSH2 0x1711 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD39 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xD8F JUMP JUMPDEST PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0xD6D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x1005 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xD88 SWAP1 DUP4 PUSH2 0x100F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x462 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDEB DUP2 CALLER PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x706 DUP4 DUP4 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0xE0D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18B2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xD8F JUMP JUMPDEST PUSH2 0xE29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0xE59 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE99 DUP3 DUP3 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x785 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xECF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD88 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x462 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x462 JUMP JUMPDEST PUSH2 0xF67 DUP3 DUP3 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x785 JUMPI PUSH2 0xF7F DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0xF8A DUP4 PUSH1 0x20 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF9B SWAP3 SWAP2 SWAP1 PUSH2 0x17A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x504 SWAP2 PUSH1 0x4 ADD PUSH2 0x181C JUMP JUMPDEST PUSH2 0xFCB DUP3 DUP3 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x706 SWAP1 DUP3 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xFED DUP3 DUP3 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x706 SWAP1 DUP3 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x785 DUP3 DUP3 PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD88 DUP4 DUP4 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x462 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x106C JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x462 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1083 DUP4 PUSH1 0x2 PUSH2 0x184F JUMP JUMPDEST PUSH2 0x108E SWAP1 PUSH1 0x2 PUSH2 0x1711 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A6 JUMPI PUSH2 0x10A6 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10EB JUMPI PUSH2 0x10EB PUSH2 0x186E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x111A JUMPI PUSH2 0x111A PUSH2 0x186E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x113E DUP5 PUSH1 0x2 PUSH2 0x184F JUMP JUMPDEST PUSH2 0x1149 SWAP1 PUSH1 0x1 PUSH2 0x1711 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11C1 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x117D JUMPI PUSH2 0x117D PUSH2 0x186E JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1193 JUMPI PUSH2 0x1193 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x11BA DUP2 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP PUSH2 0x114C JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x504 JUMP JUMPDEST PUSH2 0x121A DUP3 DUP3 PUSH2 0xD8F JUMP JUMPDEST ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD88 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x186E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x139D JUMPI PUSH1 0x0 PUSH2 0x12D8 PUSH1 0x1 DUP4 PUSH2 0x1729 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x12EC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1729 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1351 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x130C JUMPI PUSH2 0x130C PUSH2 0x186E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x132F JUMPI PUSH2 0x132F PUSH2 0x186E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1362 JUMPI PUSH2 0x1362 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x462 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x462 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140C DUP6 PUSH2 0x13D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x141A PUSH1 0x20 DUP7 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP PUSH2 0x1428 PUSH1 0x40 DUP7 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x146D DUP6 PUSH2 0x13D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x147B PUSH1 0x20 DUP7 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x149F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x14C5 JUMPI PUSH2 0x14C5 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x14ED JUMPI PUSH2 0x14ED PUSH2 0x1438 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x153F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1548 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP PUSH2 0x1556 PUSH1 0x20 DUP6 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x15A2 PUSH1 0x20 DUP5 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15CA DUP6 PUSH2 0x13D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D8 PUSH1 0x20 DUP7 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160E DUP7 PUSH2 0x13D1 JUMP JUMPDEST SWAP5 POP PUSH2 0x161C PUSH1 0x20 DUP8 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x162A PUSH1 0x40 DUP8 ADD PUSH2 0x13D1 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD88 DUP3 PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169B DUP4 PUSH2 0x13D1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x6D75737420686176652061646D696E20726F6C65 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1724 JUMPI PUSH2 0x1724 PUSH2 0x16FB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x173B JUMPI PUSH2 0x173B PUSH2 0x16FB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1796 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x177E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB10 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x17DF DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x177B JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1810 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x177B JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x183B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x177B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1869 JUMPI PUSH2 0x1869 PUSH2 0x16FB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1893 JUMPI PUSH2 0x1893 PUSH2 0x16FB JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220A326ADE67550B1C2C0856DDC MUL 0x26 0xCD 0xD2 LOG0 0x2A DUP3 0xCA SWAP7 MULMOD MLOAD SWAP8 0xFC DUP4 0xEF PUSH14 0xCDFA16AB64736F6C634300080B00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "6": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "POP",
      "path": "12"
    },
    "18": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "LT",
      "path": "12"
    },
    "22": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x142"
    },
    "25": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "SHR",
      "path": "12"
    },
    "32": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "33": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x75B238FC"
    },
    "38": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "GT",
      "path": "12"
    },
    "39": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "43": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "44": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA217FDDF"
    },
    "49": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "GT",
      "path": "12"
    },
    "50": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "54": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "55": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA217FDDF"
    },
    "60": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "61": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B8"
    },
    "64": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "66": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xAD5C4648"
    },
    "71": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "72": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C0"
    },
    "75": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "76": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "77": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCA15C873"
    },
    "82": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "83": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3DB"
    },
    "86": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "87": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "88": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD547741F"
    },
    "93": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "94": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3EE"
    },
    "97": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "98": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "99": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2DF757B"
    },
    "104": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "105": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x401"
    },
    "108": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "109": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF61556C8"
    },
    "115": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "116": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x42A"
    },
    "119": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "120": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "123": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "REVERT",
      "path": "12"
    },
    "124": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "125": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "126": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x75B238FC"
    },
    "131": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "132": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BB"
    },
    "135": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "136": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "137": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9010D07C"
    },
    "142": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "143": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2D0"
    },
    "146": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "147": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "148": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x91D14854"
    },
    "153": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "154": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "157": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "158": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "159": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x946CCFC0"
    },
    "164": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "165": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F6"
    },
    "168": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "169": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "170": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9FED0300"
    },
    "175": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "176": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "179": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "180": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "183": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "REVERT",
      "path": "12"
    },
    "184": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "185": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "186": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F2FF15D"
    },
    "191": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "GT",
      "path": "12"
    },
    "192": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10A"
    },
    "195": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "196": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "197": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F2FF15D"
    },
    "202": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "203": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FF"
    },
    "206": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "207": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "208": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x36568ABE"
    },
    "213": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "214": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x212"
    },
    "217": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "218": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "219": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3A1657B4"
    },
    "224": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "225": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x225"
    },
    "228": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "229": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "230": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x49002749"
    },
    "235": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "236": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x282"
    },
    "239": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "240": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "241": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x617A19C0"
    },
    "246": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "247": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x295"
    },
    "250": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "251": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "252": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x7065CB48"
    },
    "257": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "258": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A8"
    },
    "261": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "262": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "264": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "265": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "REVERT",
      "path": "12"
    },
    "266": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "267": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "268": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1FFC9A7"
    },
    "273": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "274": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x147"
    },
    "277": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "278": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "279": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB1EEDB8"
    },
    "284": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "285": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16F"
    },
    "288": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "289": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "290": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x150B7A02"
    },
    "295": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "296": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x184"
    },
    "299": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "300": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "301": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1E315FD6"
    },
    "306": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "307": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BB"
    },
    "310": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "311": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "312": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x248A9CA3"
    },
    "317": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "EQ",
      "path": "12"
    },
    "318": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CE"
    },
    "321": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "322": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "323": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "325": {
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "326": {
      "first_revert": true,
      "fn": null,
      "offset": [
        310,
        7881
      ],
      "op": "REVERT",
      "path": "12"
    },
    "327": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "328": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "331": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x155"
    },
    "334": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "335": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "337": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13A7"
    },
    "340": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "i",
      "offset": [
        634,
        846
      ],
      "op": "JUMP",
      "path": "1"
    },
    "341": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "342": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43D"
    },
    "345": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "i",
      "offset": [
        634,
        846
      ],
      "op": "JUMP",
      "path": "1"
    },
    "346": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "347": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "349": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "350": {
      "op": "SWAP1"
    },
    "351": {
      "op": "ISZERO"
    },
    "352": {
      "op": "ISZERO"
    },
    "353": {
      "op": "DUP2"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "359": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "361": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "362": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "DUP1",
      "path": "1"
    },
    "363": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "364": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "SUB",
      "path": "1"
    },
    "365": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "366": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "RETURN",
      "path": "1"
    },
    "367": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "368": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x182"
    },
    "371": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17D"
    },
    "374": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "375": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "377": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13ED"
    },
    "380": {
      "fn": "Barter.exchangeNFT",
      "jump": "i",
      "offset": [
        1469,
        1878
      ],
      "op": "JUMP",
      "path": "12"
    },
    "381": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "382": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x468"
    },
    "385": {
      "fn": "Barter.exchangeNFT",
      "jump": "i",
      "offset": [
        1469,
        1878
      ],
      "op": "JUMP",
      "path": "12"
    },
    "386": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "387": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "STOP",
      "path": "12"
    },
    "388": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "389": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A2"
    },
    "392": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x192"
    },
    "395": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "396": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "398": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x144E"
    },
    "401": {
      "fn": "Barter.onERC721Received",
      "jump": "i",
      "offset": [
        6317,
        6517
      ],
      "op": "JUMP",
      "path": "12"
    },
    "402": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "403": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "408": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "412": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "413": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "POP",
      "path": "12"
    },
    "414": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "POP",
      "path": "12"
    },
    "415": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "POP",
      "path": "12"
    },
    "416": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "POP",
      "path": "12"
    },
    "417": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "JUMP",
      "path": "12"
    },
    "418": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "419": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "421": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "428": {
      "op": "SHL"
    },
    "429": {
      "op": "SUB"
    },
    "430": {
      "op": "NOT"
    },
    "431": {
      "op": "SWAP1"
    },
    "432": {
      "op": "SWAP2"
    },
    "433": {
      "op": "AND"
    },
    "434": {
      "op": "DUP2"
    },
    "435": {
      "op": "MSTORE"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "438": {
      "op": "ADD"
    },
    "439": {
      "fn": "Barter.onERC721Received",
      "offset": [
        6317,
        6517
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x166"
    },
    "442": {
      "op": "JUMP"
    },
    "443": {
      "fn": "Barter.handleDefault",
      "offset": [
        5453,
        6311
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "444": {
      "fn": "Barter.handleDefault",
      "offset": [
        5453,
        6311
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x182"
    },
    "447": {
      "fn": "Barter.handleDefault",
      "offset": [
        5453,
        6311
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C9"
    },
    "450": {
      "fn": "Barter.handleDefault",
      "offset": [
        5453,
        6311
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "451": {
      "fn": "Barter.handleDefault",
      "offset": [
        5453,
        6311
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "453": {
      "fn": "Barter.handleDefault",
      "offset": [
        5453,
        6311
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x152A"
    },
    "456": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        5453,
        6311
      ],
      "op": "JUMP",
      "path": "12"
    },
    "457": {
      "fn": "Barter.handleDefault",
      "offset": [
        5453,
        6311
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "458": {
      "fn": "Barter.handleDefault",
      "offset": [
        5453,
        6311
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D0"
    },
    "461": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        5453,
        6311
      ],
      "op": "JUMP",
      "path": "12"
    },
    "462": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "463": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "466": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "469": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "470": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "472": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1566"
    },
    "475": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4008,
        4137
      ],
      "op": "JUMP",
      "path": "0"
    },
    "476": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "477": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4082,
        4089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "479": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 0
    },
    "480": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "481": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "482": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "484": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "485": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "486": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "487": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "489": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "490": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "491": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "493": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "ADD",
      "path": "0"
    },
    "494": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "495": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "496": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "JUMP",
      "path": "0"
    },
    "497": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "500": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "501": {
      "op": "SWAP1"
    },
    "502": {
      "op": "DUP2"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4008,
        4137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166"
    },
    "510": {
      "op": "JUMP"
    },
    "511": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "515": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20D"
    },
    "518": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "519": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "521": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157F"
    },
    "524": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4387,
        4532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "525": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "526": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E0"
    },
    "529": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4387,
        4532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "530": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "531": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "534": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "537": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "538": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "540": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157F"
    },
    "543": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5404,
        5618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "544": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "545": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70B"
    },
    "548": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5404,
        5618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "549": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "550": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "553": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x233"
    },
    "556": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "557": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "559": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x152A"
    },
    "562": {
      "fn": "Barter.sellerCollateralNFT",
      "jump": "i",
      "offset": [
        7289,
        7502
      ],
      "op": "JUMP",
      "path": "12"
    },
    "563": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "570": {
      "op": "SHL"
    },
    "571": {
      "op": "SUB"
    },
    "572": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "SWAP3",
      "path": "12",
      "statement": 1
    },
    "573": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "DUP4",
      "path": "12"
    },
    "574": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "AND",
      "path": "12"
    },
    "575": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7422,
        7429
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "577": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "578": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "DUP2",
      "path": "12"
    },
    "579": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "580": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "582": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "584": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "585": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "DUP2",
      "path": "12"
    },
    "586": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "587": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "589": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "DUP1",
      "path": "12"
    },
    "590": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "DUP4",
      "path": "12"
    },
    "591": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7467
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "592": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "593": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "DUP7",
      "path": "12"
    },
    "594": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "AND",
      "path": "12"
    },
    "595": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "DUP4",
      "path": "12"
    },
    "596": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "597": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "598": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "DUP2",
      "path": "12"
    },
    "599": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "600": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "DUP4",
      "path": "12"
    },
    "601": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "DUP3",
      "path": "12"
    },
    "602": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7478
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "603": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7488
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "604": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7488
      ],
      "op": "DUP3",
      "path": "12"
    },
    "605": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7488
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "606": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7488
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "607": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7488
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "608": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7488
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "609": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7488
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "610": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7488
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "611": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7495
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "613": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7495
      ],
      "op": "ADD",
      "path": "12"
    },
    "614": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7495
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "615": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7495
      ],
      "op": "AND",
      "path": "12"
    },
    "616": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7448,
        7495
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "617": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "JUMP",
      "path": "12"
    },
    "618": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "619": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "621": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "628": {
      "op": "SHL"
    },
    "629": {
      "op": "SUB"
    },
    "630": {
      "op": "SWAP1"
    },
    "631": {
      "op": "SWAP2"
    },
    "632": {
      "op": "AND"
    },
    "633": {
      "op": "DUP2"
    },
    "634": {
      "op": "MSTORE"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "637": {
      "op": "ADD"
    },
    "638": {
      "fn": "Barter.sellerCollateralNFT",
      "offset": [
        7289,
        7502
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x166"
    },
    "641": {
      "op": "JUMP"
    },
    "642": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "643": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x182"
    },
    "646": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x290"
    },
    "649": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "650": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "652": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15AB"
    },
    "655": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4157,
        5360
      ],
      "op": "JUMP",
      "path": "12"
    },
    "656": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "657": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x789"
    },
    "660": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4157,
        5360
      ],
      "op": "JUMP",
      "path": "12"
    },
    "661": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2216,
        3917
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "662": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2216,
        3917
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x182"
    },
    "665": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2216,
        3917
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A3"
    },
    "668": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2216,
        3917
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "669": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2216,
        3917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "671": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2216,
        3917
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15ED"
    },
    "674": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        2216,
        3917
      ],
      "op": "JUMP",
      "path": "12"
    },
    "675": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2216,
        3917
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "676": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2216,
        3917
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB16"
    },
    "679": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        2216,
        3917
      ],
      "op": "JUMP",
      "path": "12"
    },
    "680": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "681": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x182"
    },
    "684": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B6"
    },
    "687": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "688": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "690": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1642"
    },
    "693": {
      "fn": "Barter.addOwner",
      "jump": "i",
      "offset": [
        7775,
        7879
      ],
      "op": "JUMP",
      "path": "12"
    },
    "694": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "695": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD21"
    },
    "698": {
      "fn": "Barter.addOwner",
      "jump": "i",
      "offset": [
        7775,
        7879
      ],
      "op": "JUMP",
      "path": "12"
    },
    "699": {
      "offset": [
        1008,
        1068
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "700": {
      "fn": "Barter.addOwner",
      "offset": [
        1008,
        1068
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "705": {
      "op": "DUP1"
    },
    "706": {
      "op": "MLOAD"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "709": {
      "op": "PUSH2",
      "value": "0x18B2"
    },
    "712": {
      "op": "DUP4"
    },
    "713": {
      "op": "CODECOPY"
    },
    "714": {
      "op": "DUP2"
    },
    "715": {
      "op": "MLOAD"
    },
    "716": {
      "op": "SWAP2"
    },
    "717": {
      "op": "MSTORE"
    },
    "718": {
      "offset": [
        1008,
        1068
      ],
      "op": "DUP2",
      "path": "12"
    },
    "719": {
      "fn": "Barter.addOwner",
      "offset": [
        1008,
        1068
      ],
      "op": "JUMP",
      "path": "12"
    },
    "720": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "721": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26A"
    },
    "724": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DE"
    },
    "727": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "728": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "730": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x165D"
    },
    "733": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "i",
      "offset": [
        1431,
        1582
      ],
      "op": "JUMP",
      "path": "1"
    },
    "734": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "735": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD70"
    },
    "738": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "i",
      "offset": [
        1431,
        1582
      ],
      "op": "JUMP",
      "path": "1"
    },
    "739": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2909,
        3054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2909,
        3054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "743": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2909,
        3054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F1"
    },
    "746": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2909,
        3054
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "747": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2909,
        3054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "749": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2909,
        3054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157F"
    },
    "752": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2909,
        3054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "753": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2909,
        3054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "754": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2909,
        3054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8F"
    },
    "757": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2909,
        3054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "758": {
      "offset": [
        788,
        885
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "759": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x348"
    },
    "762": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x304"
    },
    "765": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "766": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "768": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x152A"
    },
    "771": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        788,
        885
      ],
      "op": "JUMP",
      "path": "12"
    },
    "772": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "773": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "775": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "777": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP2",
      "path": "12"
    },
    "778": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP2",
      "path": "12"
    },
    "779": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "780": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "782": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "783": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP6",
      "path": "12"
    },
    "784": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "785": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "787": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP1",
      "path": "12"
    },
    "788": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP7",
      "path": "12"
    },
    "789": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "790": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP3",
      "path": "12"
    },
    "791": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "792": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "793": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP6",
      "path": "12"
    },
    "794": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "795": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP4",
      "path": "12"
    },
    "796": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP6",
      "path": "12"
    },
    "797": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "798": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "799": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "800": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "801": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP4",
      "path": "12"
    },
    "802": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "803": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "804": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "805": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP1",
      "path": "12"
    },
    "806": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "807": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "809": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP3",
      "path": "12"
    },
    "810": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "ADD",
      "path": "12"
    },
    "811": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "812": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "814": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP4",
      "path": "12"
    },
    "815": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "ADD",
      "path": "12"
    },
    "816": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "817": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "818": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "819": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "820": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "ADD",
      "path": "12"
    },
    "821": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "822": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "823": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "830": {
      "op": "SHL"
    },
    "831": {
      "op": "SUB"
    },
    "832": {
      "offset": [
        788,
        885
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "833": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP2",
      "path": "12"
    },
    "834": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "AND",
      "path": "12"
    },
    "835": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "836": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "AND",
      "path": "12"
    },
    "837": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "838": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "DUP5",
      "path": "12"
    },
    "839": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "JUMP",
      "path": "12"
    },
    "840": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "841": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "843": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "844": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x166"
    },
    "847": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "848": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "849": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "850": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "851": {
      "fn": "AccessControl.hasRole",
      "offset": [
        788,
        885
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "852": {
      "op": "SWAP4"
    },
    "853": {
      "op": "DUP5"
    },
    "854": {
      "op": "MSTORE"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "861": {
      "op": "SHL"
    },
    "862": {
      "op": "SUB"
    },
    "863": {
      "op": "SWAP3"
    },
    "864": {
      "op": "DUP4"
    },
    "865": {
      "op": "AND"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "868": {
      "op": "DUP6"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "op": "MSTORE"
    },
    "871": {
      "op": "SWAP2"
    },
    "872": {
      "op": "AND"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "875": {
      "op": "DUP4"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "op": "MSTORE"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "880": {
      "op": "DUP3"
    },
    "881": {
      "op": "ADD"
    },
    "882": {
      "op": "MSTORE"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "885": {
      "op": "ADD"
    },
    "886": {
      "op": "SWAP1"
    },
    "887": {
      "op": "JUMP"
    },
    "888": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6996,
        7213
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "889": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6996,
        7213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F1"
    },
    "892": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6996,
        7213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x386"
    },
    "895": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6996,
        7213
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "896": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6996,
        7213
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "898": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6996,
        7213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x152A"
    },
    "901": {
      "fn": "Barter.valueBorrowedOneNFT",
      "jump": "i",
      "offset": [
        6996,
        7213
      ],
      "op": "JUMP",
      "path": "12"
    },
    "902": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6996,
        7213
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "op": "SUB"
    },
    "911": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "SWAP3",
      "path": "12",
      "statement": 2
    },
    "912": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "DUP4",
      "path": "12"
    },
    "913": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "AND",
      "path": "12"
    },
    "914": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7129,
        7136
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "916": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "917": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "DUP2",
      "path": "12"
    },
    "918": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "919": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7166
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "921": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "923": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "924": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "DUP2",
      "path": "12"
    },
    "925": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "926": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "928": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "DUP1",
      "path": "12"
    },
    "929": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "DUP4",
      "path": "12"
    },
    "930": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7174
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "931": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "932": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "933": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "934": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "AND",
      "path": "12"
    },
    "935": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "DUP3",
      "path": "12"
    },
    "936": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "937": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "938": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "DUP4",
      "path": "12"
    },
    "939": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "940": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "DUP4",
      "path": "12"
    },
    "941": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "DUP2",
      "path": "12"
    },
    "942": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7185
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "943": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7195
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "944": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7195
      ],
      "op": "DUP2",
      "path": "12"
    },
    "945": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7195
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "946": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7195
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "947": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7195
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "948": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7195
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "949": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7206
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "950": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        7155,
        7206
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "951": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        6996,
        7213
      ],
      "op": "JUMP",
      "path": "12"
    },
    "952": {
      "offset": [
        2027,
        2076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "953": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        2027,
        2076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "956": {
      "offset": [
        2072,
        2076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "958": {
      "offset": [
        2027,
        2076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "959": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        2027,
        2076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "960": {
      "offset": [
        928,
        1001
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "961": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        928,
        1001
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "964": {
      "offset": [
        959,
        1001
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xC778417E063141139FCE010982780140AA0CD5AB"
    },
    "985": {
      "offset": [
        928,
        1001
      ],
      "op": "DUP2",
      "path": "12"
    },
    "986": {
      "fn": "Barter.valueBorrowedOneNFT",
      "offset": [
        928,
        1001
      ],
      "op": "JUMP",
      "path": "12"
    },
    "987": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1750,
        1890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "988": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1750,
        1890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F1"
    },
    "991": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1750,
        1890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E9"
    },
    "994": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1750,
        1890
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "995": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1750,
        1890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "997": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1750,
        1890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1566"
    },
    "1000": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1750,
        1890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1001": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1750,
        1890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1002": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1750,
        1890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB8"
    },
    "1005": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1750,
        1890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1006": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4766,
        4913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1007": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4766,
        4913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "1010": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4766,
        4913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC"
    },
    "1013": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4766,
        4913
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1014": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4766,
        4913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1016": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4766,
        4913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157F"
    },
    "1019": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4766,
        4913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1020": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4766,
        4913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1021": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4766,
        4913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDCF"
    },
    "1024": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4766,
        4913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1025": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6797,
        6919
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1026": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6797,
        6919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F1"
    },
    "1029": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6797,
        6919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x40F"
    },
    "1032": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6797,
        6919
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1033": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6797,
        6919
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1035": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6797,
        6919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1642"
    },
    "1038": {
      "fn": "Barter.totalValueBorrowed",
      "jump": "i",
      "offset": [
        6797,
        6919
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1039": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6797,
        6919
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "AND",
      "path": "12",
      "statement": 3
    },
    "1049": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6862,
        6869
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1051": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1052": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1053": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1054": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1056": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1058": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1059": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1061": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1062": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1063": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1064": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6888,
        6912
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1065": {
      "fn": "Barter.totalValueBorrowed",
      "offset": [
        6797,
        6919
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1066": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1067": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x182"
    },
    "1070": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x438"
    },
    "1073": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1074": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1076": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x167F"
    },
    "1079": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        7508,
        7740
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1080": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1081": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDF5"
    },
    "1084": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        7508,
        7740
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1085": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1086": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        719,
        723
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "SUB"
    },
    "1096": {
      "op": "NOT"
    },
    "1097": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        742,
        799
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 4
    },
    "1098": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        742,
        799
      ],
      "op": "AND",
      "path": "1"
    },
    "1099": {
      "op": "PUSH4",
      "value": "0x5A05180F"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1106": {
      "op": "SHL"
    },
    "1107": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        742,
        799
      ],
      "op": "EQ",
      "path": "1"
    },
    "1108": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        742,
        799
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1109": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        742,
        839
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x462"
    },
    "1112": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        742,
        839
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1113": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        742,
        839
      ],
      "op": "POP",
      "path": "1"
    },
    "1114": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        803,
        839
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x462"
    },
    "1117": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        827,
        838
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1118": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        803,
        826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF28"
    },
    "1121": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "i",
      "offset": [
        803,
        839
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1122": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        803,
        839
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1123": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        735,
        839
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1124": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        634,
        846
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "op": "POP"
    },
    "1127": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "o",
      "offset": [
        634,
        846
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1128": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1129": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 5,
      "value": "0x40"
    },
    "1131": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1132": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1141": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1148": {
      "op": "SHL"
    },
    "1149": {
      "op": "SUB"
    },
    "1150": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1844
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1151": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1844
      ],
      "op": "AND",
      "path": "12"
    },
    "1152": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1844
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1153": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1844
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x42842E0E"
    },
    "1158": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1844
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1159": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x498"
    },
    "1162": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1163": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1164": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1845,
        1851
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1165": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1853,
        1860
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1166": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1853,
        1860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1167": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1862,
        1870
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1168": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1862,
        1870
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1169": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1171": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "ADD",
      "path": "12"
    },
    "1172": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A9"
    },
    "1175": {
      "fn": "Barter.exchangeNFT",
      "jump": "i",
      "offset": [
        1809,
        1871
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1176": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1177": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1179": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1181": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1182": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1183": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1184": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "SUB",
      "path": "12"
    },
    "1185": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1186": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1188": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1189": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1190": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1191": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1192": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1193": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1194": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B2"
    },
    "1197": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1198": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1200": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1201": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1202": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1203": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "POP",
      "path": "12"
    },
    "1204": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "GAS",
      "path": "12"
    },
    "1205": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "CALL",
      "path": "12"
    },
    "1206": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1207": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1208": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1209": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C6"
    },
    "1212": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1213": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1214": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1216": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1217": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1218": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1219": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1221": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1222": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1223": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "POP",
      "path": "12"
    },
    "1224": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "POP",
      "path": "12"
    },
    "1225": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "POP",
      "path": "12"
    },
    "1226": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1809,
        1871
      ],
      "op": "POP",
      "path": "12"
    },
    "1227": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "POP",
      "path": "12"
    },
    "1228": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "POP",
      "path": "12"
    },
    "1229": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "POP",
      "path": "12"
    },
    "1230": {
      "fn": "Barter.exchangeNFT",
      "offset": [
        1469,
        1878
      ],
      "op": "POP",
      "path": "12"
    },
    "1231": {
      "fn": "Barter.exchangeNFT",
      "jump": "o",
      "offset": [
        1469,
        1878
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1232": {
      "fn": "Barter.handleDefault",
      "offset": [
        5453,
        6311
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1233": {
      "offset": [
        1232,
        1263
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4E8"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1238": {
      "op": "DUP1"
    },
    "1239": {
      "op": "MLOAD"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1242": {
      "op": "PUSH2",
      "value": "0x18B2"
    },
    "1245": {
      "op": "DUP4"
    },
    "1246": {
      "op": "CODECOPY"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "MLOAD"
    },
    "1249": {
      "op": "SWAP2"
    },
    "1250": {
      "op": "MSTORE"
    },
    "1251": {
      "offset": [
        1252,
        1262
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1252": {
      "offset": [
        1232,
        1239
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD8F"
    },
    "1255": {
      "jump": "i",
      "offset": [
        1232,
        1263
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1256": {
      "fn": "Barter.handleDefault",
      "offset": [
        1232,
        1263
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1257": {
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x50D"
    },
    "1260": {
      "offset": [
        1224,
        1288
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1261": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1263": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1270": {
      "op": "SHL"
    },
    "1271": {
      "offset": [
        1224,
        1288
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1272": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1273": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1275": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "ADD",
      "path": "12"
    },
    "1276": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x504"
    },
    "1279": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1280": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16CD"
    },
    "1283": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        1224,
        1288
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1284": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1285": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1287": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1288": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1289": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1290": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "SUB",
      "path": "12"
    },
    "1291": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1292": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "12"
    },
    "1293": {
      "fn": "Barter.handleDefault",
      "offset": [
        1224,
        1288
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "op": "SUB"
    },
    "1302": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 6
    },
    "1303": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1304": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "AND",
      "path": "12"
    },
    "1305": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1307": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1308": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1309": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1310": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5802
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1312": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1314": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1315": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1316": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1317": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1319": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1320": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1321": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5810
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1322": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1323": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1324": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "AND",
      "path": "12"
    },
    "1325": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1326": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1327": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1328": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1329": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1330": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1331": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1332": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5821
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1333": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5831
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1334": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5831
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1335": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5831
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1336": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5831
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1337": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5831
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1338": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5831
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1339": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5831
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1340": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5831
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1341": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5841
      ],
      "op": "ADD",
      "path": "12"
    },
    "1342": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5841
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1343": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5851
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x54B"
    },
    "1346": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5851
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1347": {
      "fn": "Barter.handleDefault",
      "offset": [
        5844,
        5851
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0x278D00"
    },
    "1351": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5851
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1711"
    },
    "1354": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        5791,
        5851
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1355": {
      "fn": "Barter.handleDefault",
      "offset": [
        5791,
        5851
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1356": {
      "fn": "Barter.handleDefault",
      "offset": [
        5756,
        5771
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "1357": {
      "branch": 46,
      "fn": "Barter.handleDefault",
      "offset": [
        5756,
        5852
      ],
      "op": "GT",
      "path": "12"
    },
    "1358": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5A4"
    },
    "1361": {
      "branch": 46,
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1362": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1364": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1371": {
      "op": "SHL"
    },
    "1372": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1373": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1376": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1378": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1379": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "ADD",
      "path": "12"
    },
    "1380": {
      "op": "MSTORE"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1385": {
      "op": "DUP3"
    },
    "1386": {
      "op": "ADD"
    },
    "1387": {
      "op": "MSTORE"
    },
    "1388": {
      "op": "PUSH32",
      "value": "0x427579657220686173206D696E756D756D203330206461797320746F20726570"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1423": {
      "op": "DUP3"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "MSTORE"
    },
    "1426": {
      "op": "PUSH2",
      "value": "0x6179"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1431": {
      "op": "SHL"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1434": {
      "op": "DUP3"
    },
    "1435": {
      "op": "ADD"
    },
    "1436": {
      "op": "MSTORE"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1439": {
      "op": "ADD"
    },
    "1440": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x504"
    },
    "1443": {
      "op": "JUMP"
    },
    "1444": {
      "fn": "Barter.handleDefault",
      "offset": [
        5735,
        5912
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1451": {
      "op": "SHL"
    },
    "1452": {
      "op": "SUB"
    },
    "1453": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 7
    },
    "1454": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1455": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "AND",
      "path": "12"
    },
    "1456": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1458": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1459": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1460": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1461": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6010
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1463": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1465": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1466": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1467": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1468": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1470": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1471": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1472": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6018
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1473": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        5958
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1474": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        5958
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1475": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        5958
      ],
      "op": "AND",
      "path": "12"
    },
    "1476": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6029
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1477": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6029
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1478": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6029
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1479": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6029
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1480": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6029
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1481": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6029
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1482": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6029
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1483": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6029
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1484": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6029
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1485": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1486": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1487": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1488": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1489": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1490": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1491": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1492": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1493": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1494": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6039
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1495": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6046
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1497": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6046
      ],
      "op": "ADD",
      "path": "12"
    },
    "1498": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6046
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1499": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1500": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1501": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1510": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1511": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        5958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1512": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        5958
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1513": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        5958
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x42842E0E"
    },
    "1518": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        5958
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1519": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x603"
    },
    "1522": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1523": {
      "fn": "Barter.handleDefault",
      "offset": [
        5980,
        5984
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "1524": {
      "fn": "Barter.handleDefault",
      "offset": [
        5980,
        5984
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1525": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6046
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1526": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6046
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1527": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6046
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1528": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6046
      ],
      "op": "AND",
      "path": "12"
    },
    "1529": {
      "fn": "Barter.handleDefault",
      "offset": [
        5999,
        6046
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1530": {
      "fn": "Barter.handleDefault",
      "offset": [
        6030,
        6038
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1531": {
      "fn": "Barter.handleDefault",
      "offset": [
        6030,
        6038
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1532": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1534": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "ADD",
      "path": "12"
    },
    "1535": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A9"
    },
    "1538": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        5923,
        6078
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1539": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1540": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1542": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1544": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1545": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1546": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1547": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "SUB",
      "path": "12"
    },
    "1548": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1549": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1551": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1552": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1553": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1554": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1555": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1556": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1557": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x61D"
    },
    "1560": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1561": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1563": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1564": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1565": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1566": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "POP",
      "path": "12"
    },
    "1567": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "GAS",
      "path": "12"
    },
    "1568": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "CALL",
      "path": "12"
    },
    "1569": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1570": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1571": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1572": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x631"
    },
    "1575": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1576": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1577": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1579": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1580": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1581": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1582": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1584": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1585": {
      "fn": "Barter.handleDefault",
      "offset": [
        5923,
        6078
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1586": {
      "op": "POP"
    },
    "1587": {
      "op": "POP"
    },
    "1588": {
      "op": "POP"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "op": "SUB"
    },
    "1597": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 8
    },
    "1598": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1599": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "AND",
      "path": "12"
    },
    "1600": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1602": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1603": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1604": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1605": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6164
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1607": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1609": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1610": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1611": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1612": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1614": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1615": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1616": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1617": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1618": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1619": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "AND",
      "path": "12"
    },
    "1620": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1621": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1622": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1623": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1624": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1625": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1626": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1627": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6183
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1628": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6193
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1629": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6193
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1630": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6193
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1631": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6193
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1632": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6193
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1633": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6193
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1634": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6193
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1635": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6193
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1636": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6217
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1637": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6149
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1638": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6149
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1639": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6149
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1640": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6141
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1642": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6149
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1643": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6149
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1644": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6149
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1645": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6149
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1646": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6149
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1647": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6217
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1648": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6217
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1649": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6217
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1650": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6217
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1651": {
      "op": "POP"
    },
    "1652": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6149
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1653": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1654": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6217
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x680"
    },
    "1657": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6217
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1658": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6217
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1659": {
      "fn": "Barter.handleDefault",
      "offset": [
        6153,
        6217
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1660": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6217
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1729"
    },
    "1663": {
      "fn": "Barter.handleDefault",
      "jump": "i",
      "offset": [
        6125,
        6217
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1664": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6217
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1665": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6217
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1666": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6217
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1667": {
      "fn": "Barter.handleDefault",
      "offset": [
        6125,
        6217
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1676": {
      "op": "SHL"
    },
    "1677": {
      "op": "SUB"
    },
    "1678": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "SWAP3",
      "path": "12",
      "statement": 9
    },
    "1679": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1680": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "AND",
      "path": "12"
    },
    "1681": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1683": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1684": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1685": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1686": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1688": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1690": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1691": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1692": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1693": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1695": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1696": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1697": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6283
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1698": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1699": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1700": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1701": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "AND",
      "path": "12"
    },
    "1702": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1703": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1704": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1705": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1706": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1707": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1708": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1709": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6294
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1710": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1711": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1712": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1713": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1714": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1715": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1716": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1717": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1718": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1719": {
      "fn": "Barter.handleDefault",
      "offset": [
        6264,
        6304
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1720": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1721": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1722": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1723": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1725": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1726": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "ADD",
      "path": "12"
    },
    "1727": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1728": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1735": {
      "op": "SHL"
    },
    "1736": {
      "op": "SUB"
    },
    "1737": {
      "op": "NOT"
    },
    "1738": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1739": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1740": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "AND",
      "path": "12"
    },
    "1741": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1742": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1743": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1744": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1746": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1747": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "ADD",
      "path": "12"
    },
    "1748": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1749": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1750": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1751": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1752": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "AND",
      "path": "12"
    },
    "1753": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1754": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1755": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1756": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1757": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "ADD",
      "path": "12"
    },
    "1758": {
      "fn": "Barter.handleDefault",
      "offset": [
        6257,
        6304
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1759": {
      "fn": "Barter.handleDefault",
      "jump": "o",
      "offset": [
        5453,
        6311
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1760": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1761": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4082,
        4089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1763": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1764": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1765": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1766": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1768": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1769": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1770": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1771": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1773": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1774": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1775": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1777": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "ADD",
      "path": "0"
    },
    "1778": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1779": {
      "offset": [
        2505,
        2535
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FC"
    },
    "1782": {
      "offset": [
        2516,
        2520
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1783": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 10
    },
    "1784": {
      "offset": [
        2505,
        2515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5D"
    },
    "1787": {
      "jump": "i",
      "offset": [
        2505,
        2535
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1788": {
      "fn": "Context._msgSender",
      "offset": [
        2505,
        2535
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1789": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4500,
        4525
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x706"
    },
    "1792": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4511,
        4515
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1793": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4517,
        4524
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1794": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4500,
        4510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC1"
    },
    "1797": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4500,
        4525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1798": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4500,
        4525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1799": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "POP",
      "path": "0"
    },
    "1800": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "POP",
      "path": "0"
    },
    "1801": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4387,
        4532
      ],
      "op": "POP",
      "path": "0"
    },
    "1802": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4387,
        4532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1803": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1810": {
      "op": "SHL"
    },
    "1811": {
      "op": "SUB"
    },
    "1812": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5499,
        5522
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1813": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5499,
        5522
      ],
      "op": "AND",
      "path": "0"
    },
    "1814": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1815": {
      "branch": 51,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5499,
        5522
      ],
      "op": "EQ",
      "path": "0"
    },
    "1816": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77B"
    },
    "1819": {
      "branch": 51,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1820": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1822": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1829": {
      "op": "SHL"
    },
    "1830": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1831": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1834": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1836": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1837": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "ADD",
      "path": "0"
    },
    "1838": {
      "op": "MSTORE"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1843": {
      "op": "DUP3"
    },
    "1844": {
      "op": "ADD"
    },
    "1845": {
      "op": "MSTORE"
    },
    "1846": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1881": {
      "op": "DUP3"
    },
    "1882": {
      "op": "ADD"
    },
    "1883": {
      "op": "MSTORE"
    },
    "1884": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1902": {
      "op": "SHL"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1910": {
      "op": "ADD"
    },
    "1911": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "1914": {
      "op": "JUMP"
    },
    "1915": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5491,
        5574
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1916": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5585,
        5611
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x785"
    },
    "1919": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5597,
        5601
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1920": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5603,
        5610
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1921": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5585,
        5596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE3"
    },
    "1924": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5585,
        5611
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1925": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5585,
        5611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1926": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "POP",
      "path": "0"
    },
    "1927": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5404,
        5618
      ],
      "op": "POP",
      "path": "0"
    },
    "1928": {
      "fn": "AccessControl.renounceRole",
      "jump": "o",
      "offset": [
        5404,
        5618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1929": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1930": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 14,
      "value": "0x40"
    },
    "1932": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1933": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1940": {
      "op": "SHL"
    },
    "1941": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1942": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1943": {
      "fn": "Barter.repay",
      "offset": [
        4382,
        4392
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1944": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1946": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1947": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "ADD",
      "path": "12"
    },
    "1948": {
      "op": "MSTORE"
    },
    "1949": {
      "fn": "Barter.repay",
      "offset": [
        4397,
        4404
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1950": {
      "fn": "Barter.repay",
      "offset": [
        4397,
        4404
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1951": {
      "offset": [
        959,
        1001
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xC778417E063141139FCE010982780140AA0CD5AB"
    },
    "1972": {
      "fn": "Barter.repay",
      "offset": [
        959,
        1001
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1973": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4381
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "1978": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4381
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1981": {
      "op": "ADD"
    },
    "1982": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1984": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1986": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1987": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1988": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1989": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "SUB",
      "path": "12"
    },
    "1990": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1991": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1992": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "GAS",
      "path": "12"
    },
    "1993": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "1994": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1995": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1996": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1997": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7DA"
    },
    "2000": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2001": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2002": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2004": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2005": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2006": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2007": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2009": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2010": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2011": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "POP",
      "path": "12"
    },
    "2012": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "POP",
      "path": "12"
    },
    "2013": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "POP",
      "path": "12"
    },
    "2014": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "POP",
      "path": "12"
    },
    "2015": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2017": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2018": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2019": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2021": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "NOT",
      "path": "12"
    },
    "2022": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2024": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2025": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "ADD",
      "path": "12"
    },
    "2026": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "AND",
      "path": "12"
    },
    "2027": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2028": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "ADD",
      "path": "12"
    },
    "2029": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2030": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2032": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2033": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "POP",
      "path": "12"
    },
    "2034": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2035": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "ADD",
      "path": "12"
    },
    "2036": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2037": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7FE"
    },
    "2040": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2041": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2042": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1740"
    },
    "2045": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4359,
        4393
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2046": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4393
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2047": {
      "fn": "Barter.repay",
      "offset": [
        4359,
        4404
      ],
      "op": "LT",
      "path": "12"
    },
    "2048": {
      "branch": 47,
      "fn": "Barter.repay",
      "offset": [
        4359,
        4404
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2049": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x84C"
    },
    "2052": {
      "branch": 47,
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2053": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2055": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2062": {
      "op": "SHL"
    },
    "2063": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2064": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2067": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2069": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2070": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "ADD",
      "path": "12"
    },
    "2071": {
      "op": "MSTORE"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2076": {
      "op": "DUP3"
    },
    "2077": {
      "op": "ADD"
    },
    "2078": {
      "op": "MSTORE"
    },
    "2079": {
      "op": "PUSH32",
      "value": "0x6E6F7420656E6F756768205745544820746F2072657061790000000000000000"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2114": {
      "op": "DUP3"
    },
    "2115": {
      "op": "ADD"
    },
    "2116": {
      "op": "MSTORE"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2119": {
      "op": "ADD"
    },
    "2120": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x504"
    },
    "2123": {
      "op": "JUMP"
    },
    "2124": {
      "fn": "Barter.repay",
      "offset": [
        4338,
        4454
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2131": {
      "op": "SHL"
    },
    "2132": {
      "op": "SUB"
    },
    "2133": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 15
    },
    "2134": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2135": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "AND",
      "path": "12"
    },
    "2136": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2138": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2139": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2140": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2141": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4496
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2143": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2145": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2146": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2147": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2148": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2150": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2151": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2152": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4504
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2153": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2154": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2155": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "AND",
      "path": "12"
    },
    "2156": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2157": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2158": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2159": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2160": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2161": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2162": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2163": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4515
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2164": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4525
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2165": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4525
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2166": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4525
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2167": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4525
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2168": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4525
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2169": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4525
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2170": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4536
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2171": {
      "fn": "Barter.repay",
      "offset": [
        4485,
        4547
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2172": {
      "op": "GT"
    },
    "2173": {
      "branch": 48,
      "fn": "Barter.repay",
      "offset": [
        4485,
        4547
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2174": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8D3"
    },
    "2177": {
      "branch": 48,
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2178": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2180": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2187": {
      "op": "SHL"
    },
    "2188": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2189": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2192": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2194": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2195": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "ADD",
      "path": "12"
    },
    "2196": {
      "op": "MSTORE"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2201": {
      "op": "DUP3"
    },
    "2202": {
      "op": "ADD"
    },
    "2203": {
      "op": "MSTORE"
    },
    "2204": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420706179206261636B206D6F7265207468616E20796F75206F77"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2239": {
      "op": "DUP3"
    },
    "2240": {
      "op": "ADD"
    },
    "2241": {
      "op": "MSTORE"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2246": {
      "op": "SHL"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2249": {
      "op": "DUP3"
    },
    "2250": {
      "op": "ADD"
    },
    "2251": {
      "op": "MSTORE"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2254": {
      "op": "ADD"
    },
    "2255": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x504"
    },
    "2258": {
      "op": "JUMP"
    },
    "2259": {
      "fn": "Barter.repay",
      "offset": [
        4464,
        4606
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2260": {
      "fn": "Barter.repay",
      "offset": [
        4656,
        4666
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 16
    },
    "2261": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2263": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2264": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2265": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2266": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4692
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2268": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2270": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2271": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2272": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2273": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2275": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2276": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2277": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4704
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2284": {
      "op": "SHL"
    },
    "2285": {
      "op": "SUB"
    },
    "2286": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "DUP9",
      "path": "12"
    },
    "2287": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2288": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "AND",
      "path": "12"
    },
    "2289": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2290": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2291": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2292": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2293": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2294": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2295": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2296": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4715
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2297": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2298": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2299": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2300": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2301": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2302": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2303": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2304": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2305": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2306": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4725
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2307": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4732
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2309": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4732
      ],
      "op": "ADD",
      "path": "12"
    },
    "2310": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4732
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2311": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2312": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2313": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2322": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2323": {
      "offset": [
        959,
        1001
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xC778417E063141139FCE010982780140AA0CD5AB"
    },
    "2344": {
      "fn": "Barter.repay",
      "offset": [
        959,
        1001
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2345": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4642
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x23B872DD"
    },
    "2350": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4642
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2351": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x941"
    },
    "2354": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2355": {
      "fn": "Barter.repay",
      "offset": [
        4656,
        4666
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2356": {
      "fn": "Barter.repay",
      "offset": [
        4656,
        4666
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2357": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4732
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2358": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4732
      ],
      "op": "AND",
      "path": "12"
    },
    "2359": {
      "fn": "Barter.repay",
      "offset": [
        4681,
        4732
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2360": {
      "fn": "Barter.repay",
      "offset": [
        4747,
        4754
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2361": {
      "fn": "Barter.repay",
      "offset": [
        4747,
        4754
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2362": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2364": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "ADD",
      "path": "12"
    },
    "2365": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A9"
    },
    "2368": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4617,
        4764
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2369": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2370": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2372": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2374": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2375": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2376": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2377": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "SUB",
      "path": "12"
    },
    "2378": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2379": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2381": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2382": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "GAS",
      "path": "12"
    },
    "2383": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "CALL",
      "path": "12"
    },
    "2384": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2385": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2386": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2387": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x960"
    },
    "2390": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2391": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2392": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2394": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2395": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2396": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2397": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2399": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2400": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2401": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "POP",
      "path": "12"
    },
    "2402": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "POP",
      "path": "12"
    },
    "2403": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "POP",
      "path": "12"
    },
    "2404": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "POP",
      "path": "12"
    },
    "2405": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2407": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2408": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2409": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2411": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "NOT",
      "path": "12"
    },
    "2412": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2414": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2415": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "ADD",
      "path": "12"
    },
    "2416": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "AND",
      "path": "12"
    },
    "2417": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2418": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "ADD",
      "path": "12"
    },
    "2419": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2420": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2422": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2423": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "POP",
      "path": "12"
    },
    "2424": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2425": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "ADD",
      "path": "12"
    },
    "2426": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2427": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x984"
    },
    "2430": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2431": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2432": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1759"
    },
    "2435": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4617,
        4764
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2436": {
      "fn": "Barter.repay",
      "offset": [
        4617,
        4764
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2444": {
      "op": "SHL"
    },
    "2445": {
      "op": "SUB"
    },
    "2446": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 17
    },
    "2447": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2448": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "AND",
      "path": "12"
    },
    "2449": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2451": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2452": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2453": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2454": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4786
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2456": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2458": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2459": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2460": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2461": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2463": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2464": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2465": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2466": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2467": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2468": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "AND",
      "path": "12"
    },
    "2469": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2470": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2471": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2472": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2473": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2474": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2475": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2476": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4805
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2477": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4815
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2478": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4815
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2479": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4815
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2480": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4815
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2481": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4815
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2482": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4815
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2483": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4815
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2484": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4815
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2485": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4837
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2486": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4837
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2487": {
      "fn": "Barter.repay",
      "offset": [
        4830,
        4837
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2488": {
      "fn": "Barter.repay",
      "offset": [
        4830,
        4837
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2489": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4794
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2490": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4837
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9C4"
    },
    "2493": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4837
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2494": {
      "fn": "Barter.repay",
      "offset": [
        4830,
        4837
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2495": {
      "fn": "Barter.repay",
      "offset": [
        4830,
        4837
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2496": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4837
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1729"
    },
    "2499": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4775,
        4837
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2500": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4837
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2501": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4837
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2502": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4837
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2503": {
      "fn": "Barter.repay",
      "offset": [
        4775,
        4837
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2504": {
      "op": "POP"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2512": {
      "op": "SHL"
    },
    "2513": {
      "op": "SUB"
    },
    "2514": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 18
    },
    "2515": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "AND",
      "path": "12"
    },
    "2516": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2518": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2519": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2520": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2521": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4936
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2523": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2525": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2526": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2528": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2529": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2530": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4955
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2531": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4955
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2532": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2533": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        4955
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2534": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4944
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2535": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9F1"
    },
    "2538": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2539": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2540": {
      "fn": "Barter.repay",
      "offset": [
        4948,
        4955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2541": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1729"
    },
    "2544": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        4920,
        4955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2545": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2546": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2547": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4955
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2548": {
      "fn": "Barter.repay",
      "offset": [
        4920,
        4955
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2549": {
      "op": "POP"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2557": {
      "op": "SHL"
    },
    "2558": {
      "op": "SUB"
    },
    "2559": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2560": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2561": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "AND",
      "path": "12"
    },
    "2562": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2564": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2565": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2566": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2567": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5016
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2569": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2571": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2572": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2573": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2574": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2576": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2577": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2578": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5024
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2579": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2580": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2581": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "AND",
      "path": "12"
    },
    "2582": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2583": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2584": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2585": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2586": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2587": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2588": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2589": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5035
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2590": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5045
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2591": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5045
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2592": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5045
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2593": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2594": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5045
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2595": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5045
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2596": {
      "fn": "Barter.repay",
      "offset": [
        5005,
        5056
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2597": {
      "fn": "Barter.repay",
      "offset": [
        5001,
        5354
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB10"
    },
    "2600": {
      "fn": "Barter.repay",
      "offset": [
        5001,
        5354
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "op": "SUB"
    },
    "2609": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 19
    },
    "2610": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2611": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "AND",
      "path": "12"
    },
    "2612": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2614": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2615": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2616": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2617": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2619": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2621": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2622": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2623": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2624": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2626": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2627": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2628": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5180
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2629": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5112
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2630": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5112
      ],
      "op": "DUP9",
      "path": "12"
    },
    "2631": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5112
      ],
      "op": "AND",
      "path": "12"
    },
    "2632": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5191
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2633": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5191
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2634": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5191
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2635": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5191
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2636": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5191
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2637": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5191
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2638": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5191
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2639": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5191
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2640": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5191
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2641": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2642": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2643": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2644": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2645": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2646": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2647": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2648": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2649": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2650": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5201
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2651": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5207
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2653": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5207
      ],
      "op": "ADD",
      "path": "12"
    },
    "2654": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5207
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2655": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2656": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2657": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2664": {
      "op": "SHL"
    },
    "2665": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2666": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2667": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5112
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2668": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5112
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2669": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5112
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x42842E0E"
    },
    "2674": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5112
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2675": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA87"
    },
    "2678": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2679": {
      "fn": "Barter.repay",
      "offset": [
        5138,
        5142
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "2680": {
      "fn": "Barter.repay",
      "offset": [
        5138,
        5142
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2681": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5207
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2682": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5207
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2683": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5207
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2684": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5207
      ],
      "op": "AND",
      "path": "12"
    },
    "2685": {
      "fn": "Barter.repay",
      "offset": [
        5161,
        5207
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2686": {
      "fn": "Barter.repay",
      "offset": [
        5192,
        5200
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2687": {
      "fn": "Barter.repay",
      "offset": [
        5192,
        5200
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2688": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2690": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "ADD",
      "path": "12"
    },
    "2691": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A9"
    },
    "2694": {
      "fn": "Barter.repay",
      "jump": "i",
      "offset": [
        5077,
        5247
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2695": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2696": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2698": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2700": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2701": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2702": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2703": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "SUB",
      "path": "12"
    },
    "2704": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2705": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2707": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2708": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2709": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2710": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2711": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2712": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2713": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAA1"
    },
    "2716": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2717": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2719": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2720": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2721": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2722": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "POP",
      "path": "12"
    },
    "2723": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "GAS",
      "path": "12"
    },
    "2724": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "CALL",
      "path": "12"
    },
    "2725": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2726": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2727": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2728": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAB5"
    },
    "2731": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2732": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2733": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2735": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2736": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2737": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2738": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2740": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2741": {
      "fn": "Barter.repay",
      "offset": [
        5077,
        5247
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2742": {
      "op": "POP"
    },
    "2743": {
      "op": "POP"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2751": {
      "op": "SHL"
    },
    "2752": {
      "op": "SUB"
    },
    "2753": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 20
    },
    "2754": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2755": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "AND",
      "path": "12"
    },
    "2756": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2758": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2759": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2760": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2761": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5314
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2763": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2765": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2766": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2767": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2768": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2770": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2771": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2772": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5322
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2773": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2774": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "DUP10",
      "path": "12"
    },
    "2775": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "AND",
      "path": "12"
    },
    "2776": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2777": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2778": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2779": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2780": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2781": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2782": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2783": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5333
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2784": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5343
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2785": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5343
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2786": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5343
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2787": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5343
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2788": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5343
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2789": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5343
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2790": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5343
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2791": {
      "fn": "Barter.repay",
      "offset": [
        5303,
        5343
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2792": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2793": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2794": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2795": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2797": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2798": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "ADD",
      "path": "12"
    },
    "2799": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2800": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "op": "SUB"
    },
    "2809": {
      "op": "NOT"
    },
    "2810": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2811": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2812": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "AND",
      "path": "12"
    },
    "2813": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2814": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2815": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2816": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2818": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2819": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "ADD",
      "path": "12"
    },
    "2820": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2821": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2822": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2823": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2824": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "AND",
      "path": "12"
    },
    "2825": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2826": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2827": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2828": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2829": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "ADD",
      "path": "12"
    },
    "2830": {
      "fn": "Barter.repay",
      "offset": [
        5296,
        5343
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2831": {
      "op": "POP"
    },
    "2832": {
      "fn": "Barter.repay",
      "offset": [
        5001,
        5354
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2833": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "POP",
      "path": "12"
    },
    "2834": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "POP",
      "path": "12"
    },
    "2835": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "POP",
      "path": "12"
    },
    "2836": {
      "fn": "Barter.repay",
      "offset": [
        4157,
        5360
      ],
      "op": "POP",
      "path": "12"
    },
    "2837": {
      "fn": "Barter.repay",
      "jump": "o",
      "offset": [
        4157,
        5360
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2838": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2216,
        3917
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2845": {
      "op": "SHL"
    },
    "2846": {
      "op": "SUB"
    },
    "2847": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2848": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2849": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "AND",
      "path": "12"
    },
    "2850": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3044,
        3045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2852": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2853": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2854": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2855": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        2996
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2857": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2859": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2860": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2861": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2862": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2864": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2865": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2866": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3004
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2867": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2868": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2869": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "AND",
      "path": "12"
    },
    "2870": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2871": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2872": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2873": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2874": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2875": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2876": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3015
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2877": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3025
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2878": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3025
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2879": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3025
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2880": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3025
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2881": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3025
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2882": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3025
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2883": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3025
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2884": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3025
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2885": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3032
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2887": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3032
      ],
      "op": "ADD",
      "path": "12"
    },
    "2888": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3032
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2889": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2985,
        3032
      ],
      "op": "AND",
      "path": "12"
    },
    "2890": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2981,
        3496
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC0A"
    },
    "2893": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2981,
        3496
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2894": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 21,
      "value": "0x40"
    },
    "2896": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2897": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2904": {
      "op": "SHL"
    },
    "2905": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2906": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "op": "SUB"
    },
    "2915": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3097
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2916": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3097
      ],
      "op": "AND",
      "path": "12"
    },
    "2917": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3097
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2918": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3097
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x42842E0E"
    },
    "2923": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3097
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2924": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB7D"
    },
    "2927": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2928": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3115,
        3121
      ],
      "op": "DUP9",
      "path": "12"
    },
    "2929": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3115,
        3121
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2930": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "2931": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3147,
        3151
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2932": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3170,
        3178
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2933": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3170,
        3178
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2934": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2936": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "ADD",
      "path": "12"
    },
    "2937": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A9"
    },
    "2940": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        3062,
        3192
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2941": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2942": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2944": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2946": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2947": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2948": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2949": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "SUB",
      "path": "12"
    },
    "2950": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2951": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2953": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2954": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2955": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2956": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2957": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2958": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2959": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB97"
    },
    "2962": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2963": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2965": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2966": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2967": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2968": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "POP",
      "path": "12"
    },
    "2969": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "GAS",
      "path": "12"
    },
    "2970": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "CALL",
      "path": "12"
    },
    "2971": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2972": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2973": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2974": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBAB"
    },
    "2977": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2978": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2979": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2981": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2982": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2983": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2984": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2986": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2987": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3062,
        3192
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2988": {
      "op": "POP"
    },
    "2989": {
      "op": "POP"
    },
    "2990": {
      "op": "POP"
    },
    "2991": {
      "op": "POP"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2998": {
      "op": "SHL"
    },
    "2999": {
      "op": "SUB"
    },
    "3000": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 22
    },
    "3001": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3002": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "AND",
      "path": "12"
    },
    "3003": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3005": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3006": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3007": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3008": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3271
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "3010": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3012": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3013": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3014": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3015": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3017": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3018": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3019": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3279
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3020": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "DUP10",
      "path": "12"
    },
    "3021": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3022": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "AND",
      "path": "12"
    },
    "3023": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3024": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3025": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3026": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3027": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3028": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3029": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3290
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3030": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3300
      ],
      "op": "DUP9",
      "path": "12"
    },
    "3031": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3300
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3032": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3300
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3033": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3034": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3035": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3300
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3036": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3037": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3038": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3300
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3039": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3307
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3041": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3307
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3042": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3307
      ],
      "op": "ADD",
      "path": "12"
    },
    "3043": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3044": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3045": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3046": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "DUP10",
      "path": "12"
    },
    "3047": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "AND",
      "path": "12"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "op": "SUB"
    },
    "3056": {
      "op": "NOT"
    },
    "3057": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "3058": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3059": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "AND",
      "path": "12"
    },
    "3060": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "OR",
      "path": "12"
    },
    "3061": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3062": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3260,
        3317
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3065": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3377
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 23
    },
    "3066": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3377
      ],
      "op": "ADD",
      "path": "12"
    },
    "3067": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3068": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3069": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3070": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3071": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "AND",
      "path": "12"
    },
    "3072": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3073": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3074": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "OR",
      "path": "12"
    },
    "3075": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3076": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3077": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3331,
        3386
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3078": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3453,
        3485
      ],
      "op": "TIMESTAMP",
      "path": "12",
      "statement": 24
    },
    "3079": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3400,
        3450
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3080": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3400,
        3450
      ],
      "op": "ADD",
      "path": "12"
    },
    "3081": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3400,
        3485
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3082": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        2981,
        3496
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "op": "SUB"
    },
    "3091": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 25
    },
    "3092": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3093": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "AND",
      "path": "12"
    },
    "3094": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3096": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3097": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3098": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3099": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3599
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "3101": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3103": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3104": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3105": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3106": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3108": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3109": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3110": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3607
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3111": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3112": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3113": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "AND",
      "path": "12"
    },
    "3114": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3115": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3116": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3117": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3118": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3119": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3120": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3618
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3121": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3628
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3122": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3628
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3123": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3628
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3124": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3628
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3125": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3628
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3126": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3628
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3127": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3628
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3128": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3628
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3129": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3635
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3131": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3635
      ],
      "op": "ADD",
      "path": "12"
    },
    "3132": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3635
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3133": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3635
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3134": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3635
      ],
      "op": "AND",
      "path": "12"
    },
    "3135": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3136": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3646
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3137": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3646
      ],
      "op": "AND",
      "path": "12"
    },
    "3138": {
      "branch": 49,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3588,
        3646
      ],
      "op": "EQ",
      "path": "12"
    },
    "3139": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCA9"
    },
    "3142": {
      "branch": 49,
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3143": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3145": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3146": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3154": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3157": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3159": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3160": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "ADD",
      "path": "12"
    },
    "3161": {
      "op": "MSTORE"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "PUSH32",
      "value": "0x6F6E6C7920757365206E667420617320636F6C6C61746572616C20666F72206F"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3204": {
      "op": "DUP3"
    },
    "3205": {
      "op": "ADD"
    },
    "3206": {
      "op": "MSTORE"
    },
    "3207": {
      "op": "PUSH18",
      "value": "0x6E652073746F726520617420612074696D65"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3228": {
      "op": "SHL"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3231": {
      "op": "DUP3"
    },
    "3232": {
      "op": "ADD"
    },
    "3233": {
      "op": "MSTORE"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3236": {
      "op": "ADD"
    },
    "3237": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x504"
    },
    "3240": {
      "op": "JUMP"
    },
    "3241": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3567,
        3722
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "op": "SUB"
    },
    "3250": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 26
    },
    "3251": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3252": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "AND",
      "path": "12"
    },
    "3253": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3255": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3256": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3257": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3258": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3808
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "3260": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3262": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3263": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3264": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3265": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3267": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3268": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3269": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3270": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3271": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3272": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "AND",
      "path": "12"
    },
    "3273": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3274": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3275": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3276": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3277": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3278": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3279": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3280": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3827
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3281": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3837
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3282": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3837
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3283": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3837
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3284": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3837
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3285": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3837
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3286": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3837
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3287": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3837
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3288": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3837
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3289": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3862
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3290": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3862
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3291": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3852,
        3862
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3292": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3852,
        3862
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3293": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3816
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3294": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3862
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCE8"
    },
    "3297": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3862
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3298": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3852,
        3862
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3299": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3852,
        3862
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3300": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3862
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1711"
    },
    "3303": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        3797,
        3862
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3304": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3862
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3305": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3862
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3306": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3862
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3307": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3797,
        3862
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3308": {
      "op": "POP"
    },
    "3309": {
      "op": "POP"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3316": {
      "op": "SHL"
    },
    "3317": {
      "op": "SUB"
    },
    "3318": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 27
    },
    "3319": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "AND",
      "path": "12"
    },
    "3320": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3322": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3323": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3324": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3325": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3327": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3329": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3330": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3332": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3333": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3334": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3910
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3335": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3910
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3336": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3900,
        3910
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3337": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3900,
        3910
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3338": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3896
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3339": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3910
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD15"
    },
    "3342": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3910
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3343": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3900,
        3910
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3344": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3900,
        3910
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3345": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3910
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1711"
    },
    "3348": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "i",
      "offset": [
        3872,
        3910
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3349": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3910
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3350": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3910
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3351": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3910
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3352": {
      "fn": "Barter.collateralizedPurchase",
      "offset": [
        3872,
        3910
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "op": "POP"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "op": "POP"
    },
    "3359": {
      "op": "POP"
    },
    "3360": {
      "fn": "Barter.collateralizedPurchase",
      "jump": "o",
      "offset": [
        2216,
        3917
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3361": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3362": {
      "offset": [
        1232,
        1263
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD39"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3367": {
      "op": "DUP1"
    },
    "3368": {
      "op": "MLOAD"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3371": {
      "op": "PUSH2",
      "value": "0x18B2"
    },
    "3374": {
      "op": "DUP4"
    },
    "3375": {
      "op": "CODECOPY"
    },
    "3376": {
      "op": "DUP2"
    },
    "3377": {
      "op": "MLOAD"
    },
    "3378": {
      "op": "SWAP2"
    },
    "3379": {
      "op": "MSTORE"
    },
    "3380": {
      "offset": [
        1252,
        1262
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3381": {
      "offset": [
        1232,
        1239
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD8F"
    },
    "3384": {
      "jump": "i",
      "offset": [
        1232,
        1263
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3385": {
      "fn": "Barter.addOwner",
      "offset": [
        1232,
        1263
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3386": {
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD55"
    },
    "3389": {
      "offset": [
        1224,
        1288
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3390": {
      "fn": "Barter.addOwner",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3392": {
      "fn": "Barter.addOwner",
      "offset": [
        1224,
        1288
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3393": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "offset": [
        1224,
        1288
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3401": {
      "fn": "Barter.addOwner",
      "offset": [
        1224,
        1288
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3402": {
      "fn": "Barter.addOwner",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3404": {
      "fn": "Barter.addOwner",
      "offset": [
        1224,
        1288
      ],
      "op": "ADD",
      "path": "12"
    },
    "3405": {
      "fn": "Barter.addOwner",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x504"
    },
    "3408": {
      "fn": "Barter.addOwner",
      "offset": [
        1224,
        1288
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3409": {
      "fn": "Barter.addOwner",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16CD"
    },
    "3412": {
      "fn": "Barter.addOwner",
      "jump": "i",
      "offset": [
        1224,
        1288
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3413": {
      "fn": "Barter.addOwner",
      "offset": [
        1224,
        1288
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3414": {
      "fn": "Barter.addOwner",
      "offset": [
        7839,
        7872
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 28,
      "value": "0xD6D"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3419": {
      "op": "DUP1"
    },
    "3420": {
      "op": "MLOAD"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3423": {
      "op": "PUSH2",
      "value": "0x18B2"
    },
    "3426": {
      "op": "DUP4"
    },
    "3427": {
      "op": "CODECOPY"
    },
    "3428": {
      "op": "DUP2"
    },
    "3429": {
      "op": "MLOAD"
    },
    "3430": {
      "op": "SWAP2"
    },
    "3431": {
      "op": "MSTORE"
    },
    "3432": {
      "fn": "Barter.addOwner",
      "offset": [
        7862,
        7871
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3433": {
      "fn": "Barter.addOwner",
      "offset": [
        7839,
        7849
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1005"
    },
    "3436": {
      "fn": "Barter.addOwner",
      "jump": "i",
      "offset": [
        7839,
        7872
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3437": {
      "fn": "Barter.addOwner",
      "offset": [
        7839,
        7872
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3438": {
      "fn": "Barter.addOwner",
      "offset": [
        7775,
        7879
      ],
      "op": "POP",
      "path": "12"
    },
    "3439": {
      "fn": "Barter.addOwner",
      "jump": "o",
      "offset": [
        7775,
        7879
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3440": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3441": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1521,
        1528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3443": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1565
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 29
    },
    "3444": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3445": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1565
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3446": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1559
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3448": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3450": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1565
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3451": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3453": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3454": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1565
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3455": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1575
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD88"
    },
    "3458": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1575
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3459": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1569,
        1574
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3460": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100F"
    },
    "3463": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "i",
      "offset": [
        1547,
        1575
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3464": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1547,
        1575
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3465": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1540,
        1575
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3466": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1431,
        1582
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3467": {
      "op": "POP"
    },
    "3468": {
      "op": "POP"
    },
    "3469": {
      "op": "POP"
    },
    "3470": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "o",
      "offset": [
        1431,
        1582
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3471": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2909,
        3054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3472": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2995,
        2999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3474": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 30
    },
    "3475": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3476": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3477": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3479": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3480": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3481": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3482": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3484": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3485": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3486": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3030
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3493": {
      "op": "SHL"
    },
    "3494": {
      "op": "SUB"
    },
    "3495": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3496": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3497": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3498": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "AND",
      "path": "0"
    },
    "3499": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3500": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3501": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3502": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3503": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3504": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3505": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3506": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3507": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3509": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "AND",
      "path": "0"
    },
    "3510": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3018,
        3047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3511": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        2909,
        3054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3512": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1750,
        1890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3513": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1830,
        1837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3515": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1874
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 31
    },
    "3516": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1874
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3517": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1874
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3518": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1868
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3520": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3522": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1874
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3523": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3525": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1874
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3526": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1874
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3527": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1883
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x462"
    },
    "3530": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3531": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1856,
        1881
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101B"
    },
    "3534": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1856,
        1883
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3535": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4766,
        4913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3536": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4082,
        4089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3538": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3539": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3540": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3541": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3543": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3544": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3545": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3546": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3548": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3549": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4120
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3550": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3552": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "ADD",
      "path": "0"
    },
    "3553": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4108,
        4130
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3554": {
      "offset": [
        2505,
        2535
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDEB"
    },
    "3557": {
      "offset": [
        2516,
        2520
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3558": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3559": {
      "offset": [
        2505,
        2515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5D"
    },
    "3562": {
      "jump": "i",
      "offset": [
        2505,
        2535
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3563": {
      "fn": "Context._msgSender",
      "offset": [
        2505,
        2535
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3564": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4880,
        4906
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0x706"
    },
    "3567": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4892,
        4896
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3568": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4898,
        4905
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3569": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4880,
        4891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE3"
    },
    "3572": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4880,
        4906
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3573": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3574": {
      "offset": [
        1232,
        1263
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE0D"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3579": {
      "op": "DUP1"
    },
    "3580": {
      "op": "MLOAD"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3583": {
      "op": "PUSH2",
      "value": "0x18B2"
    },
    "3586": {
      "op": "DUP4"
    },
    "3587": {
      "op": "CODECOPY"
    },
    "3588": {
      "op": "DUP2"
    },
    "3589": {
      "op": "MLOAD"
    },
    "3590": {
      "op": "SWAP2"
    },
    "3591": {
      "op": "MSTORE"
    },
    "3592": {
      "offset": [
        1252,
        1262
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3593": {
      "offset": [
        1232,
        1239
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD8F"
    },
    "3596": {
      "jump": "i",
      "offset": [
        1232,
        1263
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3597": {
      "branch": 50,
      "fn": "Barter.emergencyExit",
      "offset": [
        1232,
        1263
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3598": {
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE29"
    },
    "3601": {
      "branch": 50,
      "offset": [
        1224,
        1288
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3602": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3604": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1224,
        1288
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3605": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "offset": [
        1224,
        1288
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3613": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1224,
        1288
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3614": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3616": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1224,
        1288
      ],
      "op": "ADD",
      "path": "12"
    },
    "3617": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x504"
    },
    "3620": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1224,
        1288
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3621": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1224,
        1288
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16CD"
    },
    "3624": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        1224,
        1288
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3625": {
      "fn": "Barter.emergencyExit",
      "offset": [
        1224,
        1288
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3626": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 33,
      "value": "0x40"
    },
    "3628": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3629": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3636": {
      "op": "SHL"
    },
    "3637": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3638": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3645": {
      "op": "SHL"
    },
    "3646": {
      "op": "SUB"
    },
    "3647": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7650
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3648": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7650
      ],
      "op": "AND",
      "path": "12"
    },
    "3649": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7650
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3650": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7650
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x42842E0E"
    },
    "3655": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7650
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3656": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE59"
    },
    "3659": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3660": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7672,
        7676
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "3661": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7672,
        7676
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3662": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7691,
        7701
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3663": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7691,
        7701
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3664": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7715,
        7723
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3665": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7715,
        7723
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3666": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3668": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "ADD",
      "path": "12"
    },
    "3669": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A9"
    },
    "3672": {
      "fn": "Barter.emergencyExit",
      "jump": "i",
      "offset": [
        7615,
        7733
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3673": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3674": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3676": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3678": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3679": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3680": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3681": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "SUB",
      "path": "12"
    },
    "3682": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3683": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3685": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3686": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3687": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3688": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3689": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3690": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3691": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE73"
    },
    "3694": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3695": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3697": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3698": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3699": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3700": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "POP",
      "path": "12"
    },
    "3701": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "GAS",
      "path": "12"
    },
    "3702": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "CALL",
      "path": "12"
    },
    "3703": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3704": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3705": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3706": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE87"
    },
    "3709": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3710": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3711": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3713": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3714": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "3715": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3716": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3718": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3719": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3720": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "POP",
      "path": "12"
    },
    "3721": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "POP",
      "path": "12"
    },
    "3722": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "POP",
      "path": "12"
    },
    "3723": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7615,
        7733
      ],
      "op": "POP",
      "path": "12"
    },
    "3724": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "POP",
      "path": "12"
    },
    "3725": {
      "fn": "Barter.emergencyExit",
      "offset": [
        7508,
        7740
      ],
      "op": "POP",
      "path": "12"
    },
    "3726": {
      "fn": "Barter.emergencyExit",
      "jump": "o",
      "offset": [
        7508,
        7740
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3727": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6861,
        7094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3728": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6944,
        6966
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE99"
    },
    "3731": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6952,
        6956
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3732": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6958,
        6965
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3733": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6944,
        6951
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8F"
    },
    "3736": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        6944,
        6966
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3737": {
      "branch": 52,
      "fn": "AccessControl._grantRole",
      "offset": [
        6944,
        6966
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3738": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6939,
        7088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x785"
    },
    "3741": {
      "branch": 52,
      "fn": "AccessControl._grantRole",
      "offset": [
        6939,
        7088
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3742": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6988
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x0"
    },
    "3744": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3745": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3746": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3747": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3749": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3750": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3751": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3752": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3754": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3755": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3756": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        6994
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3763": {
      "op": "SHL"
    },
    "3764": {
      "op": "SUB"
    },
    "3765": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7011
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3766": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7011
      ],
      "op": "AND",
      "path": "0"
    },
    "3767": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7011
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3768": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3769": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3770": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3771": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3772": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3773": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7011
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3774": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7018
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3775": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7018
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3778": {
      "op": "NOT"
    },
    "3779": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7018
      ],
      "op": "AND",
      "path": "0"
    },
    "3780": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7014,
        7018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3782": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7018
      ],
      "op": "OR",
      "path": "0"
    },
    "3783": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3784": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6982,
        7018
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3785": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0xECF"
    },
    "3788": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3789": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3790": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3791": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3798": {
      "op": "SHL"
    },
    "3799": {
      "op": "SUB"
    },
    "3800": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "AND",
      "path": "0"
    },
    "3801": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7055,
        7062
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3808": {
      "op": "SHL"
    },
    "3809": {
      "op": "SUB"
    },
    "3810": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "AND",
      "path": "0"
    },
    "3811": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7053
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3812": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "3845": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3847": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3848": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3850": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3851": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3852": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3853": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "SUB",
      "path": "0"
    },
    "3854": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3855": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7037,
        7077
      ],
      "op": "LOG4",
      "path": "0"
    },
    "3856": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6861,
        7094
      ],
      "op": "POP",
      "path": "0"
    },
    "3857": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6861,
        7094
      ],
      "op": "POP",
      "path": "0"
    },
    "3858": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        6861,
        7094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3859": {
      "op": "JUMPDEST"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0xD88"
    },
    "3865": {
      "op": "DUP4"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3872": {
      "op": "SHL"
    },
    "3873": {
      "op": "SUB"
    },
    "3874": {
      "op": "DUP5"
    },
    "3875": {
      "op": "AND"
    },
    "3876": {
      "op": "PUSH2",
      "value": "0x1025"
    },
    "3879": {
      "jump": "i",
      "op": "JUMP"
    },
    "3880": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2620,
        2822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3881": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2705,
        2709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3889": {
      "op": "SHL"
    },
    "3890": {
      "op": "SUB"
    },
    "3891": {
      "op": "NOT"
    },
    "3892": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2728,
        2775
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 36
    },
    "3893": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2728,
        2775
      ],
      "op": "AND",
      "path": "0"
    },
    "3894": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3901": {
      "op": "SHL"
    },
    "3902": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2728,
        2775
      ],
      "op": "EQ",
      "path": "0"
    },
    "3903": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2728,
        2775
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3904": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2728,
        2815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x462"
    },
    "3907": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2728,
        2815
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3908": {
      "op": "POP"
    },
    "3909": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3916": {
      "op": "SHL"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3923": {
      "op": "SHL"
    },
    "3924": {
      "op": "SUB"
    },
    "3925": {
      "op": "NOT"
    },
    "3926": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 37
    },
    "3927": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "9"
    },
    "3928": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "9"
    },
    "3929": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2779,
        2815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x462"
    },
    "3932": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3933": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3335,
        3827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3934": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3423,
        3445
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF67"
    },
    "3937": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3431,
        3435
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3938": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3437,
        3444
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3939": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3423,
        3430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8F"
    },
    "3942": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3423,
        3445
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3943": {
      "branch": 53,
      "fn": "AccessControl._checkRole",
      "offset": [
        3423,
        3445
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3944": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3418,
        3821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x785"
    },
    "3947": {
      "branch": 53,
      "fn": "AccessControl._checkRole",
      "offset": [
        3418,
        3821
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3948": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3606,
        3647
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0xF7F"
    },
    "3951": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3634,
        3641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3958": {
      "op": "SHL"
    },
    "3959": {
      "op": "SUB"
    },
    "3960": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3606,
        3647
      ],
      "op": "AND",
      "path": "0"
    },
    "3961": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3644,
        3646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "3963": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3606,
        3625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1074"
    },
    "3966": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3606,
        3647
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3967": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3606,
        3647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3968": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3718,
        3756
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8A"
    },
    "3971": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3746,
        3750
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3972": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3753,
        3755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3974": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3718,
        3737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1074"
    },
    "3977": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3718,
        3756
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3978": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3718,
        3756
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3979": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3981": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3982": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3984": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "ADD",
      "path": "0"
    },
    "3985": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9B"
    },
    "3988": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3989": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3990": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3991": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A7"
    },
    "3994": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3513,
        3778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3995": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3996": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3998": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3999": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4002": {
      "op": "NOT"
    },
    "4003": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4004": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4005": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "SUB",
      "path": "0"
    },
    "4006": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "ADD",
      "path": "0"
    },
    "4007": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4008": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4009": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4010": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4011": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4012": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3513,
        3778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4019": {
      "op": "SHL"
    },
    "4020": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3461,
        3810
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4021": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3461,
        3810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4022": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3461,
        3810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "4025": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3461,
        3810
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4026": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3461,
        3810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4028": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3461,
        3810
      ],
      "op": "ADD",
      "path": "0"
    },
    "4029": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3461,
        3810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181C"
    },
    "4032": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3461,
        3810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4033": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        1978,
        2144
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4034": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2065,
        2096
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 39,
      "value": "0xFCB"
    },
    "4037": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2082,
        2086
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4038": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2095
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4039": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2065,
        2081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE8F"
    },
    "4042": {
      "fn": "AccessControlEnumerable._grantRole",
      "jump": "i",
      "offset": [
        2065,
        2096
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4043": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2065,
        2096
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4044": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2124
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 40,
      "value": "0x0"
    },
    "4046": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2124
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4047": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2124
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4048": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2124
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4049": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4051": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4053": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2124
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4054": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4056": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2124
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4057": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2124
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4058": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2137
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x706"
    },
    "4061": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2137
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4062": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2129,
        2136
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4063": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2106,
        2128
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF13"
    },
    "4066": {
      "fn": "AccessControlEnumerable._grantRole",
      "jump": "i",
      "offset": [
        2106,
        2137
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4067": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2233,
        2404
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4068": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2321,
        2353
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 41,
      "value": "0xFED"
    },
    "4071": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2339,
        2343
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4072": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2352
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4073": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2321,
        2338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1210"
    },
    "4076": {
      "fn": "AccessControlEnumerable._revokeRole",
      "jump": "i",
      "offset": [
        2321,
        2353
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4077": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2321,
        2353
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4078": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2381
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 42,
      "value": "0x0"
    },
    "4080": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2381
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4081": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2381
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4082": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2381
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4083": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4085": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2381
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4087": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2381
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4088": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2381
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4090": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2381
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4091": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2381
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4092": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2397
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x706"
    },
    "4095": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2397
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4096": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2389,
        2396
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4097": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2363,
        2388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1275"
    },
    "4100": {
      "fn": "AccessControlEnumerable._revokeRole",
      "jump": "i",
      "offset": [
        2363,
        2397
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4101": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6257,
        6367
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4102": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6335,
        6360
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 43,
      "value": "0x785"
    },
    "4105": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6346,
        6350
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4106": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6352,
        6359
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4107": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6335,
        6345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC1"
    },
    "4110": {
      "fn": "AccessControl._setupRole",
      "jump": "i",
      "offset": [
        6335,
        6360
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4111": {
      "op": "JUMPDEST"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4114": {
      "op": "PUSH2",
      "value": "0xD88"
    },
    "4117": {
      "op": "DUP4"
    },
    "4118": {
      "op": "DUP4"
    },
    "4119": {
      "op": "PUSH2",
      "value": "0x128A"
    },
    "4122": {
      "jump": "i",
      "op": "JUMP"
    },
    "4123": {
      "op": "JUMPDEST"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4126": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "4129": {
      "op": "DUP3"
    },
    "4130": {
      "op": "SLOAD"
    },
    "4131": {
      "op": "SWAP1"
    },
    "4132": {
      "op": "JUMP"
    },
    "4133": {
      "op": "JUMPDEST"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4136": {
      "op": "DUP2"
    },
    "4137": {
      "op": "DUP2"
    },
    "4138": {
      "op": "MSTORE"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4141": {
      "op": "DUP4"
    },
    "4142": {
      "op": "ADD"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4145": {
      "op": "MSTORE"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4148": {
      "op": "DUP2"
    },
    "4149": {
      "op": "KECCAK256"
    },
    "4150": {
      "op": "SLOAD"
    },
    "4151": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4154": {
      "op": "JUMPI"
    },
    "4155": {
      "op": "POP"
    },
    "4156": {
      "op": "DUP2"
    },
    "4157": {
      "op": "SLOAD"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4160": {
      "op": "DUP2"
    },
    "4161": {
      "op": "DUP2"
    },
    "4162": {
      "op": "ADD"
    },
    "4163": {
      "op": "DUP5"
    },
    "4164": {
      "op": "SSTORE"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4167": {
      "op": "DUP5"
    },
    "4168": {
      "op": "DUP2"
    },
    "4169": {
      "op": "MSTORE"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4172": {
      "op": "DUP1"
    },
    "4173": {
      "op": "DUP3"
    },
    "4174": {
      "op": "KECCAK256"
    },
    "4175": {
      "op": "SWAP1"
    },
    "4176": {
      "op": "SWAP4"
    },
    "4177": {
      "op": "ADD"
    },
    "4178": {
      "op": "DUP5"
    },
    "4179": {
      "op": "SWAP1"
    },
    "4180": {
      "op": "SSTORE"
    },
    "4181": {
      "op": "DUP5"
    },
    "4182": {
      "op": "SLOAD"
    },
    "4183": {
      "op": "DUP5"
    },
    "4184": {
      "op": "DUP3"
    },
    "4185": {
      "op": "MSTORE"
    },
    "4186": {
      "op": "DUP3"
    },
    "4187": {
      "op": "DUP7"
    },
    "4188": {
      "op": "ADD"
    },
    "4189": {
      "op": "SWAP1"
    },
    "4190": {
      "op": "SWAP4"
    },
    "4191": {
      "op": "MSTORE"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4194": {
      "op": "SWAP1"
    },
    "4195": {
      "op": "KECCAK256"
    },
    "4196": {
      "op": "SWAP2"
    },
    "4197": {
      "op": "SWAP1"
    },
    "4198": {
      "op": "SWAP2"
    },
    "4199": {
      "op": "SSTORE"
    },
    "4200": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "4203": {
      "op": "JUMP"
    },
    "4204": {
      "op": "JUMPDEST"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4208": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "4211": {
      "op": "JUMP"
    },
    "4212": {
      "op": "JUMPDEST"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4217": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4220": {
      "op": "DUP4"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0x184F"
    },
    "4226": {
      "jump": "i",
      "op": "JUMP"
    },
    "4227": {
      "op": "JUMPDEST"
    },
    "4228": {
      "op": "PUSH2",
      "value": "0x108E"
    },
    "4231": {
      "op": "SWAP1"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4234": {
      "op": "PUSH2",
      "value": "0x1711"
    },
    "4237": {
      "jump": "i",
      "op": "JUMP"
    },
    "4238": {
      "op": "JUMPDEST"
    },
    "4239": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4248": {
      "op": "DUP2"
    },
    "4249": {
      "op": "GT"
    },
    "4250": {
      "op": "ISZERO"
    },
    "4251": {
      "op": "PUSH2",
      "value": "0x10A6"
    },
    "4254": {
      "op": "JUMPI"
    },
    "4255": {
      "op": "PUSH2",
      "value": "0x10A6"
    },
    "4258": {
      "op": "PUSH2",
      "value": "0x1438"
    },
    "4261": {
      "jump": "i",
      "op": "JUMP"
    },
    "4262": {
      "op": "JUMPDEST"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4265": {
      "op": "MLOAD"
    },
    "4266": {
      "op": "SWAP1"
    },
    "4267": {
      "op": "DUP1"
    },
    "4268": {
      "op": "DUP3"
    },
    "4269": {
      "op": "MSTORE"
    },
    "4270": {
      "op": "DUP1"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4273": {
      "op": "ADD"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4276": {
      "op": "NOT"
    },
    "4277": {
      "op": "AND"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4280": {
      "op": "ADD"
    },
    "4281": {
      "op": "DUP3"
    },
    "4282": {
      "op": "ADD"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4285": {
      "op": "MSTORE"
    },
    "4286": {
      "op": "DUP1"
    },
    "4287": {
      "op": "ISZERO"
    },
    "4288": {
      "op": "PUSH2",
      "value": "0x10D0"
    },
    "4291": {
      "op": "JUMPI"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4294": {
      "op": "DUP3"
    },
    "4295": {
      "op": "ADD"
    },
    "4296": {
      "op": "DUP2"
    },
    "4297": {
      "op": "DUP1"
    },
    "4298": {
      "op": "CALLDATASIZE"
    },
    "4299": {
      "op": "DUP4"
    },
    "4300": {
      "op": "CALLDATACOPY"
    },
    "4301": {
      "op": "ADD"
    },
    "4302": {
      "op": "SWAP1"
    },
    "4303": {
      "op": "POP"
    },
    "4304": {
      "op": "JUMPDEST"
    },
    "4305": {
      "op": "POP"
    },
    "4306": {
      "op": "SWAP1"
    },
    "4307": {
      "op": "POP"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "4312": {
      "op": "SHL"
    },
    "4313": {
      "op": "DUP2"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4316": {
      "op": "DUP2"
    },
    "4317": {
      "op": "MLOAD"
    },
    "4318": {
      "op": "DUP2"
    },
    "4319": {
      "op": "LT"
    },
    "4320": {
      "op": "PUSH2",
      "value": "0x10EB"
    },
    "4323": {
      "op": "JUMPI"
    },
    "4324": {
      "op": "PUSH2",
      "value": "0x10EB"
    },
    "4327": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "4330": {
      "jump": "i",
      "op": "JUMP"
    },
    "4331": {
      "op": "JUMPDEST"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4334": {
      "op": "ADD"
    },
    "4335": {
      "op": "ADD"
    },
    "4336": {
      "op": "SWAP1"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4343": {
      "op": "SHL"
    },
    "4344": {
      "op": "SUB"
    },
    "4345": {
      "op": "NOT"
    },
    "4346": {
      "op": "AND"
    },
    "4347": {
      "op": "SWAP1"
    },
    "4348": {
      "op": "DUP2"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4351": {
      "op": "BYTE"
    },
    "4352": {
      "op": "SWAP1"
    },
    "4353": {
      "op": "MSTORE8"
    },
    "4354": {
      "op": "POP"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "4359": {
      "op": "SHL"
    },
    "4360": {
      "op": "DUP2"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4363": {
      "op": "DUP2"
    },
    "4364": {
      "op": "MLOAD"
    },
    "4365": {
      "op": "DUP2"
    },
    "4366": {
      "op": "LT"
    },
    "4367": {
      "op": "PUSH2",
      "value": "0x111A"
    },
    "4370": {
      "op": "JUMPI"
    },
    "4371": {
      "op": "PUSH2",
      "value": "0x111A"
    },
    "4374": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "4377": {
      "jump": "i",
      "op": "JUMP"
    },
    "4378": {
      "op": "JUMPDEST"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4381": {
      "op": "ADD"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "SWAP1"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4390": {
      "op": "SHL"
    },
    "4391": {
      "op": "SUB"
    },
    "4392": {
      "op": "NOT"
    },
    "4393": {
      "op": "AND"
    },
    "4394": {
      "op": "SWAP1"
    },
    "4395": {
      "op": "DUP2"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4398": {
      "op": "BYTE"
    },
    "4399": {
      "op": "SWAP1"
    },
    "4400": {
      "op": "MSTORE8"
    },
    "4401": {
      "op": "POP"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4404": {
      "op": "PUSH2",
      "value": "0x113E"
    },
    "4407": {
      "op": "DUP5"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4410": {
      "op": "PUSH2",
      "value": "0x184F"
    },
    "4413": {
      "jump": "i",
      "op": "JUMP"
    },
    "4414": {
      "op": "JUMPDEST"
    },
    "4415": {
      "op": "PUSH2",
      "value": "0x1149"
    },
    "4418": {
      "op": "SWAP1"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4421": {
      "op": "PUSH2",
      "value": "0x1711"
    },
    "4424": {
      "jump": "i",
      "op": "JUMP"
    },
    "4425": {
      "op": "JUMPDEST"
    },
    "4426": {
      "op": "SWAP1"
    },
    "4427": {
      "op": "POP"
    },
    "4428": {
      "op": "JUMPDEST"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "DUP2"
    },
    "4432": {
      "op": "GT"
    },
    "4433": {
      "op": "ISZERO"
    },
    "4434": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4437": {
      "op": "JUMPI"
    },
    "4438": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "4457": {
      "op": "SHL"
    },
    "4458": {
      "op": "DUP6"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4461": {
      "op": "AND"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4464": {
      "op": "DUP2"
    },
    "4465": {
      "op": "LT"
    },
    "4466": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4469": {
      "op": "JUMPI"
    },
    "4470": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4473": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "4476": {
      "jump": "i",
      "op": "JUMP"
    },
    "4477": {
      "op": "JUMPDEST"
    },
    "4478": {
      "op": "BYTE"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4481": {
      "op": "SHL"
    },
    "4482": {
      "op": "DUP3"
    },
    "4483": {
      "op": "DUP3"
    },
    "4484": {
      "op": "DUP2"
    },
    "4485": {
      "op": "MLOAD"
    },
    "4486": {
      "op": "DUP2"
    },
    "4487": {
      "op": "LT"
    },
    "4488": {
      "op": "PUSH2",
      "value": "0x1193"
    },
    "4491": {
      "op": "JUMPI"
    },
    "4492": {
      "op": "PUSH2",
      "value": "0x1193"
    },
    "4495": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "4498": {
      "jump": "i",
      "op": "JUMP"
    },
    "4499": {
      "op": "JUMPDEST"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4502": {
      "op": "ADD"
    },
    "4503": {
      "op": "ADD"
    },
    "4504": {
      "op": "SWAP1"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4511": {
      "op": "SHL"
    },
    "4512": {
      "op": "SUB"
    },
    "4513": {
      "op": "NOT"
    },
    "4514": {
      "op": "AND"
    },
    "4515": {
      "op": "SWAP1"
    },
    "4516": {
      "op": "DUP2"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4519": {
      "op": "BYTE"
    },
    "4520": {
      "op": "SWAP1"
    },
    "4521": {
      "op": "MSTORE8"
    },
    "4522": {
      "op": "POP"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4525": {
      "op": "SWAP5"
    },
    "4526": {
      "op": "SWAP1"
    },
    "4527": {
      "op": "SWAP5"
    },
    "4528": {
      "op": "SHR"
    },
    "4529": {
      "op": "SWAP4"
    },
    "4530": {
      "op": "PUSH2",
      "value": "0x11BA"
    },
    "4533": {
      "op": "DUP2"
    },
    "4534": {
      "op": "PUSH2",
      "value": "0x1884"
    },
    "4537": {
      "jump": "i",
      "op": "JUMP"
    },
    "4538": {
      "op": "JUMPDEST"
    },
    "4539": {
      "op": "SWAP1"
    },
    "4540": {
      "op": "POP"
    },
    "4541": {
      "op": "PUSH2",
      "value": "0x114C"
    },
    "4544": {
      "op": "JUMP"
    },
    "4545": {
      "op": "JUMPDEST"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "op": "DUP4"
    },
    "4548": {
      "op": "ISZERO"
    },
    "4549": {
      "op": "PUSH2",
      "value": "0xD88"
    },
    "4552": {
      "op": "JUMPI"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4555": {
      "op": "MLOAD"
    },
    "4556": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4562": {
      "op": "SHL"
    },
    "4563": {
      "op": "DUP2"
    },
    "4564": {
      "op": "MSTORE"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4569": {
      "op": "DUP3"
    },
    "4570": {
      "op": "ADD"
    },
    "4571": {
      "op": "DUP2"
    },
    "4572": {
      "op": "SWAP1"
    },
    "4573": {
      "op": "MSTORE"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4576": {
      "op": "DUP3"
    },
    "4577": {
      "op": "ADD"
    },
    "4578": {
      "op": "MSTORE"
    },
    "4579": {
      "op": "PUSH32",
      "value": "0x537472696E67733A20686578206C656E67746820696E73756666696369656E74"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4614": {
      "op": "DUP3"
    },
    "4615": {
      "op": "ADD"
    },
    "4616": {
      "op": "MSTORE"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4619": {
      "op": "ADD"
    },
    "4620": {
      "op": "PUSH2",
      "value": "0x504"
    },
    "4623": {
      "op": "JUMP"
    },
    "4624": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7219,
        7453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4625": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7302,
        7324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121A"
    },
    "4628": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7310,
        7314
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4629": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7316,
        7323
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4630": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7302,
        7309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8F"
    },
    "4633": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7302,
        7324
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4634": {
      "branch": 54,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7302,
        7324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4635": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7298,
        7447
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4636": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7298,
        7447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x785"
    },
    "4639": {
      "branch": 54,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7298,
        7447
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4640": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7372,
        7377
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x0"
    },
    "4642": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4643": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4644": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4645": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4647": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4648": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4649": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4650": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4652": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4653": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4654": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4661": {
      "op": "SHL"
    },
    "4662": {
      "op": "SUB"
    },
    "4663": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4664": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "AND",
      "path": "0"
    },
    "4665": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4666": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4667": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4668": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4669": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4670": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4671": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4672": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7369
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4673": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7377
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4674": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7377
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4677": {
      "op": "NOT"
    },
    "4678": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7377
      ],
      "op": "AND",
      "path": "0"
    },
    "4679": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4680": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7377
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4681": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7396,
        7436
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 45
    },
    "4682": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4683": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4684": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4685": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7340,
        7352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4686": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7396,
        7436
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "4719": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7396,
        7436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4720": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7372,
        7377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4721": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7396,
        7436
      ],
      "op": "LOG4",
      "path": "0"
    },
    "4722": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7219,
        7453
      ],
      "op": "POP",
      "path": "0"
    },
    "4723": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7219,
        7453
      ],
      "op": "POP",
      "path": "0"
    },
    "4724": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7219,
        7453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4725": {
      "op": "JUMPDEST"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4728": {
      "op": "PUSH2",
      "value": "0xD88"
    },
    "4731": {
      "op": "DUP4"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4738": {
      "op": "SHL"
    },
    "4739": {
      "op": "SUB"
    },
    "4740": {
      "op": "DUP5"
    },
    "4741": {
      "op": "AND"
    },
    "4742": {
      "op": "PUSH2",
      "value": "0x12B4"
    },
    "4745": {
      "jump": "i",
      "op": "JUMP"
    },
    "4746": {
      "op": "JUMPDEST"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4749": {
      "op": "DUP3"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4752": {
      "op": "ADD"
    },
    "4753": {
      "op": "DUP3"
    },
    "4754": {
      "op": "DUP2"
    },
    "4755": {
      "op": "SLOAD"
    },
    "4756": {
      "op": "DUP2"
    },
    "4757": {
      "op": "LT"
    },
    "4758": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4761": {
      "op": "JUMPI"
    },
    "4762": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4765": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "4768": {
      "jump": "i",
      "op": "JUMP"
    },
    "4769": {
      "op": "JUMPDEST"
    },
    "4770": {
      "op": "SWAP1"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4773": {
      "op": "MSTORE"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4778": {
      "op": "KECCAK256"
    },
    "4779": {
      "op": "ADD"
    },
    "4780": {
      "op": "SLOAD"
    },
    "4781": {
      "op": "SWAP1"
    },
    "4782": {
      "op": "POP"
    },
    "4783": {
      "op": "SWAP3"
    },
    "4784": {
      "op": "SWAP2"
    },
    "4785": {
      "op": "POP"
    },
    "4786": {
      "op": "POP"
    },
    "4787": {
      "jump": "o",
      "op": "JUMP"
    },
    "4788": {
      "op": "JUMPDEST"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4791": {
      "op": "DUP2"
    },
    "4792": {
      "op": "DUP2"
    },
    "4793": {
      "op": "MSTORE"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4796": {
      "op": "DUP4"
    },
    "4797": {
      "op": "ADD"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4800": {
      "op": "MSTORE"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4803": {
      "op": "DUP2"
    },
    "4804": {
      "op": "KECCAK256"
    },
    "4805": {
      "op": "SLOAD"
    },
    "4806": {
      "op": "DUP1"
    },
    "4807": {
      "op": "ISZERO"
    },
    "4808": {
      "op": "PUSH2",
      "value": "0x139D"
    },
    "4811": {
      "op": "JUMPI"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4814": {
      "op": "PUSH2",
      "value": "0x12D8"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4819": {
      "op": "DUP4"
    },
    "4820": {
      "op": "PUSH2",
      "value": "0x1729"
    },
    "4823": {
      "jump": "i",
      "op": "JUMP"
    },
    "4824": {
      "op": "JUMPDEST"
    },
    "4825": {
      "op": "DUP6"
    },
    "4826": {
      "op": "SLOAD"
    },
    "4827": {
      "op": "SWAP1"
    },
    "4828": {
      "op": "SWAP2"
    },
    "4829": {
      "op": "POP"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4832": {
      "op": "SWAP1"
    },
    "4833": {
      "op": "PUSH2",
      "value": "0x12EC"
    },
    "4836": {
      "op": "SWAP1"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4839": {
      "op": "SWAP1"
    },
    "4840": {
      "op": "PUSH2",
      "value": "0x1729"
    },
    "4843": {
      "jump": "i",
      "op": "JUMP"
    },
    "4844": {
      "op": "JUMPDEST"
    },
    "4845": {
      "op": "SWAP1"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "op": "DUP2"
    },
    "4848": {
      "op": "DUP2"
    },
    "4849": {
      "op": "EQ"
    },
    "4850": {
      "op": "PUSH2",
      "value": "0x1351"
    },
    "4853": {
      "op": "JUMPI"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4856": {
      "op": "DUP7"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4859": {
      "op": "ADD"
    },
    "4860": {
      "op": "DUP3"
    },
    "4861": {
      "op": "DUP2"
    },
    "4862": {
      "op": "SLOAD"
    },
    "4863": {
      "op": "DUP2"
    },
    "4864": {
      "op": "LT"
    },
    "4865": {
      "op": "PUSH2",
      "value": "0x130C"
    },
    "4868": {
      "op": "JUMPI"
    },
    "4869": {
      "op": "PUSH2",
      "value": "0x130C"
    },
    "4872": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "4875": {
      "jump": "i",
      "op": "JUMP"
    },
    "4876": {
      "op": "JUMPDEST"
    },
    "4877": {
      "op": "SWAP1"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4880": {
      "op": "MSTORE"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4885": {
      "op": "KECCAK256"
    },
    "4886": {
      "op": "ADD"
    },
    "4887": {
      "op": "SLOAD"
    },
    "4888": {
      "op": "SWAP1"
    },
    "4889": {
      "op": "POP"
    },
    "4890": {
      "op": "DUP1"
    },
    "4891": {
      "op": "DUP8"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4894": {
      "op": "ADD"
    },
    "4895": {
      "op": "DUP5"
    },
    "4896": {
      "op": "DUP2"
    },
    "4897": {
      "op": "SLOAD"
    },
    "4898": {
      "op": "DUP2"
    },
    "4899": {
      "op": "LT"
    },
    "4900": {
      "op": "PUSH2",
      "value": "0x132F"
    },
    "4903": {
      "op": "JUMPI"
    },
    "4904": {
      "op": "PUSH2",
      "value": "0x132F"
    },
    "4907": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "4910": {
      "jump": "i",
      "op": "JUMP"
    },
    "4911": {
      "op": "JUMPDEST"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4914": {
      "op": "SWAP2"
    },
    "4915": {
      "op": "DUP3"
    },
    "4916": {
      "op": "MSTORE"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4919": {
      "op": "DUP1"
    },
    "4920": {
      "op": "DUP4"
    },
    "4921": {
      "op": "KECCAK256"
    },
    "4922": {
      "op": "SWAP1"
    },
    "4923": {
      "op": "SWAP2"
    },
    "4924": {
      "op": "ADD"
    },
    "4925": {
      "op": "SWAP3"
    },
    "4926": {
      "op": "SWAP1"
    },
    "4927": {
      "op": "SWAP3"
    },
    "4928": {
      "op": "SSTORE"
    },
    "4929": {
      "op": "SWAP2"
    },
    "4930": {
      "op": "DUP3"
    },
    "4931": {
      "op": "MSTORE"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4934": {
      "op": "DUP9"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "SWAP1"
    },
    "4937": {
      "op": "MSTORE"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4940": {
      "op": "SWAP1"
    },
    "4941": {
      "op": "KECCAK256"
    },
    "4942": {
      "op": "DUP4"
    },
    "4943": {
      "op": "SWAP1"
    },
    "4944": {
      "op": "SSTORE"
    },
    "4945": {
      "op": "JUMPDEST"
    },
    "4946": {
      "op": "DUP6"
    },
    "4947": {
      "op": "SLOAD"
    },
    "4948": {
      "op": "DUP7"
    },
    "4949": {
      "op": "SWAP1"
    },
    "4950": {
      "op": "DUP1"
    },
    "4951": {
      "op": "PUSH2",
      "value": "0x1362"
    },
    "4954": {
      "op": "JUMPI"
    },
    "4955": {
      "op": "PUSH2",
      "value": "0x1362"
    },
    "4958": {
      "op": "PUSH2",
      "value": "0x189B"
    },
    "4961": {
      "jump": "i",
      "op": "JUMP"
    },
    "4962": {
      "op": "JUMPDEST"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4965": {
      "op": "SWAP1"
    },
    "4966": {
      "op": "SUB"
    },
    "4967": {
      "op": "DUP2"
    },
    "4968": {
      "op": "DUP2"
    },
    "4969": {
      "op": "SWAP1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4972": {
      "op": "MSTORE"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4977": {
      "op": "KECCAK256"
    },
    "4978": {
      "op": "ADD"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4981": {
      "op": "SWAP1"
    },
    "4982": {
      "op": "SSTORE"
    },
    "4983": {
      "op": "SWAP1"
    },
    "4984": {
      "op": "SSTORE"
    },
    "4985": {
      "op": "DUP6"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4988": {
      "op": "ADD"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4991": {
      "op": "DUP7"
    },
    "4992": {
      "op": "DUP2"
    },
    "4993": {
      "op": "MSTORE"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4996": {
      "op": "ADD"
    },
    "4997": {
      "op": "SWAP1"
    },
    "4998": {
      "op": "DUP2"
    },
    "4999": {
      "op": "MSTORE"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5002": {
      "op": "ADD"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5005": {
      "op": "KECCAK256"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5008": {
      "op": "SWAP1"
    },
    "5009": {
      "op": "SSTORE"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5012": {
      "op": "SWAP4"
    },
    "5013": {
      "op": "POP"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "5020": {
      "op": "JUMP"
    },
    "5021": {
      "op": "JUMPDEST"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5024": {
      "op": "SWAP2"
    },
    "5025": {
      "op": "POP"
    },
    "5026": {
      "op": "POP"
    },
    "5027": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "5030": {
      "op": "JUMP"
    },
    "5031": {
      "op": "JUMPDEST"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5036": {
      "op": "DUP3"
    },
    "5037": {
      "op": "DUP5"
    },
    "5038": {
      "op": "SUB"
    },
    "5039": {
      "op": "SLT"
    },
    "5040": {
      "op": "ISZERO"
    },
    "5041": {
      "op": "PUSH2",
      "value": "0x13B9"
    },
    "5044": {
      "op": "JUMPI"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5047": {
      "op": "DUP1"
    },
    "5048": {
      "op": "REVERT"
    },
    "5049": {
      "op": "JUMPDEST"
    },
    "5050": {
      "op": "DUP2"
    },
    "5051": {
      "op": "CALLDATALOAD"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5058": {
      "op": "SHL"
    },
    "5059": {
      "op": "SUB"
    },
    "5060": {
      "op": "NOT"
    },
    "5061": {
      "op": "DUP2"
    },
    "5062": {
      "op": "AND"
    },
    "5063": {
      "op": "DUP2"
    },
    "5064": {
      "op": "EQ"
    },
    "5065": {
      "op": "PUSH2",
      "value": "0xD88"
    },
    "5068": {
      "op": "JUMPI"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5071": {
      "op": "DUP1"
    },
    "5072": {
      "op": "REVERT"
    },
    "5073": {
      "op": "JUMPDEST"
    },
    "5074": {
      "op": "DUP1"
    },
    "5075": {
      "op": "CALLDATALOAD"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5082": {
      "op": "SHL"
    },
    "5083": {
      "op": "SUB"
    },
    "5084": {
      "op": "DUP2"
    },
    "5085": {
      "op": "AND"
    },
    "5086": {
      "op": "DUP2"
    },
    "5087": {
      "op": "EQ"
    },
    "5088": {
      "op": "PUSH2",
      "value": "0x13E8"
    },
    "5091": {
      "op": "JUMPI"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5094": {
      "op": "DUP1"
    },
    "5095": {
      "op": "REVERT"
    },
    "5096": {
      "op": "JUMPDEST"
    },
    "5097": {
      "op": "SWAP2"
    },
    "5098": {
      "op": "SWAP1"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "jump": "o",
      "op": "JUMP"
    },
    "5101": {
      "op": "JUMPDEST"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5104": {
      "op": "DUP1"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5107": {
      "op": "DUP1"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5110": {
      "op": "DUP6"
    },
    "5111": {
      "op": "DUP8"
    },
    "5112": {
      "op": "SUB"
    },
    "5113": {
      "op": "SLT"
    },
    "5114": {
      "op": "ISZERO"
    },
    "5115": {
      "op": "PUSH2",
      "value": "0x1403"
    },
    "5118": {
      "op": "JUMPI"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5121": {
      "op": "DUP1"
    },
    "5122": {
      "op": "REVERT"
    },
    "5123": {
      "op": "JUMPDEST"
    },
    "5124": {
      "op": "PUSH2",
      "value": "0x140C"
    },
    "5127": {
      "op": "DUP6"
    },
    "5128": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5131": {
      "jump": "i",
      "op": "JUMP"
    },
    "5132": {
      "op": "JUMPDEST"
    },
    "5133": {
      "op": "SWAP4"
    },
    "5134": {
      "op": "POP"
    },
    "5135": {
      "op": "PUSH2",
      "value": "0x141A"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5140": {
      "op": "DUP7"
    },
    "5141": {
      "op": "ADD"
    },
    "5142": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5145": {
      "jump": "i",
      "op": "JUMP"
    },
    "5146": {
      "op": "JUMPDEST"
    },
    "5147": {
      "op": "SWAP3"
    },
    "5148": {
      "op": "POP"
    },
    "5149": {
      "op": "PUSH2",
      "value": "0x1428"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5154": {
      "op": "DUP7"
    },
    "5155": {
      "op": "ADD"
    },
    "5156": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5159": {
      "jump": "i",
      "op": "JUMP"
    },
    "5160": {
      "op": "JUMPDEST"
    },
    "5161": {
      "op": "SWAP4"
    },
    "5162": {
      "op": "SWAP7"
    },
    "5163": {
      "op": "SWAP3"
    },
    "5164": {
      "op": "SWAP6"
    },
    "5165": {
      "op": "POP"
    },
    "5166": {
      "op": "SWAP3"
    },
    "5167": {
      "op": "SWAP4"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5170": {
      "op": "ADD"
    },
    "5171": {
      "op": "CALLDATALOAD"
    },
    "5172": {
      "op": "SWAP3"
    },
    "5173": {
      "op": "POP"
    },
    "5174": {
      "op": "POP"
    },
    "5175": {
      "jump": "o",
      "op": "JUMP"
    },
    "5176": {
      "op": "JUMPDEST"
    },
    "5177": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5184": {
      "op": "SHL"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5187": {
      "op": "MSTORE"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5192": {
      "op": "MSTORE"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5197": {
      "op": "REVERT"
    },
    "5198": {
      "op": "JUMPDEST"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5201": {
      "op": "DUP1"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5204": {
      "op": "DUP1"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5207": {
      "op": "DUP6"
    },
    "5208": {
      "op": "DUP8"
    },
    "5209": {
      "op": "SUB"
    },
    "5210": {
      "op": "SLT"
    },
    "5211": {
      "op": "ISZERO"
    },
    "5212": {
      "op": "PUSH2",
      "value": "0x1464"
    },
    "5215": {
      "op": "JUMPI"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5218": {
      "op": "DUP1"
    },
    "5219": {
      "op": "REVERT"
    },
    "5220": {
      "op": "JUMPDEST"
    },
    "5221": {
      "op": "PUSH2",
      "value": "0x146D"
    },
    "5224": {
      "op": "DUP6"
    },
    "5225": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5228": {
      "jump": "i",
      "op": "JUMP"
    },
    "5229": {
      "op": "JUMPDEST"
    },
    "5230": {
      "op": "SWAP4"
    },
    "5231": {
      "op": "POP"
    },
    "5232": {
      "op": "PUSH2",
      "value": "0x147B"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5237": {
      "op": "DUP7"
    },
    "5238": {
      "op": "ADD"
    },
    "5239": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5242": {
      "jump": "i",
      "op": "JUMP"
    },
    "5243": {
      "op": "JUMPDEST"
    },
    "5244": {
      "op": "SWAP3"
    },
    "5245": {
      "op": "POP"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5248": {
      "op": "DUP6"
    },
    "5249": {
      "op": "ADD"
    },
    "5250": {
      "op": "CALLDATALOAD"
    },
    "5251": {
      "op": "SWAP2"
    },
    "5252": {
      "op": "POP"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5255": {
      "op": "DUP6"
    },
    "5256": {
      "op": "ADD"
    },
    "5257": {
      "op": "CALLDATALOAD"
    },
    "5258": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5267": {
      "op": "DUP1"
    },
    "5268": {
      "op": "DUP3"
    },
    "5269": {
      "op": "GT"
    },
    "5270": {
      "op": "ISZERO"
    },
    "5271": {
      "op": "PUSH2",
      "value": "0x149F"
    },
    "5274": {
      "op": "JUMPI"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5277": {
      "op": "DUP1"
    },
    "5278": {
      "op": "REVERT"
    },
    "5279": {
      "op": "JUMPDEST"
    },
    "5280": {
      "op": "DUP2"
    },
    "5281": {
      "op": "DUP8"
    },
    "5282": {
      "op": "ADD"
    },
    "5283": {
      "op": "SWAP2"
    },
    "5284": {
      "op": "POP"
    },
    "5285": {
      "op": "DUP8"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5288": {
      "op": "DUP4"
    },
    "5289": {
      "op": "ADD"
    },
    "5290": {
      "op": "SLT"
    },
    "5291": {
      "op": "PUSH2",
      "value": "0x14B3"
    },
    "5294": {
      "op": "JUMPI"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5297": {
      "op": "DUP1"
    },
    "5298": {
      "op": "REVERT"
    },
    "5299": {
      "op": "JUMPDEST"
    },
    "5300": {
      "op": "DUP2"
    },
    "5301": {
      "op": "CALLDATALOAD"
    },
    "5302": {
      "op": "DUP2"
    },
    "5303": {
      "op": "DUP2"
    },
    "5304": {
      "op": "GT"
    },
    "5305": {
      "op": "ISZERO"
    },
    "5306": {
      "op": "PUSH2",
      "value": "0x14C5"
    },
    "5309": {
      "op": "JUMPI"
    },
    "5310": {
      "op": "PUSH2",
      "value": "0x14C5"
    },
    "5313": {
      "op": "PUSH2",
      "value": "0x1438"
    },
    "5316": {
      "jump": "i",
      "op": "JUMP"
    },
    "5317": {
      "op": "JUMPDEST"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5320": {
      "op": "MLOAD"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5323": {
      "op": "DUP3"
    },
    "5324": {
      "op": "ADD"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5327": {
      "op": "NOT"
    },
    "5328": {
      "op": "SWAP1"
    },
    "5329": {
      "op": "DUP2"
    },
    "5330": {
      "op": "AND"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5333": {
      "op": "ADD"
    },
    "5334": {
      "op": "AND"
    },
    "5335": {
      "op": "DUP2"
    },
    "5336": {
      "op": "ADD"
    },
    "5337": {
      "op": "SWAP1"
    },
    "5338": {
      "op": "DUP4"
    },
    "5339": {
      "op": "DUP3"
    },
    "5340": {
      "op": "GT"
    },
    "5341": {
      "op": "DUP2"
    },
    "5342": {
      "op": "DUP4"
    },
    "5343": {
      "op": "LT"
    },
    "5344": {
      "op": "OR"
    },
    "5345": {
      "op": "ISZERO"
    },
    "5346": {
      "op": "PUSH2",
      "value": "0x14ED"
    },
    "5349": {
      "op": "JUMPI"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x14ED"
    },
    "5353": {
      "op": "PUSH2",
      "value": "0x1438"
    },
    "5356": {
      "jump": "i",
      "op": "JUMP"
    },
    "5357": {
      "op": "JUMPDEST"
    },
    "5358": {
      "op": "DUP2"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5361": {
      "op": "MSTORE"
    },
    "5362": {
      "op": "DUP3"
    },
    "5363": {
      "op": "DUP2"
    },
    "5364": {
      "op": "MSTORE"
    },
    "5365": {
      "op": "DUP11"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5368": {
      "op": "DUP5"
    },
    "5369": {
      "op": "DUP8"
    },
    "5370": {
      "op": "ADD"
    },
    "5371": {
      "op": "ADD"
    },
    "5372": {
      "op": "GT"
    },
    "5373": {
      "op": "ISZERO"
    },
    "5374": {
      "op": "PUSH2",
      "value": "0x1506"
    },
    "5377": {
      "op": "JUMPI"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5380": {
      "op": "DUP1"
    },
    "5381": {
      "op": "REVERT"
    },
    "5382": {
      "op": "JUMPDEST"
    },
    "5383": {
      "op": "DUP3"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5386": {
      "op": "DUP7"
    },
    "5387": {
      "op": "ADD"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5390": {
      "op": "DUP4"
    },
    "5391": {
      "op": "ADD"
    },
    "5392": {
      "op": "CALLDATACOPY"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5397": {
      "op": "DUP5"
    },
    "5398": {
      "op": "DUP4"
    },
    "5399": {
      "op": "ADD"
    },
    "5400": {
      "op": "ADD"
    },
    "5401": {
      "op": "MSTORE"
    },
    "5402": {
      "op": "DUP1"
    },
    "5403": {
      "op": "SWAP6"
    },
    "5404": {
      "op": "POP"
    },
    "5405": {
      "op": "POP"
    },
    "5406": {
      "op": "POP"
    },
    "5407": {
      "op": "POP"
    },
    "5408": {
      "op": "POP"
    },
    "5409": {
      "op": "POP"
    },
    "5410": {
      "op": "SWAP3"
    },
    "5411": {
      "op": "SWAP6"
    },
    "5412": {
      "op": "SWAP2"
    },
    "5413": {
      "op": "SWAP5"
    },
    "5414": {
      "op": "POP"
    },
    "5415": {
      "op": "SWAP3"
    },
    "5416": {
      "op": "POP"
    },
    "5417": {
      "jump": "o",
      "op": "JUMP"
    },
    "5418": {
      "op": "JUMPDEST"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5421": {
      "op": "DUP1"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5426": {
      "op": "DUP5"
    },
    "5427": {
      "op": "DUP7"
    },
    "5428": {
      "op": "SUB"
    },
    "5429": {
      "op": "SLT"
    },
    "5430": {
      "op": "ISZERO"
    },
    "5431": {
      "op": "PUSH2",
      "value": "0x153F"
    },
    "5434": {
      "op": "JUMPI"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5437": {
      "op": "DUP1"
    },
    "5438": {
      "op": "REVERT"
    },
    "5439": {
      "op": "JUMPDEST"
    },
    "5440": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5443": {
      "op": "DUP5"
    },
    "5444": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5447": {
      "jump": "i",
      "op": "JUMP"
    },
    "5448": {
      "op": "JUMPDEST"
    },
    "5449": {
      "op": "SWAP3"
    },
    "5450": {
      "op": "POP"
    },
    "5451": {
      "op": "PUSH2",
      "value": "0x1556"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5456": {
      "op": "DUP6"
    },
    "5457": {
      "op": "ADD"
    },
    "5458": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5461": {
      "jump": "i",
      "op": "JUMP"
    },
    "5462": {
      "op": "JUMPDEST"
    },
    "5463": {
      "op": "SWAP2"
    },
    "5464": {
      "op": "POP"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5467": {
      "op": "DUP5"
    },
    "5468": {
      "op": "ADD"
    },
    "5469": {
      "op": "CALLDATALOAD"
    },
    "5470": {
      "op": "SWAP1"
    },
    "5471": {
      "op": "POP"
    },
    "5472": {
      "op": "SWAP3"
    },
    "5473": {
      "op": "POP"
    },
    "5474": {
      "op": "SWAP3"
    },
    "5475": {
      "op": "POP"
    },
    "5476": {
      "op": "SWAP3"
    },
    "5477": {
      "jump": "o",
      "op": "JUMP"
    },
    "5478": {
      "op": "JUMPDEST"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5483": {
      "op": "DUP3"
    },
    "5484": {
      "op": "DUP5"
    },
    "5485": {
      "op": "SUB"
    },
    "5486": {
      "op": "SLT"
    },
    "5487": {
      "op": "ISZERO"
    },
    "5488": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5491": {
      "op": "JUMPI"
    },
    "5492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5494": {
      "op": "DUP1"
    },
    "5495": {
      "op": "REVERT"
    },
    "5496": {
      "op": "JUMPDEST"
    },
    "5497": {
      "op": "POP"
    },
    "5498": {
      "op": "CALLDATALOAD"
    },
    "5499": {
      "op": "SWAP2"
    },
    "5500": {
      "op": "SWAP1"
    },
    "5501": {
      "op": "POP"
    },
    "5502": {
      "jump": "o",
      "op": "JUMP"
    },
    "5503": {
      "op": "JUMPDEST"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5506": {
      "op": "DUP1"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5509": {
      "op": "DUP4"
    },
    "5510": {
      "op": "DUP6"
    },
    "5511": {
      "op": "SUB"
    },
    "5512": {
      "op": "SLT"
    },
    "5513": {
      "op": "ISZERO"
    },
    "5514": {
      "op": "PUSH2",
      "value": "0x1592"
    },
    "5517": {
      "op": "JUMPI"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5520": {
      "op": "DUP1"
    },
    "5521": {
      "op": "REVERT"
    },
    "5522": {
      "op": "JUMPDEST"
    },
    "5523": {
      "op": "DUP3"
    },
    "5524": {
      "op": "CALLDATALOAD"
    },
    "5525": {
      "op": "SWAP2"
    },
    "5526": {
      "op": "POP"
    },
    "5527": {
      "op": "PUSH2",
      "value": "0x15A2"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5532": {
      "op": "DUP5"
    },
    "5533": {
      "op": "ADD"
    },
    "5534": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5537": {
      "jump": "i",
      "op": "JUMP"
    },
    "5538": {
      "op": "JUMPDEST"
    },
    "5539": {
      "op": "SWAP1"
    },
    "5540": {
      "op": "POP"
    },
    "5541": {
      "op": "SWAP3"
    },
    "5542": {
      "op": "POP"
    },
    "5543": {
      "op": "SWAP3"
    },
    "5544": {
      "op": "SWAP1"
    },
    "5545": {
      "op": "POP"
    },
    "5546": {
      "jump": "o",
      "op": "JUMP"
    },
    "5547": {
      "op": "JUMPDEST"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5550": {
      "op": "DUP1"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5553": {
      "op": "DUP1"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5556": {
      "op": "DUP6"
    },
    "5557": {
      "op": "DUP8"
    },
    "5558": {
      "op": "SUB"
    },
    "5559": {
      "op": "SLT"
    },
    "5560": {
      "op": "ISZERO"
    },
    "5561": {
      "op": "PUSH2",
      "value": "0x15C1"
    },
    "5564": {
      "op": "JUMPI"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5567": {
      "op": "DUP1"
    },
    "5568": {
      "op": "REVERT"
    },
    "5569": {
      "op": "JUMPDEST"
    },
    "5570": {
      "op": "PUSH2",
      "value": "0x15CA"
    },
    "5573": {
      "op": "DUP6"
    },
    "5574": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5577": {
      "jump": "i",
      "op": "JUMP"
    },
    "5578": {
      "op": "JUMPDEST"
    },
    "5579": {
      "op": "SWAP4"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "op": "PUSH2",
      "value": "0x15D8"
    },
    "5584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5586": {
      "op": "DUP7"
    },
    "5587": {
      "op": "ADD"
    },
    "5588": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5591": {
      "jump": "i",
      "op": "JUMP"
    },
    "5592": {
      "op": "JUMPDEST"
    },
    "5593": {
      "op": "SWAP4"
    },
    "5594": {
      "op": "SWAP7"
    },
    "5595": {
      "op": "SWAP4"
    },
    "5596": {
      "op": "SWAP6"
    },
    "5597": {
      "op": "POP"
    },
    "5598": {
      "op": "POP"
    },
    "5599": {
      "op": "POP"
    },
    "5600": {
      "op": "POP"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5603": {
      "op": "DUP3"
    },
    "5604": {
      "op": "ADD"
    },
    "5605": {
      "op": "CALLDATALOAD"
    },
    "5606": {
      "op": "SWAP2"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5609": {
      "op": "ADD"
    },
    "5610": {
      "op": "CALLDATALOAD"
    },
    "5611": {
      "op": "SWAP1"
    },
    "5612": {
      "jump": "o",
      "op": "JUMP"
    },
    "5613": {
      "op": "JUMPDEST"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5616": {
      "op": "DUP1"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5619": {
      "op": "DUP1"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5624": {
      "op": "DUP7"
    },
    "5625": {
      "op": "DUP9"
    },
    "5626": {
      "op": "SUB"
    },
    "5627": {
      "op": "SLT"
    },
    "5628": {
      "op": "ISZERO"
    },
    "5629": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "5632": {
      "op": "JUMPI"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5635": {
      "op": "DUP1"
    },
    "5636": {
      "op": "REVERT"
    },
    "5637": {
      "op": "JUMPDEST"
    },
    "5638": {
      "op": "PUSH2",
      "value": "0x160E"
    },
    "5641": {
      "op": "DUP7"
    },
    "5642": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5645": {
      "jump": "i",
      "op": "JUMP"
    },
    "5646": {
      "op": "JUMPDEST"
    },
    "5647": {
      "op": "SWAP5"
    },
    "5648": {
      "op": "POP"
    },
    "5649": {
      "op": "PUSH2",
      "value": "0x161C"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5654": {
      "op": "DUP8"
    },
    "5655": {
      "op": "ADD"
    },
    "5656": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5659": {
      "jump": "i",
      "op": "JUMP"
    },
    "5660": {
      "op": "JUMPDEST"
    },
    "5661": {
      "op": "SWAP4"
    },
    "5662": {
      "op": "POP"
    },
    "5663": {
      "op": "PUSH2",
      "value": "0x162A"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5668": {
      "op": "DUP8"
    },
    "5669": {
      "op": "ADD"
    },
    "5670": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5673": {
      "jump": "i",
      "op": "JUMP"
    },
    "5674": {
      "op": "JUMPDEST"
    },
    "5675": {
      "op": "SWAP5"
    },
    "5676": {
      "op": "SWAP8"
    },
    "5677": {
      "op": "SWAP4"
    },
    "5678": {
      "op": "SWAP7"
    },
    "5679": {
      "op": "POP"
    },
    "5680": {
      "op": "SWAP4"
    },
    "5681": {
      "op": "SWAP5"
    },
    "5682": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5684": {
      "op": "DUP2"
    },
    "5685": {
      "op": "ADD"
    },
    "5686": {
      "op": "CALLDATALOAD"
    },
    "5687": {
      "op": "SWAP5"
    },
    "5688": {
      "op": "POP"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5691": {
      "op": "ADD"
    },
    "5692": {
      "op": "CALLDATALOAD"
    },
    "5693": {
      "op": "SWAP3"
    },
    "5694": {
      "op": "SWAP2"
    },
    "5695": {
      "op": "POP"
    },
    "5696": {
      "op": "POP"
    },
    "5697": {
      "jump": "o",
      "op": "JUMP"
    },
    "5698": {
      "op": "JUMPDEST"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5703": {
      "op": "DUP3"
    },
    "5704": {
      "op": "DUP5"
    },
    "5705": {
      "op": "SUB"
    },
    "5706": {
      "op": "SLT"
    },
    "5707": {
      "op": "ISZERO"
    },
    "5708": {
      "op": "PUSH2",
      "value": "0x1654"
    },
    "5711": {
      "op": "JUMPI"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5714": {
      "op": "DUP1"
    },
    "5715": {
      "op": "REVERT"
    },
    "5716": {
      "op": "JUMPDEST"
    },
    "5717": {
      "op": "PUSH2",
      "value": "0xD88"
    },
    "5720": {
      "op": "DUP3"
    },
    "5721": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5724": {
      "jump": "i",
      "op": "JUMP"
    },
    "5725": {
      "op": "JUMPDEST"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5728": {
      "op": "DUP1"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5731": {
      "op": "DUP4"
    },
    "5732": {
      "op": "DUP6"
    },
    "5733": {
      "op": "SUB"
    },
    "5734": {
      "op": "SLT"
    },
    "5735": {
      "op": "ISZERO"
    },
    "5736": {
      "op": "PUSH2",
      "value": "0x1670"
    },
    "5739": {
      "op": "JUMPI"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5742": {
      "op": "DUP1"
    },
    "5743": {
      "op": "REVERT"
    },
    "5744": {
      "op": "JUMPDEST"
    },
    "5745": {
      "op": "POP"
    },
    "5746": {
      "op": "POP"
    },
    "5747": {
      "op": "DUP1"
    },
    "5748": {
      "op": "CALLDATALOAD"
    },
    "5749": {
      "op": "SWAP3"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5752": {
      "op": "SWAP1"
    },
    "5753": {
      "op": "SWAP2"
    },
    "5754": {
      "op": "ADD"
    },
    "5755": {
      "op": "CALLDATALOAD"
    },
    "5756": {
      "op": "SWAP2"
    },
    "5757": {
      "op": "POP"
    },
    "5758": {
      "jump": "o",
      "op": "JUMP"
    },
    "5759": {
      "op": "JUMPDEST"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5762": {
      "op": "DUP1"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5765": {
      "op": "DUP4"
    },
    "5766": {
      "op": "DUP6"
    },
    "5767": {
      "op": "SUB"
    },
    "5768": {
      "op": "SLT"
    },
    "5769": {
      "op": "ISZERO"
    },
    "5770": {
      "op": "PUSH2",
      "value": "0x1692"
    },
    "5773": {
      "op": "JUMPI"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5776": {
      "op": "DUP1"
    },
    "5777": {
      "op": "REVERT"
    },
    "5778": {
      "op": "JUMPDEST"
    },
    "5779": {
      "op": "PUSH2",
      "value": "0x169B"
    },
    "5782": {
      "op": "DUP4"
    },
    "5783": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5786": {
      "jump": "i",
      "op": "JUMP"
    },
    "5787": {
      "op": "JUMPDEST"
    },
    "5788": {
      "op": "SWAP5"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5791": {
      "op": "SWAP4"
    },
    "5792": {
      "op": "SWAP1"
    },
    "5793": {
      "op": "SWAP4"
    },
    "5794": {
      "op": "ADD"
    },
    "5795": {
      "op": "CALLDATALOAD"
    },
    "5796": {
      "op": "SWAP4"
    },
    "5797": {
      "op": "POP"
    },
    "5798": {
      "op": "POP"
    },
    "5799": {
      "op": "POP"
    },
    "5800": {
      "jump": "o",
      "op": "JUMP"
    },
    "5801": {
      "op": "JUMPDEST"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5808": {
      "op": "SHL"
    },
    "5809": {
      "op": "SUB"
    },
    "5810": {
      "op": "SWAP4"
    },
    "5811": {
      "op": "DUP5"
    },
    "5812": {
      "op": "AND"
    },
    "5813": {
      "op": "DUP2"
    },
    "5814": {
      "op": "MSTORE"
    },
    "5815": {
      "op": "SWAP2"
    },
    "5816": {
      "op": "SWAP1"
    },
    "5817": {
      "op": "SWAP3"
    },
    "5818": {
      "op": "AND"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5821": {
      "op": "DUP3"
    },
    "5822": {
      "op": "ADD"
    },
    "5823": {
      "op": "MSTORE"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5826": {
      "op": "DUP2"
    },
    "5827": {
      "op": "ADD"
    },
    "5828": {
      "op": "SWAP2"
    },
    "5829": {
      "op": "SWAP1"
    },
    "5830": {
      "op": "SWAP2"
    },
    "5831": {
      "op": "MSTORE"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5834": {
      "op": "ADD"
    },
    "5835": {
      "op": "SWAP1"
    },
    "5836": {
      "jump": "o",
      "op": "JUMP"
    },
    "5837": {
      "op": "JUMPDEST"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5840": {
      "op": "DUP1"
    },
    "5841": {
      "op": "DUP3"
    },
    "5842": {
      "op": "MSTORE"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5845": {
      "op": "SWAP1"
    },
    "5846": {
      "op": "DUP3"
    },
    "5847": {
      "op": "ADD"
    },
    "5848": {
      "op": "MSTORE"
    },
    "5849": {
      "op": "PUSH20",
      "value": "0x6D75737420686176652061646D696E20726F6C65"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5872": {
      "op": "SHL"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5875": {
      "op": "DUP3"
    },
    "5876": {
      "op": "ADD"
    },
    "5877": {
      "op": "MSTORE"
    },
    "5878": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5880": {
      "op": "ADD"
    },
    "5881": {
      "op": "SWAP1"
    },
    "5882": {
      "jump": "o",
      "op": "JUMP"
    },
    "5883": {
      "op": "JUMPDEST"
    },
    "5884": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5891": {
      "op": "SHL"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5894": {
      "op": "MSTORE"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5899": {
      "op": "MSTORE"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5904": {
      "op": "REVERT"
    },
    "5905": {
      "op": "JUMPDEST"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5908": {
      "op": "DUP3"
    },
    "5909": {
      "op": "NOT"
    },
    "5910": {
      "op": "DUP3"
    },
    "5911": {
      "op": "GT"
    },
    "5912": {
      "op": "ISZERO"
    },
    "5913": {
      "op": "PUSH2",
      "value": "0x1724"
    },
    "5916": {
      "op": "JUMPI"
    },
    "5917": {
      "op": "PUSH2",
      "value": "0x1724"
    },
    "5920": {
      "op": "PUSH2",
      "value": "0x16FB"
    },
    "5923": {
      "jump": "i",
      "op": "JUMP"
    },
    "5924": {
      "op": "JUMPDEST"
    },
    "5925": {
      "op": "POP"
    },
    "5926": {
      "op": "ADD"
    },
    "5927": {
      "op": "SWAP1"
    },
    "5928": {
      "jump": "o",
      "op": "JUMP"
    },
    "5929": {
      "op": "JUMPDEST"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5932": {
      "op": "DUP3"
    },
    "5933": {
      "op": "DUP3"
    },
    "5934": {
      "op": "LT"
    },
    "5935": {
      "op": "ISZERO"
    },
    "5936": {
      "op": "PUSH2",
      "value": "0x173B"
    },
    "5939": {
      "op": "JUMPI"
    },
    "5940": {
      "op": "PUSH2",
      "value": "0x173B"
    },
    "5943": {
      "op": "PUSH2",
      "value": "0x16FB"
    },
    "5946": {
      "jump": "i",
      "op": "JUMP"
    },
    "5947": {
      "op": "JUMPDEST"
    },
    "5948": {
      "op": "POP"
    },
    "5949": {
      "op": "SUB"
    },
    "5950": {
      "op": "SWAP1"
    },
    "5951": {
      "jump": "o",
      "op": "JUMP"
    },
    "5952": {
      "op": "JUMPDEST"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5957": {
      "op": "DUP3"
    },
    "5958": {
      "op": "DUP5"
    },
    "5959": {
      "op": "SUB"
    },
    "5960": {
      "op": "SLT"
    },
    "5961": {
      "op": "ISZERO"
    },
    "5962": {
      "op": "PUSH2",
      "value": "0x1752"
    },
    "5965": {
      "op": "JUMPI"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5968": {
      "op": "DUP1"
    },
    "5969": {
      "op": "REVERT"
    },
    "5970": {
      "op": "JUMPDEST"
    },
    "5971": {
      "op": "POP"
    },
    "5972": {
      "op": "MLOAD"
    },
    "5973": {
      "op": "SWAP2"
    },
    "5974": {
      "op": "SWAP1"
    },
    "5975": {
      "op": "POP"
    },
    "5976": {
      "jump": "o",
      "op": "JUMP"
    },
    "5977": {
      "op": "JUMPDEST"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5982": {
      "op": "DUP3"
    },
    "5983": {
      "op": "DUP5"
    },
    "5984": {
      "op": "SUB"
    },
    "5985": {
      "op": "SLT"
    },
    "5986": {
      "op": "ISZERO"
    },
    "5987": {
      "op": "PUSH2",
      "value": "0x176B"
    },
    "5990": {
      "op": "JUMPI"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5993": {
      "op": "DUP1"
    },
    "5994": {
      "op": "REVERT"
    },
    "5995": {
      "op": "JUMPDEST"
    },
    "5996": {
      "op": "DUP2"
    },
    "5997": {
      "op": "MLOAD"
    },
    "5998": {
      "op": "DUP1"
    },
    "5999": {
      "op": "ISZERO"
    },
    "6000": {
      "op": "ISZERO"
    },
    "6001": {
      "op": "DUP2"
    },
    "6002": {
      "op": "EQ"
    },
    "6003": {
      "op": "PUSH2",
      "value": "0xD88"
    },
    "6006": {
      "op": "JUMPI"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6009": {
      "op": "DUP1"
    },
    "6010": {
      "op": "REVERT"
    },
    "6011": {
      "op": "JUMPDEST"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6014": {
      "op": "JUMPDEST"
    },
    "6015": {
      "op": "DUP4"
    },
    "6016": {
      "op": "DUP2"
    },
    "6017": {
      "op": "LT"
    },
    "6018": {
      "op": "ISZERO"
    },
    "6019": {
      "op": "PUSH2",
      "value": "0x1796"
    },
    "6022": {
      "op": "JUMPI"
    },
    "6023": {
      "op": "DUP2"
    },
    "6024": {
      "op": "DUP2"
    },
    "6025": {
      "op": "ADD"
    },
    "6026": {
      "op": "MLOAD"
    },
    "6027": {
      "op": "DUP4"
    },
    "6028": {
      "op": "DUP3"
    },
    "6029": {
      "op": "ADD"
    },
    "6030": {
      "op": "MSTORE"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6033": {
      "op": "ADD"
    },
    "6034": {
      "op": "PUSH2",
      "value": "0x177E"
    },
    "6037": {
      "op": "JUMP"
    },
    "6038": {
      "op": "JUMPDEST"
    },
    "6039": {
      "op": "DUP4"
    },
    "6040": {
      "op": "DUP2"
    },
    "6041": {
      "op": "GT"
    },
    "6042": {
      "op": "ISZERO"
    },
    "6043": {
      "op": "PUSH2",
      "value": "0xB10"
    },
    "6046": {
      "op": "JUMPI"
    },
    "6047": {
      "op": "POP"
    },
    "6048": {
      "op": "POP"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6051": {
      "op": "SWAP2"
    },
    "6052": {
      "op": "ADD"
    },
    "6053": {
      "op": "MSTORE"
    },
    "6054": {
      "jump": "o",
      "op": "JUMP"
    },
    "6055": {
      "op": "JUMPDEST"
    },
    "6056": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
    },
    "6089": {
      "op": "DUP2"
    },
    "6090": {
      "op": "MSTORE"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6093": {
      "op": "DUP4"
    },
    "6094": {
      "op": "MLOAD"
    },
    "6095": {
      "op": "PUSH2",
      "value": "0x17DF"
    },
    "6098": {
      "op": "DUP2"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6101": {
      "op": "DUP6"
    },
    "6102": {
      "op": "ADD"
    },
    "6103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6105": {
      "op": "DUP9"
    },
    "6106": {
      "op": "ADD"
    },
    "6107": {
      "op": "PUSH2",
      "value": "0x177B"
    },
    "6110": {
      "jump": "i",
      "op": "JUMP"
    },
    "6111": {
      "op": "JUMPDEST"
    },
    "6112": {
      "op": "PUSH17",
      "value": "0x1034B99036B4B9B9B4B733903937B6329"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "6132": {
      "op": "SHL"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6135": {
      "op": "SWAP2"
    },
    "6136": {
      "op": "DUP5"
    },
    "6137": {
      "op": "ADD"
    },
    "6138": {
      "op": "SWAP2"
    },
    "6139": {
      "op": "DUP3"
    },
    "6140": {
      "op": "ADD"
    },
    "6141": {
      "op": "MSTORE"
    },
    "6142": {
      "op": "DUP4"
    },
    "6143": {
      "op": "MLOAD"
    },
    "6144": {
      "op": "PUSH2",
      "value": "0x1810"
    },
    "6147": {
      "op": "DUP2"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6150": {
      "op": "DUP5"
    },
    "6151": {
      "op": "ADD"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6154": {
      "op": "DUP9"
    },
    "6155": {
      "op": "ADD"
    },
    "6156": {
      "op": "PUSH2",
      "value": "0x177B"
    },
    "6159": {
      "jump": "i",
      "op": "JUMP"
    },
    "6160": {
      "op": "JUMPDEST"
    },
    "6161": {
      "op": "ADD"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6164": {
      "op": "ADD"
    },
    "6165": {
      "op": "SWAP5"
    },
    "6166": {
      "op": "SWAP4"
    },
    "6167": {
      "op": "POP"
    },
    "6168": {
      "op": "POP"
    },
    "6169": {
      "op": "POP"
    },
    "6170": {
      "op": "POP"
    },
    "6171": {
      "jump": "o",
      "op": "JUMP"
    },
    "6172": {
      "op": "JUMPDEST"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6175": {
      "op": "DUP2"
    },
    "6176": {
      "op": "MSTORE"
    },
    "6177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6179": {
      "op": "DUP3"
    },
    "6180": {
      "op": "MLOAD"
    },
    "6181": {
      "op": "DUP1"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6184": {
      "op": "DUP5"
    },
    "6185": {
      "op": "ADD"
    },
    "6186": {
      "op": "MSTORE"
    },
    "6187": {
      "op": "PUSH2",
      "value": "0x183B"
    },
    "6190": {
      "op": "DUP2"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6193": {
      "op": "DUP6"
    },
    "6194": {
      "op": "ADD"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6197": {
      "op": "DUP8"
    },
    "6198": {
      "op": "ADD"
    },
    "6199": {
      "op": "PUSH2",
      "value": "0x177B"
    },
    "6202": {
      "jump": "i",
      "op": "JUMP"
    },
    "6203": {
      "op": "JUMPDEST"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6206": {
      "op": "ADD"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6209": {
      "op": "NOT"
    },
    "6210": {
      "op": "AND"
    },
    "6211": {
      "op": "SWAP2"
    },
    "6212": {
      "op": "SWAP1"
    },
    "6213": {
      "op": "SWAP2"
    },
    "6214": {
      "op": "ADD"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6217": {
      "op": "ADD"
    },
    "6218": {
      "op": "SWAP3"
    },
    "6219": {
      "op": "SWAP2"
    },
    "6220": {
      "op": "POP"
    },
    "6221": {
      "op": "POP"
    },
    "6222": {
      "jump": "o",
      "op": "JUMP"
    },
    "6223": {
      "op": "JUMPDEST"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6226": {
      "op": "DUP2"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6229": {
      "op": "NOT"
    },
    "6230": {
      "op": "DIV"
    },
    "6231": {
      "op": "DUP4"
    },
    "6232": {
      "op": "GT"
    },
    "6233": {
      "op": "DUP3"
    },
    "6234": {
      "op": "ISZERO"
    },
    "6235": {
      "op": "ISZERO"
    },
    "6236": {
      "op": "AND"
    },
    "6237": {
      "op": "ISZERO"
    },
    "6238": {
      "op": "PUSH2",
      "value": "0x1869"
    },
    "6241": {
      "op": "JUMPI"
    },
    "6242": {
      "op": "PUSH2",
      "value": "0x1869"
    },
    "6245": {
      "op": "PUSH2",
      "value": "0x16FB"
    },
    "6248": {
      "jump": "i",
      "op": "JUMP"
    },
    "6249": {
      "op": "JUMPDEST"
    },
    "6250": {
      "op": "POP"
    },
    "6251": {
      "op": "MUL"
    },
    "6252": {
      "op": "SWAP1"
    },
    "6253": {
      "jump": "o",
      "op": "JUMP"
    },
    "6254": {
      "op": "JUMPDEST"
    },
    "6255": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6262": {
      "op": "SHL"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6265": {
      "op": "MSTORE"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6270": {
      "op": "MSTORE"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6275": {
      "op": "REVERT"
    },
    "6276": {
      "op": "JUMPDEST"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6279": {
      "op": "DUP2"
    },
    "6280": {
      "op": "PUSH2",
      "value": "0x1893"
    },
    "6283": {
      "op": "JUMPI"
    },
    "6284": {
      "op": "PUSH2",
      "value": "0x1893"
    },
    "6287": {
      "op": "PUSH2",
      "value": "0x16FB"
    },
    "6290": {
      "jump": "i",
      "op": "JUMP"
    },
    "6291": {
      "op": "JUMPDEST"
    },
    "6292": {
      "op": "POP"
    },
    "6293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6295": {
      "op": "NOT"
    },
    "6296": {
      "op": "ADD"
    },
    "6297": {
      "op": "SWAP1"
    },
    "6298": {
      "jump": "o",
      "op": "JUMP"
    },
    "6299": {
      "op": "JUMPDEST"
    },
    "6300": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6310": {
      "op": "MSTORE"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6315": {
      "op": "MSTORE"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6320": {
      "op": "REVERT"
    }
  },
  "sha1": "a922978bd09fd3a841677b91e68a07d82a9f257f",
  "source": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\n\ncontract Barter is IERC721Receiver, AccessControlEnumerable {\n    // struct for what the buyer owes to the seller, and when\n    struct userBorrow {\n        uint256 amountOwed;\n        address buyer;\n        address seller;\n        uint256 timestamp;\n    }\n    //track how much a wallet has borrowed against all thier NFTs\n    mapping(address => uint256) totalborrowedETH;\n\n    // mapping: buyer -> NFT Contract -> tokenID -> struct(money owed, buyer, seller, purchase time)\n    mapping(address => mapping(address => mapping(uint256 => userBorrow)))\n        public loanTracker;\n\n    //Rinkeby WETH contract address\n    address public constant WETH = 0xc778417E063141139Fce010982780140Aa0cD5Ab;\n\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    constructor() {\n        _setupRole(ADMIN_ROLE, msg.sender);\n        _setupRole(ADMIN_ROLE, address(this));\n    }\n\n    modifier onlyOwner() {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"must have admin role\");\n        _;\n    }\n\n    ///@notice function transfers ownership from buyer to seller\n    ///@dev the calling contract/function must approve the transfer to the seller's address\n    function exchangeNFT(\n        address _buyer,\n        address _seller,\n        address _contract,\n        uint256 _tokenID\n    ) public {\n        /*\n        * Security:\n        * ower must approve this contract to move thier NFT so even if\n        someone else calls this function, it only works if user pre-approved it\n        */\n\n        IERC721(_contract).safeTransferFrom(_buyer, _seller, _tokenID);\n    }\n\n    ///@notice function transfers ownership from buyer to this contract to be held as collateral\n    ///@notice buyer will automaticall receive thier NFT back once they repay the item value\n    ///@dev the calling contract/function must approve the transfer to this contract address\n    ///@param _itemValue must be in wei (10**18)\n    function collateralizedPurchase(\n        address _buyer,\n        address _seller,\n        address _contract,\n        uint256 _tokenID,\n        uint256 _itemValue\n    ) public {\n        /*\n        * Security:\n        * NFT ower must approve this contract to move thier NFT so even if\n        someone else calls this function, it only works if user pre-approved it\n        * User can only borrow from one seller at a time\n        * Only the initial buyer will recieve the NFT on repayment\n        */\n\n        // if the seller is zero address, nft is not currently being used as collateral (i.e. no seller has a claim to the nft as collateral)\n        // thus, we transfer the nft and initiate values\n        // otherwise they can borrow against the nft again\n        if (loanTracker[_buyer][_contract][_tokenID].seller == address(0)) {\n            IERC721(_contract).safeTransferFrom(\n                _buyer,\n                address(this),\n                _tokenID\n            );\n            //initiate struct values for new purchase\n            loanTracker[_buyer][_contract][_tokenID].seller = _seller;\n            loanTracker[_buyer][_contract][_tokenID].buyer = _buyer;\n            loanTracker[_buyer][_contract][_tokenID].timestamp = block\n                .timestamp;\n        }\n        // only use nft as collateral for one store at a time\n        require(\n            loanTracker[_buyer][_contract][_tokenID].seller == _seller,\n            \"only use nft as collateral for one store at a time\"\n        );\n        //update struct vlaues for new or old collateralized nft\n        loanTracker[_buyer][_contract][_tokenID].amountOwed += _itemValue;\n        totalborrowedETH[_buyer] += _itemValue;\n    }\n\n    ///@notice a user pays back a debt in WETH only and original buyer recieves ERC721\n    ///@dev the calling contract/function must approve the transfer of ERC20 to the contract address\n    ///@param _amount must be in wei (10**18)\n    function repay(\n        address _buyer,\n        address _contract,\n        uint256 _tokenID,\n        uint256 _amount\n    ) public {\n        //make sure user has enough WETH\n        require(\n            IERC20(WETH).balanceOf(msg.sender) >= _amount,\n            \"not enough WETH to repay\"\n        );\n        require(\n            loanTracker[_buyer][_contract][_tokenID].amountOwed >= _amount,\n            \"Cannot pay back more than you owe\"\n        );\n\n        IERC20(WETH).transferFrom(\n            msg.sender,\n            (loanTracker[msg.sender][_contract][_tokenID].seller),\n            _amount\n        );\n\n        loanTracker[_buyer][_contract][_tokenID].amountOwed -= _amount; //minimum( _amount, loanTracker[_buyer][_contract][_tokenID].amountOwed)\n        totalborrowedETH[_buyer] -= _amount;\n\n        //send NFT if debt is paid\n        if (loanTracker[_buyer][_contract][_tokenID].amountOwed == 0) {\n            IERC721(_contract).safeTransferFrom(\n                address(this),\n                loanTracker[_buyer][_contract][_tokenID].buyer,\n                _tokenID\n            );\n            //reset struct values:\n            delete loanTracker[_buyer][_contract][_tokenID];\n        }\n    }\n\n    ///@notice upon defualt, the store gets th NFT, and the user no longer owes money.\n    function handleDefault(\n        address _buyer,\n        address _contract,\n        uint256 _tokenID\n    ) public onlyOwner {\n        /*\n         * Security:\n         * Only owner can call this right now\n         * Can only be called 30 days after first purchase\n         */\n        require(\n            block.timestamp >\n                (loanTracker[_buyer][_contract][_tokenID].timestamp + 2592000),\n            \"Buyer has minumum 30 days to repay\"\n        );\n\n        IERC721(_contract).safeTransferFrom(\n            address(this),\n            loanTracker[_buyer][_contract][_tokenID].seller,\n            _tokenID\n        );\n        //update total borrow amount\n        totalborrowedETH[_buyer] -= loanTracker[_buyer][_contract][_tokenID]\n            .amountOwed;\n        //reset struct values\n        delete loanTracker[_buyer][_contract][_tokenID];\n    }\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n\n    //_____________________________Helper Functions Begin Here_____________________________//\n\n    // function minimum(uint256 a, uint256 b) internal pure returns (uint256) {\n    //     return a.min(b);\n    // }\n\n    ///@notice returns the total eth quantity owed by a user\n    function totalValueBorrowed(address _buyer) public view returns (uint256) {\n        return totalborrowedETH[_buyer];\n    }\n\n    ///@notice returns value owed on a specific NFT used as collateral\n    function valueBorrowedOneNFT(\n        address _buyer,\n        address _contract,\n        uint256 _tokenID\n    ) public view returns (uint256) {\n        return loanTracker[_buyer][_contract][_tokenID].amountOwed;\n    }\n\n    ///@notice returns address of seller who has an NFT as collateral\n    function sellerCollateralNFT(\n        address _buyer,\n        address _contract,\n        uint256 _tokenID\n    ) public view returns (address) {\n        return loanTracker[_buyer][_contract][_tokenID].seller;\n    }\n\n    function emergencyExit(address _contract, uint256 _tokenID)\n        public\n        onlyOwner\n    {\n        IERC721(_contract).safeTransferFrom(\n            address(this),\n            msg.sender,\n            _tokenID\n        );\n    }\n\n    //add owners to contract\n    function addOwner(address _newOwner) public onlyOwner {\n        _setupRole(ADMIN_ROLE, _newOwner);\n    }\n}\n",
  "sourceMap": "310:7571:12:-:0;;;1075:112;;;;;;;;;-1:-1:-1;1099:34:12;-1:-1:-1;;;;;;;;;;;1122:10:12;1099;:34::i;:::-;1143:37;-1:-1:-1;;;;;;;;;;;1174:4:12;1143:10;:37::i;:::-;310:7571;;6257:110:0;6335:25;6346:4;6352:7;6335:10;:25::i;:::-;6257:110;;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;6861:233:0:-;2995:4;3018:12;;;;;;;;;;;-1:-1:-1;;;;;3018:29:0;;;;;;;;;;;;6939:149;;6982:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6982:29:0;;;;;;;;;:36;;-1:-1:-1;;6982:36:0;7014:4;6982:36;;;7064:12;719:10:7;;640:96;7064:12:0;-1:-1:-1;;;;;7037:40:0;7055:7;-1:-1:-1;;;;;7037:40:0;7049:4;7037:40;;;;;;;;;;6861:233;;:::o;7612:150:11:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:11;;7705:4;:50::i;:::-;7698:57;;7612:150;;;;;:::o;1697:404::-;1760:4;3834:19;;;:12;;;:19;;;;;;1776:319;;-1:-1:-1;1818:23:11;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:11;2072:12;;310:7571:12;;;;;;;",
  "sourcePath": "contracts/Barter.sol",
  "type": "contract"
}